   1               		.file	"keymap_common.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.action_get_macro,"ax",@progbits
  11               		.weak	action_get_macro
  13               	action_get_macro:
  14               	.LVL0:
  15               	.LFB113:
  16               		.file 1 "quantum/keymap_common.c"
   1:quantum/keymap_common.c **** /*
   2:quantum/keymap_common.c **** Copyright 2012-2017 Jun Wako <wakojun@gmail.com>
   3:quantum/keymap_common.c **** 
   4:quantum/keymap_common.c **** This program is free software: you can redistribute it and/or modify
   5:quantum/keymap_common.c **** it under the terms of the GNU General Public License as published by
   6:quantum/keymap_common.c **** the Free Software Foundation, either version 2 of the License, or
   7:quantum/keymap_common.c **** (at your option) any later version.
   8:quantum/keymap_common.c **** 
   9:quantum/keymap_common.c **** This program is distributed in the hope that it will be useful,
  10:quantum/keymap_common.c **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:quantum/keymap_common.c **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:quantum/keymap_common.c **** GNU General Public License for more details.
  13:quantum/keymap_common.c **** 
  14:quantum/keymap_common.c **** You should have received a copy of the GNU General Public License
  15:quantum/keymap_common.c **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:quantum/keymap_common.c **** */
  17:quantum/keymap_common.c **** 
  18:quantum/keymap_common.c **** #include "keymap.h"
  19:quantum/keymap_common.c **** #include "report.h"
  20:quantum/keymap_common.c **** #include "keycode.h"
  21:quantum/keymap_common.c **** #include "action_layer.h"
  22:quantum/keymap_common.c **** #if defined(__AVR__)
  23:quantum/keymap_common.c **** #    include <util/delay.h>
  24:quantum/keymap_common.c **** #    include <stdio.h>
  25:quantum/keymap_common.c **** #endif
  26:quantum/keymap_common.c **** #include "action.h"
  27:quantum/keymap_common.c **** #include "action_macro.h"
  28:quantum/keymap_common.c **** #include "debug.h"
  29:quantum/keymap_common.c **** #include "quantum.h"
  30:quantum/keymap_common.c **** 
  31:quantum/keymap_common.c **** #ifdef BACKLIGHT_ENABLE
  32:quantum/keymap_common.c **** #    include "backlight.h"
  33:quantum/keymap_common.c **** #endif
  34:quantum/keymap_common.c **** 
  35:quantum/keymap_common.c **** #ifdef MIDI_ENABLE
  36:quantum/keymap_common.c **** #    include "process_midi.h"
  37:quantum/keymap_common.c **** #endif
  38:quantum/keymap_common.c **** 
  39:quantum/keymap_common.c **** extern keymap_config_t keymap_config;
  40:quantum/keymap_common.c **** 
  41:quantum/keymap_common.c **** #include <inttypes.h>
  42:quantum/keymap_common.c **** 
  43:quantum/keymap_common.c **** /* converts key to action */
  44:quantum/keymap_common.c **** action_t action_for_key(uint8_t layer, keypos_t key) {
  45:quantum/keymap_common.c ****     // 16bit keycodes - important
  46:quantum/keymap_common.c ****     uint16_t keycode = keymap_key_to_keycode(layer, key);
  47:quantum/keymap_common.c **** 
  48:quantum/keymap_common.c ****     // keycode remapping
  49:quantum/keymap_common.c ****     keycode = keycode_config(keycode);
  50:quantum/keymap_common.c **** 
  51:quantum/keymap_common.c ****     action_t action = {};
  52:quantum/keymap_common.c ****     uint8_t  action_layer, when, mod;
  53:quantum/keymap_common.c **** 
  54:quantum/keymap_common.c ****     (void)action_layer;
  55:quantum/keymap_common.c ****     (void)when;
  56:quantum/keymap_common.c ****     (void)mod;
  57:quantum/keymap_common.c **** 
  58:quantum/keymap_common.c ****     switch (keycode) {
  59:quantum/keymap_common.c ****         case KC_A ... KC_EXSEL:
  60:quantum/keymap_common.c ****         case KC_LCTRL ... KC_RGUI:
  61:quantum/keymap_common.c ****             action.code = ACTION_KEY(keycode);
  62:quantum/keymap_common.c ****             break;
  63:quantum/keymap_common.c **** #ifdef EXTRAKEY_ENABLE
  64:quantum/keymap_common.c ****         case KC_SYSTEM_POWER ... KC_SYSTEM_WAKE:
  65:quantum/keymap_common.c ****             action.code = ACTION_USAGE_SYSTEM(KEYCODE2SYSTEM(keycode));
  66:quantum/keymap_common.c ****             break;
  67:quantum/keymap_common.c ****         case KC_AUDIO_MUTE ... KC_BRIGHTNESS_DOWN:
  68:quantum/keymap_common.c ****             action.code = ACTION_USAGE_CONSUMER(KEYCODE2CONSUMER(keycode));
  69:quantum/keymap_common.c ****             break;
  70:quantum/keymap_common.c **** #endif
  71:quantum/keymap_common.c **** #ifdef MOUSEKEY_ENABLE
  72:quantum/keymap_common.c ****         case KC_MS_UP ... KC_MS_ACCEL2:
  73:quantum/keymap_common.c ****             action.code = ACTION_MOUSEKEY(keycode);
  74:quantum/keymap_common.c ****             break;
  75:quantum/keymap_common.c **** #endif
  76:quantum/keymap_common.c ****         case KC_TRNS:
  77:quantum/keymap_common.c ****             action.code = ACTION_TRANSPARENT;
  78:quantum/keymap_common.c ****             break;
  79:quantum/keymap_common.c ****         case QK_MODS ... QK_MODS_MAX:;
  80:quantum/keymap_common.c ****             // Has a modifier
  81:quantum/keymap_common.c ****             // Split it up
  82:quantum/keymap_common.c ****             action.code = ACTION_MODS_KEY(keycode >> 8, keycode & 0xFF);  // adds modifier to key
  83:quantum/keymap_common.c ****             break;
  84:quantum/keymap_common.c **** #ifndef NO_ACTION_FUNCTION
  85:quantum/keymap_common.c ****         case KC_FN0 ... KC_FN31:
  86:quantum/keymap_common.c ****             action.code = keymap_function_id_to_action(FN_INDEX(keycode));
  87:quantum/keymap_common.c ****             break;
  88:quantum/keymap_common.c ****         case QK_FUNCTION ... QK_FUNCTION_MAX:;
  89:quantum/keymap_common.c ****             // Is a shortcut for function action_layer, pull last 12bits
  90:quantum/keymap_common.c ****             // This means we have 4,096 FN macros at our disposal
  91:quantum/keymap_common.c ****             action.code = keymap_function_id_to_action((int)keycode & 0xFFF);
  92:quantum/keymap_common.c ****             break;
  93:quantum/keymap_common.c **** #endif
  94:quantum/keymap_common.c **** #ifndef NO_ACTION_MACRO
  95:quantum/keymap_common.c ****         case QK_MACRO ... QK_MACRO_MAX:
  96:quantum/keymap_common.c ****             if (keycode & 0x800)  // tap macros have upper bit set
  97:quantum/keymap_common.c ****                 action.code = ACTION_MACRO_TAP(keycode & 0xFF);
  98:quantum/keymap_common.c ****             else
  99:quantum/keymap_common.c ****                 action.code = ACTION_MACRO(keycode & 0xFF);
 100:quantum/keymap_common.c ****             break;
 101:quantum/keymap_common.c **** #endif
 102:quantum/keymap_common.c **** #ifndef NO_ACTION_LAYER
 103:quantum/keymap_common.c ****         case QK_LAYER_TAP ... QK_LAYER_TAP_MAX:
 104:quantum/keymap_common.c ****             action.code = ACTION_LAYER_TAP_KEY((keycode >> 0x8) & 0xF, keycode & 0xFF);
 105:quantum/keymap_common.c ****             break;
 106:quantum/keymap_common.c ****         case QK_TO ... QK_TO_MAX:;
 107:quantum/keymap_common.c ****             // Layer set "GOTO"
 108:quantum/keymap_common.c ****             when         = (keycode >> 0x4) & 0x3;
 109:quantum/keymap_common.c ****             action_layer = keycode & 0xF;
 110:quantum/keymap_common.c ****             action.code  = ACTION_LAYER_SET(action_layer, when);
 111:quantum/keymap_common.c ****             break;
 112:quantum/keymap_common.c ****         case QK_MOMENTARY ... QK_MOMENTARY_MAX:;
 113:quantum/keymap_common.c ****             // Momentary action_layer
 114:quantum/keymap_common.c ****             action_layer = keycode & 0xFF;
 115:quantum/keymap_common.c ****             action.code  = ACTION_LAYER_MOMENTARY(action_layer);
 116:quantum/keymap_common.c ****             break;
 117:quantum/keymap_common.c ****         case QK_DEF_LAYER ... QK_DEF_LAYER_MAX:;
 118:quantum/keymap_common.c ****             // Set default action_layer
 119:quantum/keymap_common.c ****             action_layer = keycode & 0xFF;
 120:quantum/keymap_common.c ****             action.code  = ACTION_DEFAULT_LAYER_SET(action_layer);
 121:quantum/keymap_common.c ****             break;
 122:quantum/keymap_common.c ****         case QK_TOGGLE_LAYER ... QK_TOGGLE_LAYER_MAX:;
 123:quantum/keymap_common.c ****             // Set toggle
 124:quantum/keymap_common.c ****             action_layer = keycode & 0xFF;
 125:quantum/keymap_common.c ****             action.code  = ACTION_LAYER_TOGGLE(action_layer);
 126:quantum/keymap_common.c ****             break;
 127:quantum/keymap_common.c **** #endif
 128:quantum/keymap_common.c **** #ifndef NO_ACTION_ONESHOT
 129:quantum/keymap_common.c ****         case QK_ONE_SHOT_LAYER ... QK_ONE_SHOT_LAYER_MAX:;
 130:quantum/keymap_common.c ****             // OSL(action_layer) - One-shot action_layer
 131:quantum/keymap_common.c ****             action_layer = keycode & 0xFF;
 132:quantum/keymap_common.c ****             action.code  = ACTION_LAYER_ONESHOT(action_layer);
 133:quantum/keymap_common.c ****             break;
 134:quantum/keymap_common.c ****         case QK_ONE_SHOT_MOD ... QK_ONE_SHOT_MOD_MAX:;
 135:quantum/keymap_common.c ****             // OSM(mod) - One-shot mod
 136:quantum/keymap_common.c ****             mod         = mod_config(keycode & 0xFF);
 137:quantum/keymap_common.c ****             action.code = ACTION_MODS_ONESHOT(mod);
 138:quantum/keymap_common.c ****             break;
 139:quantum/keymap_common.c **** #endif
 140:quantum/keymap_common.c **** #ifndef NO_ACTION_LAYER
 141:quantum/keymap_common.c ****         case QK_LAYER_TAP_TOGGLE ... QK_LAYER_TAP_TOGGLE_MAX:
 142:quantum/keymap_common.c ****             action.code = ACTION_LAYER_TAP_TOGGLE(keycode & 0xFF);
 143:quantum/keymap_common.c ****             break;
 144:quantum/keymap_common.c ****         case QK_LAYER_MOD ... QK_LAYER_MOD_MAX:
 145:quantum/keymap_common.c ****             mod          = mod_config(keycode & 0xF);
 146:quantum/keymap_common.c ****             action_layer = (keycode >> 4) & 0xF;
 147:quantum/keymap_common.c ****             action.code  = ACTION_LAYER_MODS(action_layer, mod);
 148:quantum/keymap_common.c ****             break;
 149:quantum/keymap_common.c **** #endif
 150:quantum/keymap_common.c **** #ifndef NO_ACTION_TAPPING
 151:quantum/keymap_common.c ****         case QK_MOD_TAP ... QK_MOD_TAP_MAX:
 152:quantum/keymap_common.c ****             mod         = mod_config((keycode >> 0x8) & 0x1F);
 153:quantum/keymap_common.c ****             action.code = ACTION_MODS_TAP_KEY(mod, keycode & 0xFF);
 154:quantum/keymap_common.c ****             break;
 155:quantum/keymap_common.c **** #endif
 156:quantum/keymap_common.c **** #ifdef SWAP_HANDS_ENABLE
 157:quantum/keymap_common.c ****         case QK_SWAP_HANDS ... QK_SWAP_HANDS_MAX:
 158:quantum/keymap_common.c ****             action.code = ACTION(ACT_SWAP_HANDS, keycode & 0xff);
 159:quantum/keymap_common.c ****             break;
 160:quantum/keymap_common.c **** #endif
 161:quantum/keymap_common.c **** 
 162:quantum/keymap_common.c ****         default:
 163:quantum/keymap_common.c ****             action.code = ACTION_NO;
 164:quantum/keymap_common.c ****             break;
 165:quantum/keymap_common.c ****     }
 166:quantum/keymap_common.c ****     return action;
 167:quantum/keymap_common.c **** }
 168:quantum/keymap_common.c **** 
 169:quantum/keymap_common.c **** __attribute__((weak)) const uint16_t PROGMEM fn_actions[] = {
 170:quantum/keymap_common.c **** 
 171:quantum/keymap_common.c **** };
 172:quantum/keymap_common.c **** 
 173:quantum/keymap_common.c **** /* Macro */
 174:quantum/keymap_common.c **** __attribute__((weak)) const macro_t *action_get_macro(keyrecord_t *record, uint8_t id, uint8_t opt)
  17               		.loc 1 174 101 view -0
  18               		.cfi_startproc
  19               	/* prologue: function */
  20               	/* frame size = 0 */
  21               	/* stack size = 0 */
  22               	.L__stack_usage = 0
  23               		.loc 1 174 103 view .LVU1
  24               		.loc 1 174 1 is_stmt 0 view .LVU2
  25 0000 90E0      		ldi r25,0
  26 0002 80E0      		ldi r24,0
  27               	.LVL1:
  28               	/* epilogue start */
  29               		.loc 1 174 1 view .LVU3
  30 0004 0895      		ret
  31               		.cfi_endproc
  32               	.LFE113:
  34               		.section	.text.action_function,"ax",@progbits
  35               		.weak	action_function
  37               	action_function:
  38               	.LVL2:
  39               	.LFB114:
 175:quantum/keymap_common.c **** 
 176:quantum/keymap_common.c **** /* Function */
 177:quantum/keymap_common.c **** __attribute__((weak)) void action_function(keyrecord_t *record, uint8_t id, uint8_t opt) {}
  40               		.loc 1 177 90 is_stmt 1 view -0
  41               		.cfi_startproc
  42               	/* prologue: function */
  43               	/* frame size = 0 */
  44               	/* stack size = 0 */
  45               	.L__stack_usage = 0
  46               		.loc 1 177 91 view .LVU5
  47               	/* epilogue start */
  48               		.loc 1 177 1 is_stmt 0 view .LVU6
  49 0000 0895      		ret
  50               		.cfi_endproc
  51               	.LFE114:
  53               		.section	.text.keymap_key_to_keycode,"ax",@progbits
  54               		.weak	keymap_key_to_keycode
  56               	keymap_key_to_keycode:
  57               	.LVL3:
  58               	.LFB115:
 178:quantum/keymap_common.c **** 
 179:quantum/keymap_common.c **** // translates key to keycode
 180:quantum/keymap_common.c **** __attribute__((weak)) uint16_t keymap_key_to_keycode(uint8_t layer, keypos_t key) {
  59               		.loc 1 180 83 is_stmt 1 view -0
  60               		.cfi_startproc
  61               	/* prologue: function */
  62               	/* frame size = 0 */
  63               	/* stack size = 0 */
  64               	.L__stack_usage = 0
  65               		.loc 1 180 83 is_stmt 0 view .LVU8
  66 0000 972F      		mov r25,r23
 181:quantum/keymap_common.c ****     // Read entire word (16bits)
 182:quantum/keymap_common.c ****     return pgm_read_word(&keymaps[(layer)][(key.row)][(key.col)]);
  67               		.loc 1 182 5 is_stmt 1 view .LVU9
  68               	.LBB2:
  69               		.loc 1 182 12 view .LVU10
  70 0002 70E0      		ldi r23,0
  71               		.loc 1 182 12 is_stmt 0 view .LVU11
  72 0004 26E0      		ldi r18,lo8(6)
  73 0006 929F      		mul r25,r18
  74 0008 600D      		add r22,r0
  75 000a 711D      		adc r23,r1
  76 000c 1124      		clr __zero_reg__
  77               	.LVL4:
  78               		.loc 1 182 12 view .LVU12
  79 000e FB01      		movw r30,r22
  80 0010 94E5      		ldi r25,lo8(84)
  81 0012 899F      		mul r24,r25
  82 0014 E00D      		add r30,r0
  83 0016 F11D      		adc r31,r1
  84 0018 1124      		clr __zero_reg__
  85 001a EE0F      		lsl r30
  86 001c FF1F      		rol r31
  87               	.LVL5:
  88               		.loc 1 182 12 view .LVU13
  89 001e E050      		subi r30,lo8(-(keymaps))
  90 0020 F040      		sbci r31,hi8(-(keymaps))
  91               	.LVL6:
  92               		.loc 1 182 12 is_stmt 1 view .LVU14
  93               		.loc 1 182 12 view .LVU15
  94               	/* #APP */
  95               	 ;  182 "quantum/keymap_common.c" 1
  96 0022 8591      		lpm r24, Z+
  97 0024 9491      		lpm r25, Z
  98               		
  99               	 ;  0 "" 2
 100               	.LVL7:
 101               		.loc 1 182 12 view .LVU16
 102               	/* #NOAPP */
 103               	/* epilogue start */
 104               	.LBE2:
 183:quantum/keymap_common.c **** }
 105               		.loc 1 183 1 is_stmt 0 view .LVU17
 106 0026 0895      		ret
 107               		.cfi_endproc
 108               	.LFE115:
 110               		.section	.text.action_for_key,"ax",@progbits
 111               	.global	action_for_key
 113               	action_for_key:
 114               	.LVL8:
 115               	.LFB112:
  44:quantum/keymap_common.c ****     // 16bit keycodes - important
 116               		.loc 1 44 54 is_stmt 1 view -0
 117               		.cfi_startproc
  44:quantum/keymap_common.c ****     // 16bit keycodes - important
 118               		.loc 1 44 54 is_stmt 0 view .LVU19
 119 0000 CF93      		push r28
 120               	.LCFI0:
 121               		.cfi_def_cfa_offset 3
 122               		.cfi_offset 28, -2
 123 0002 DF93      		push r29
 124               	.LCFI1:
 125               		.cfi_def_cfa_offset 4
 126               		.cfi_offset 29, -3
 127               	/* prologue: function */
 128               	/* frame size = 0 */
 129               	/* stack size = 2 */
 130               	.L__stack_usage = 2
  46:quantum/keymap_common.c **** 
 131               		.loc 1 46 5 is_stmt 1 view .LVU20
  46:quantum/keymap_common.c **** 
 132               		.loc 1 46 24 is_stmt 0 view .LVU21
 133 0004 0E94 0000 		call keymap_key_to_keycode
 134               	.LVL9:
  49:quantum/keymap_common.c **** 
 135               		.loc 1 49 5 is_stmt 1 view .LVU22
  49:quantum/keymap_common.c **** 
 136               		.loc 1 49 15 is_stmt 0 view .LVU23
 137 0008 0E94 0000 		call keycode_config
 138               	.LVL10:
  49:quantum/keymap_common.c **** 
 139               		.loc 1 49 15 view .LVU24
 140 000c EC01      		movw r28,r24
 141               	.LVL11:
  51:quantum/keymap_common.c ****     uint8_t  action_layer, when, mod;
 142               		.loc 1 51 5 is_stmt 1 view .LVU25
  52:quantum/keymap_common.c **** 
 143               		.loc 1 52 5 view .LVU26
  54:quantum/keymap_common.c ****     (void)when;
 144               		.loc 1 54 5 view .LVU27
  55:quantum/keymap_common.c ****     (void)mod;
 145               		.loc 1 55 5 view .LVU28
  56:quantum/keymap_common.c **** 
 146               		.loc 1 56 5 view .LVU29
  58:quantum/keymap_common.c ****         case KC_A ... KC_EXSEL:
 147               		.loc 1 58 5 view .LVU30
 148 000e 8115      		cp r24,__zero_reg__
 149 0010 22E5      		ldi r18,82
 150 0012 9207      		cpc r25,r18
 151 0014 00F0      		brlo .+2
 152 0016 00C0      		rjmp .L5
 153 0018 8115      		cp r24,__zero_reg__
 154 001a 31E5      		ldi r19,81
 155 001c 9307      		cpc r25,r19
 156 001e 00F0      		brlo .+2
 157 0020 00C0      		rjmp .L6
 158 0022 883E      		cpi r24,-24
 159 0024 9105      		cpc r25,__zero_reg__
 160 0026 00F4      		brsh .L7
 161 0028 803E      		cpi r24,-32
 162 002a 9105      		cpc r25,__zero_reg__
 163 002c 00F0      		brlo .+2
 164 002e 00C0      		rjmp .L8
 165 0030 883A      		cpi r24,-88
 166 0032 9105      		cpc r25,__zero_reg__
 167 0034 00F4      		brsh .L9
 168 0036 853A      		cpi r24,-91
 169 0038 9105      		cpc r25,__zero_reg__
 170 003a 00F0      		brlo .+2
 171 003c 00C0      		rjmp .L10
 172 003e 8130      		cpi r24,1
 173 0040 9105      		cpc r25,__zero_reg__
 174 0042 01F4      		brne .+2
 175 0044 00C0      		rjmp .L8
 176 0046 0097      		sbiw r24,0
 177 0048 01F4      		brne .+2
 178 004a 00C0      		rjmp .L8
 179 004c 0497      		sbiw r24,4
 180 004e 00F0      		brlo .+2
 181 0050 00C0      		rjmp .L8
 182               	.LVL12:
 183               	.L33:
 163:quantum/keymap_common.c ****             break;
 184               		.loc 1 163 25 is_stmt 0 view .LVU31
 185 0052 D0E0      		ldi r29,0
 186 0054 C0E0      		ldi r28,0
 187 0056 00C0      		rjmp .L8
 188               	.LVL13:
 189               	.L9:
  58:quantum/keymap_common.c ****         case KC_A ... KC_EXSEL:
 190               		.loc 1 58 5 view .LVU32
 191 0058 8F3B      		cpi r24,-65
 192 005a 9105      		cpc r25,__zero_reg__
 193 005c 00F4      		brsh .L33
  68:quantum/keymap_common.c ****             break;
 194               		.loc 1 68 13 is_stmt 1 view .LVU33
 195               	.LVL14:
 196               	.LBB7:
 197               	.LBI7:
 198               		.file 2 "tmk_core/common/report.h"
   1:tmk_core/common/report.h **** /*
   2:tmk_core/common/report.h **** Copyright 2011,2012 Jun Wako <wakojun@gmail.com>
   3:tmk_core/common/report.h **** 
   4:tmk_core/common/report.h **** This program is free software: you can redistribute it and/or modify
   5:tmk_core/common/report.h **** it under the terms of the GNU General Public License as published by
   6:tmk_core/common/report.h **** the Free Software Foundation, either version 2 of the License, or
   7:tmk_core/common/report.h **** (at your option) any later version.
   8:tmk_core/common/report.h **** 
   9:tmk_core/common/report.h **** This program is distributed in the hope that it will be useful,
  10:tmk_core/common/report.h **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:tmk_core/common/report.h **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:tmk_core/common/report.h **** GNU General Public License for more details.
  13:tmk_core/common/report.h **** 
  14:tmk_core/common/report.h **** You should have received a copy of the GNU General Public License
  15:tmk_core/common/report.h **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:tmk_core/common/report.h **** */
  17:tmk_core/common/report.h **** 
  18:tmk_core/common/report.h **** #pragma once
  19:tmk_core/common/report.h **** 
  20:tmk_core/common/report.h **** #include <stdint.h>
  21:tmk_core/common/report.h **** #include <stdbool.h>
  22:tmk_core/common/report.h **** #include "keycode.h"
  23:tmk_core/common/report.h **** 
  24:tmk_core/common/report.h **** // clang-format off
  25:tmk_core/common/report.h **** 
  26:tmk_core/common/report.h **** /* HID report IDs */
  27:tmk_core/common/report.h **** enum hid_report_ids {
  28:tmk_core/common/report.h ****     REPORT_ID_KEYBOARD = 1,
  29:tmk_core/common/report.h ****     REPORT_ID_MOUSE,
  30:tmk_core/common/report.h ****     REPORT_ID_SYSTEM,
  31:tmk_core/common/report.h ****     REPORT_ID_CONSUMER,
  32:tmk_core/common/report.h ****     REPORT_ID_NKRO,
  33:tmk_core/common/report.h ****     REPORT_ID_JOYSTICK
  34:tmk_core/common/report.h **** };
  35:tmk_core/common/report.h **** 
  36:tmk_core/common/report.h **** /* Mouse buttons */
  37:tmk_core/common/report.h **** enum mouse_buttons {
  38:tmk_core/common/report.h ****     MOUSE_BTN1 = (1 << 0),
  39:tmk_core/common/report.h ****     MOUSE_BTN2 = (1 << 1),
  40:tmk_core/common/report.h ****     MOUSE_BTN3 = (1 << 2),
  41:tmk_core/common/report.h ****     MOUSE_BTN4 = (1 << 3),
  42:tmk_core/common/report.h ****     MOUSE_BTN5 = (1 << 4)
  43:tmk_core/common/report.h **** };
  44:tmk_core/common/report.h **** 
  45:tmk_core/common/report.h **** /* Consumer Page (0x0C)
  46:tmk_core/common/report.h ****  *
  47:tmk_core/common/report.h ****  * See https://www.usb.org/sites/default/files/documents/hut1_12v2.pdf#page=75
  48:tmk_core/common/report.h ****  */
  49:tmk_core/common/report.h **** enum consumer_usages {
  50:tmk_core/common/report.h ****     // 15.5 Display Controls
  51:tmk_core/common/report.h ****     SNAPSHOT               = 0x065,
  52:tmk_core/common/report.h ****     BRIGHTNESS_UP          = 0x06F, // https://www.usb.org/sites/default/files/hutrr41_0.pdf
  53:tmk_core/common/report.h ****     BRIGHTNESS_DOWN        = 0x070,
  54:tmk_core/common/report.h ****     // 15.7 Transport Controls
  55:tmk_core/common/report.h ****     TRANSPORT_RECORD       = 0x0B2,
  56:tmk_core/common/report.h ****     TRANSPORT_FAST_FORWARD = 0x0B3,
  57:tmk_core/common/report.h ****     TRANSPORT_REWIND       = 0x0B4,
  58:tmk_core/common/report.h ****     TRANSPORT_NEXT_TRACK   = 0x0B5,
  59:tmk_core/common/report.h ****     TRANSPORT_PREV_TRACK   = 0x0B6,
  60:tmk_core/common/report.h ****     TRANSPORT_STOP         = 0x0B7,
  61:tmk_core/common/report.h ****     TRANSPORT_EJECT        = 0x0B8,
  62:tmk_core/common/report.h ****     TRANSPORT_RANDOM_PLAY  = 0x0B9,
  63:tmk_core/common/report.h ****     TRANSPORT_STOP_EJECT   = 0x0CC,
  64:tmk_core/common/report.h ****     TRANSPORT_PLAY_PAUSE   = 0x0CD,
  65:tmk_core/common/report.h ****     // 15.9.1 Audio Controls - Volume
  66:tmk_core/common/report.h ****     AUDIO_MUTE             = 0x0E2,
  67:tmk_core/common/report.h ****     AUDIO_VOL_UP           = 0x0E9,
  68:tmk_core/common/report.h ****     AUDIO_VOL_DOWN         = 0x0EA,
  69:tmk_core/common/report.h ****     // 15.15 Application Launch Buttons
  70:tmk_core/common/report.h ****     AL_CC_CONFIG           = 0x183,
  71:tmk_core/common/report.h ****     AL_EMAIL               = 0x18A,
  72:tmk_core/common/report.h ****     AL_CALCULATOR          = 0x192,
  73:tmk_core/common/report.h ****     AL_LOCAL_BROWSER       = 0x194,
  74:tmk_core/common/report.h ****     AL_LOCK                = 0x19E,
  75:tmk_core/common/report.h ****     AL_CONTROL_PANEL       = 0x19F,
  76:tmk_core/common/report.h ****     AL_ASSISTANT           = 0x1CB,
  77:tmk_core/common/report.h ****     AL_KEYBOARD_LAYOUT     = 0x1AE,
  78:tmk_core/common/report.h ****     // 15.16 Generic GUI Application Controls
  79:tmk_core/common/report.h ****     AC_MINIMIZE            = 0x206,
  80:tmk_core/common/report.h ****     AC_SEARCH              = 0x221,
  81:tmk_core/common/report.h ****     AC_HOME                = 0x223,
  82:tmk_core/common/report.h ****     AC_BACK                = 0x224,
  83:tmk_core/common/report.h ****     AC_FORWARD             = 0x225,
  84:tmk_core/common/report.h ****     AC_STOP                = 0x226,
  85:tmk_core/common/report.h ****     AC_REFRESH             = 0x227,
  86:tmk_core/common/report.h ****     AC_BOOKMARKS           = 0x22A
  87:tmk_core/common/report.h **** };
  88:tmk_core/common/report.h **** 
  89:tmk_core/common/report.h **** /* Generic Desktop Page (0x01)
  90:tmk_core/common/report.h ****  *
  91:tmk_core/common/report.h ****  * See https://www.usb.org/sites/default/files/documents/hut1_12v2.pdf#page=26
  92:tmk_core/common/report.h ****  */
  93:tmk_core/common/report.h **** enum desktop_usages {
  94:tmk_core/common/report.h ****     // 4.5.1 System Controls - Power Controls
  95:tmk_core/common/report.h ****     SYSTEM_POWER_DOWN = 0x81,
  96:tmk_core/common/report.h ****     SYSTEM_SLEEP      = 0x82,
  97:tmk_core/common/report.h ****     SYSTEM_WAKE_UP    = 0x83
  98:tmk_core/common/report.h **** };
  99:tmk_core/common/report.h **** 
 100:tmk_core/common/report.h **** // clang-format on
 101:tmk_core/common/report.h **** 
 102:tmk_core/common/report.h **** #define NKRO_SHARED_EP
 103:tmk_core/common/report.h **** /* key report size(NKRO or boot mode) */
 104:tmk_core/common/report.h **** #if defined(NKRO_ENABLE)
 105:tmk_core/common/report.h **** #    if defined(PROTOCOL_LUFA) || defined(PROTOCOL_CHIBIOS)
 106:tmk_core/common/report.h **** #        include "protocol/usb_descriptor.h"
 107:tmk_core/common/report.h **** #        define KEYBOARD_REPORT_BITS (SHARED_EPSIZE - 2)
 108:tmk_core/common/report.h **** #    elif defined(PROTOCOL_ARM_ATSAM)
 109:tmk_core/common/report.h **** #        include "protocol/arm_atsam/usb/udi_device_epsize.h"
 110:tmk_core/common/report.h **** #        define KEYBOARD_REPORT_BITS (NKRO_EPSIZE - 1)
 111:tmk_core/common/report.h **** #        undef NKRO_SHARED_EP
 112:tmk_core/common/report.h **** #        undef MOUSE_SHARED_EP
 113:tmk_core/common/report.h **** #    else
 114:tmk_core/common/report.h **** #        error "NKRO not supported with this protocol"
 115:tmk_core/common/report.h **** #    endif
 116:tmk_core/common/report.h **** #endif
 117:tmk_core/common/report.h **** 
 118:tmk_core/common/report.h **** #ifdef KEYBOARD_SHARED_EP
 119:tmk_core/common/report.h **** #    define KEYBOARD_REPORT_SIZE 9
 120:tmk_core/common/report.h **** #else
 121:tmk_core/common/report.h **** #    define KEYBOARD_REPORT_SIZE 8
 122:tmk_core/common/report.h **** #endif
 123:tmk_core/common/report.h **** 
 124:tmk_core/common/report.h **** #define KEYBOARD_REPORT_KEYS 6
 125:tmk_core/common/report.h **** 
 126:tmk_core/common/report.h **** /* VUSB hardcodes keyboard and mouse+extrakey only */
 127:tmk_core/common/report.h **** #if defined(PROTOCOL_VUSB)
 128:tmk_core/common/report.h **** #    undef KEYBOARD_SHARED_EP
 129:tmk_core/common/report.h **** #    undef MOUSE_SHARED_EP
 130:tmk_core/common/report.h **** #endif
 131:tmk_core/common/report.h **** 
 132:tmk_core/common/report.h **** #ifdef __cplusplus
 133:tmk_core/common/report.h **** extern "C" {
 134:tmk_core/common/report.h **** #endif
 135:tmk_core/common/report.h **** 
 136:tmk_core/common/report.h **** /*
 137:tmk_core/common/report.h ****  * keyboard report is 8-byte array retains state of 8 modifiers and 6 keys.
 138:tmk_core/common/report.h ****  *
 139:tmk_core/common/report.h ****  * byte |0       |1       |2       |3       |4       |5       |6       |7
 140:tmk_core/common/report.h ****  * -----+--------+--------+--------+--------+--------+--------+--------+--------
 141:tmk_core/common/report.h ****  * desc |mods    |reserved|keys[0] |keys[1] |keys[2] |keys[3] |keys[4] |keys[5]
 142:tmk_core/common/report.h ****  *
 143:tmk_core/common/report.h ****  * It is exended to 16 bytes to retain 120keys+8mods when NKRO mode.
 144:tmk_core/common/report.h ****  *
 145:tmk_core/common/report.h ****  * byte |0       |1       |2       |3       |4       |5       |6       |7        ... |15
 146:tmk_core/common/report.h ****  * -----+--------+--------+--------+--------+--------+--------+--------+--------     +--------
 147:tmk_core/common/report.h ****  * desc |mods    |bits[0] |bits[1] |bits[2] |bits[3] |bits[4] |bits[5] |bits[6]  ... |bit[14]
 148:tmk_core/common/report.h ****  *
 149:tmk_core/common/report.h ****  * mods retains state of 8 modifiers.
 150:tmk_core/common/report.h ****  *
 151:tmk_core/common/report.h ****  *  bit |0       |1       |2       |3       |4       |5       |6       |7
 152:tmk_core/common/report.h ****  * -----+--------+--------+--------+--------+--------+--------+--------+--------
 153:tmk_core/common/report.h ****  * desc |Lcontrol|Lshift  |Lalt    |Lgui    |Rcontrol|Rshift  |Ralt    |Rgui
 154:tmk_core/common/report.h ****  *
 155:tmk_core/common/report.h ****  */
 156:tmk_core/common/report.h **** typedef union {
 157:tmk_core/common/report.h ****     uint8_t raw[KEYBOARD_REPORT_SIZE];
 158:tmk_core/common/report.h ****     struct {
 159:tmk_core/common/report.h **** #ifdef KEYBOARD_SHARED_EP
 160:tmk_core/common/report.h ****         uint8_t report_id;
 161:tmk_core/common/report.h **** #endif
 162:tmk_core/common/report.h ****         uint8_t mods;
 163:tmk_core/common/report.h ****         uint8_t reserved;
 164:tmk_core/common/report.h ****         uint8_t keys[KEYBOARD_REPORT_KEYS];
 165:tmk_core/common/report.h ****     };
 166:tmk_core/common/report.h **** #ifdef NKRO_ENABLE
 167:tmk_core/common/report.h ****     struct nkro_report {
 168:tmk_core/common/report.h **** #    ifdef NKRO_SHARED_EP
 169:tmk_core/common/report.h ****         uint8_t report_id;
 170:tmk_core/common/report.h **** #    endif
 171:tmk_core/common/report.h ****         uint8_t mods;
 172:tmk_core/common/report.h ****         uint8_t bits[KEYBOARD_REPORT_BITS];
 173:tmk_core/common/report.h ****     } nkro;
 174:tmk_core/common/report.h **** #endif
 175:tmk_core/common/report.h **** } __attribute__((packed)) report_keyboard_t;
 176:tmk_core/common/report.h **** 
 177:tmk_core/common/report.h **** typedef struct {
 178:tmk_core/common/report.h ****     uint8_t  report_id;
 179:tmk_core/common/report.h ****     uint16_t usage;
 180:tmk_core/common/report.h **** } __attribute__((packed)) report_extra_t;
 181:tmk_core/common/report.h **** 
 182:tmk_core/common/report.h **** typedef struct {
 183:tmk_core/common/report.h **** #ifdef MOUSE_SHARED_EP
 184:tmk_core/common/report.h ****     uint8_t report_id;
 185:tmk_core/common/report.h **** #endif
 186:tmk_core/common/report.h ****     uint8_t buttons;
 187:tmk_core/common/report.h ****     int8_t  x;
 188:tmk_core/common/report.h ****     int8_t  y;
 189:tmk_core/common/report.h ****     int8_t  v;
 190:tmk_core/common/report.h ****     int8_t  h;
 191:tmk_core/common/report.h **** } __attribute__((packed)) report_mouse_t;
 192:tmk_core/common/report.h **** 
 193:tmk_core/common/report.h **** typedef struct {
 194:tmk_core/common/report.h **** #if JOYSTICK_AXES_COUNT > 0
 195:tmk_core/common/report.h ****     int8_t axes[JOYSTICK_AXES_COUNT];
 196:tmk_core/common/report.h **** #endif
 197:tmk_core/common/report.h **** 
 198:tmk_core/common/report.h **** #if JOYSTICK_BUTTON_COUNT > 0
 199:tmk_core/common/report.h ****     uint8_t buttons[(JOYSTICK_BUTTON_COUNT - 1) / 8 + 1];
 200:tmk_core/common/report.h **** #endif
 201:tmk_core/common/report.h **** } __attribute__((packed)) joystick_report_t;
 202:tmk_core/common/report.h **** 
 203:tmk_core/common/report.h **** /* keycode to system usage */
 204:tmk_core/common/report.h **** static inline uint16_t KEYCODE2SYSTEM(uint8_t key) {
 205:tmk_core/common/report.h ****     switch (key) {
 206:tmk_core/common/report.h ****         case KC_SYSTEM_POWER:
 207:tmk_core/common/report.h ****             return SYSTEM_POWER_DOWN;
 208:tmk_core/common/report.h ****         case KC_SYSTEM_SLEEP:
 209:tmk_core/common/report.h ****             return SYSTEM_SLEEP;
 210:tmk_core/common/report.h ****         case KC_SYSTEM_WAKE:
 211:tmk_core/common/report.h ****             return SYSTEM_WAKE_UP;
 212:tmk_core/common/report.h ****         default:
 213:tmk_core/common/report.h ****             return 0;
 214:tmk_core/common/report.h ****     }
 215:tmk_core/common/report.h **** }
 216:tmk_core/common/report.h **** 
 217:tmk_core/common/report.h **** /* keycode to consumer usage */
 218:tmk_core/common/report.h **** static inline uint16_t KEYCODE2CONSUMER(uint8_t key) {
 199               		.loc 2 218 24 view .LVU34
 200               	.LBE7:
 219:tmk_core/common/report.h ****     switch (key) {
 201               		.loc 2 219 5 view .LVU35
  68:quantum/keymap_common.c ****             break;
 202               		.loc 1 68 27 is_stmt 0 view .LVU36
 203 005e C85A      		subi r28,lo8(-(88))
 204 0060 D0E0      		ldi r29,0
 205 0062 CC0F      		lsl r28
 206 0064 DD1F      		rol r29
 207 0066 C050      		subi r28,lo8(-(CSWTCH.1))
 208 0068 D040      		sbci r29,hi8(-(CSWTCH.1))
 209 006a 0990      		ld __tmp_reg__,Y+
 210 006c D881      		ld r29,Y
 211 006e C02D      		mov r28,__tmp_reg__
 212               	.LVL15:
  68:quantum/keymap_common.c ****             break;
 213               		.loc 1 68 27 view .LVU37
 214 0070 D464      		ori r29,68
 215               	.LVL16:
  69:quantum/keymap_common.c **** #endif
 216               		.loc 1 69 13 is_stmt 1 view .LVU38
 217 0072 00C0      		rjmp .L8
 218               	.LVL17:
 219               	.L7:
  58:quantum/keymap_common.c ****         case KC_A ... KC_EXSEL:
 220               		.loc 1 58 5 is_stmt 0 view .LVU39
 221 0074 8115      		cp r24,__zero_reg__
 222 0076 9042      		sbci r25,32
 223 0078 00F4      		brsh .L12
 224 007a C115      		cp r28,__zero_reg__
 225 007c 81E0      		ldi r24,1
 226 007e D807      		cpc r29,r24
 227               	.LVL18:
  58:quantum/keymap_common.c ****         case KC_A ... KC_EXSEL:
 228               		.loc 1 58 5 view .LVU40
 229 0080 00F0      		brlo .+2
 230 0082 00C0      		rjmp .L8
 231 0084 C03F      		cpi r28,-16
 232 0086 D105      		cpc r29,__zero_reg__
 233 0088 00F0      		brlo .L33
  73:quantum/keymap_common.c ****             break;
 234               		.loc 1 73 13 is_stmt 1 view .LVU41
 235               	.LVL19:
  73:quantum/keymap_common.c ****             break;
 236               		.loc 1 73 27 is_stmt 0 view .LVU42
 237 008a D065      		ori r29,80
 238               	.LVL20:
  74:quantum/keymap_common.c **** #endif
 239               		.loc 1 74 13 is_stmt 1 view .LVU43
 240 008c 00C0      		rjmp .L8
 241               	.LVL21:
 242               	.L12:
  58:quantum/keymap_common.c ****         case KC_A ... KC_EXSEL:
 243               		.loc 1 58 5 is_stmt 0 view .LVU44
 244 008e C115      		cp r28,__zero_reg__
 245 0090 90E4      		ldi r25,64
 246 0092 D907      		cpc r29,r25
 247 0094 00F0      		brlo .L33
 248 0096 C115      		cp r28,__zero_reg__
 249 0098 20E5      		ldi r18,80
 250 009a D207      		cpc r29,r18
 251 009c 00F0      		brlo .+2
 252 009e 00C0      		rjmp .L41
 104:quantum/keymap_common.c ****             break;
 253               		.loc 1 104 13 is_stmt 1 view .LVU45
 104:quantum/keymap_common.c ****             break;
 254               		.loc 1 104 27 is_stmt 0 view .LVU46
 255 00a0 DF70      		andi r29,15
 256               	.LVL22:
 104:quantum/keymap_common.c ****             break;
 257               		.loc 1 104 27 view .LVU47
 258 00a2 D06A      		ori r29,160
 259               	.LVL23:
 105:quantum/keymap_common.c ****         case QK_TO ... QK_TO_MAX:;
 260               		.loc 1 105 13 is_stmt 1 view .LVU48
 261 00a4 00C0      		rjmp .L8
 262               	.LVL24:
 263               	.L5:
  58:quantum/keymap_common.c ****         case KC_A ... KC_EXSEL:
 264               		.loc 1 58 5 is_stmt 0 view .LVU49
 265 00a6 8115      		cp r24,__zero_reg__
 266 00a8 36E5      		ldi r19,86
 267 00aa 9307      		cpc r25,r19
 268 00ac 00F4      		brsh .L16
 269 00ae 8115      		cp r24,__zero_reg__
 270 00b0 45E5      		ldi r20,85
 271 00b2 9407      		cpc r25,r20
 272 00b4 00F0      		brlo .+2
 273 00b6 00C0      		rjmp .L17
 274 00b8 C115      		cp r28,__zero_reg__
 275 00ba 84E5      		ldi r24,84
 276 00bc D807      		cpc r29,r24
 277               	.LVL25:
  58:quantum/keymap_common.c ****         case KC_A ... KC_EXSEL:
 278               		.loc 1 58 5 view .LVU50
 279 00be 00F0      		brlo .+2
 280 00c0 00C0      		rjmp .L18
 281 00c2 9C2F      		mov r25,r28
 282 00c4 9695      		lsr r25
 283 00c6 9695      		lsr r25
 284 00c8 9E01      		movw r18,r28
 285 00ca 2370      		andi r18,3
 286 00cc 3327      		clr r19
 287 00ce C115      		cp r28,__zero_reg__
 288 00d0 D345      		sbci r29,83
 289 00d2 00F4      		brsh .+2
 290 00d4 00C0      		rjmp .L42
 122:quantum/keymap_common.c ****             // Set toggle
 291               		.loc 1 122 54 is_stmt 1 view .LVU51
 124:quantum/keymap_common.c ****             action.code  = ACTION_LAYER_TOGGLE(action_layer);
 292               		.loc 1 124 13 view .LVU52
 293               	.LVL26:
 125:quantum/keymap_common.c ****             break;
 294               		.loc 1 125 13 view .LVU53
 125:quantum/keymap_common.c ****             break;
 295               		.loc 1 125 28 is_stmt 0 view .LVU54
 296 00d6 C1E0      		ldi r28,lo8(1)
 297 00d8 D0E0      		ldi r29,0
 298               	.LVL27:
 125:quantum/keymap_common.c ****             break;
 299               		.loc 1 125 28 view .LVU55
 300 00da 00C0      		rjmp 2f
 301               		1:
 302 00dc CC0F      		lsl r28
 303 00de DD1F      		rol r29
 304               		2:
 305 00e0 2A95      		dec r18
 306 00e2 02F4      		brpl 1b
 307 00e4 30E2      		ldi r19,lo8(32)
 308 00e6 939F      		mul r25,r19
 309 00e8 C001      		movw r24,r0
 310 00ea 1124      		clr __zero_reg__
 311 00ec C82B      		or r28,r24
 312 00ee D92B      		or r29,r25
 313               	.LVL28:
 125:quantum/keymap_common.c ****             break;
 314               		.loc 1 125 28 view .LVU56
 315 00f0 DA68      		ori r29,138
 316               	.LVL29:
 126:quantum/keymap_common.c **** #endif
 317               		.loc 1 126 13 is_stmt 1 view .LVU57
 318 00f2 00C0      		rjmp .L8
 319               	.LVL30:
 320               	.L16:
  58:quantum/keymap_common.c ****         case KC_A ... KC_EXSEL:
 321               		.loc 1 58 5 is_stmt 0 view .LVU58
 322 00f4 C115      		cp r28,__zero_reg__
 323 00f6 8AE5      		ldi r24,90
 324 00f8 D807      		cpc r29,r24
 325               	.LVL31:
  58:quantum/keymap_common.c ****         case KC_A ... KC_EXSEL:
 326               		.loc 1 58 5 view .LVU59
 327 00fa 00F4      		brsh .L21
 328 00fc C115      		cp r28,__zero_reg__
 329 00fe 99E5      		ldi r25,89
 330 0100 D907      		cpc r29,r25
 331 0102 00F0      		brlo .+2
 332 0104 00C0      		rjmp .L22
 333 0106 C115      		cp r28,__zero_reg__
 334 0108 28E5      		ldi r18,88
 335 010a D207      		cpc r29,r18
 336 010c 00F4      		brsh .+2
 337 010e 00C0      		rjmp .L33
 142:quantum/keymap_common.c ****             break;
 338               		.loc 1 142 13 is_stmt 1 view .LVU60
 142:quantum/keymap_common.c ****             break;
 339               		.loc 1 142 27 is_stmt 0 view .LVU61
 340 0110 DC2F      		mov r29,r28
 341 0112 CC27      		clr r28
 342               	.LVL32:
 142:quantum/keymap_common.c ****             break;
 343               		.loc 1 142 27 view .LVU62
 344 0114 C06F      		ori r28,240
 345 0116 D06A      		ori r29,160
 346               	.LVL33:
 143:quantum/keymap_common.c ****         case QK_LAYER_MOD ... QK_LAYER_MOD_MAX:
 347               		.loc 1 143 13 is_stmt 1 view .LVU63
 348 0118 00C0      		rjmp .L8
 349               	.LVL34:
 350               	.L21:
  58:quantum/keymap_common.c ****         case KC_A ... KC_EXSEL:
 351               		.loc 1 58 5 is_stmt 0 view .LVU64
 352 011a C115      		cp r28,__zero_reg__
 353 011c 3BE5      		ldi r19,91
 354 011e D307      		cpc r29,r19
 355 0120 00F4      		brsh .+2
 356 0122 00C0      		rjmp .L33
 357 0124 C115      		cp r28,__zero_reg__
 358 0126 4CE5      		ldi r20,92
 359 0128 D407      		cpc r29,r20
 360 012a 00F4      		brsh .+2
 361 012c 00C0      		rjmp .L24
 362 012e CE01      		movw r24,r28
 363 0130 9056      		subi r25,96
 364 0132 8115      		cp r24,__zero_reg__
 365 0134 9042      		sbci r25,32
 366 0136 00F0      		brlo .+2
 367 0138 00C0      		rjmp .L33
 152:quantum/keymap_common.c ****             action.code = ACTION_MODS_TAP_KEY(mod, keycode & 0xFF);
 368               		.loc 1 152 13 is_stmt 1 view .LVU65
 152:quantum/keymap_common.c ****             action.code = ACTION_MODS_TAP_KEY(mod, keycode & 0xFF);
 369               		.loc 1 152 27 is_stmt 0 view .LVU66
 370 013a 8D2F      		mov r24,r29
 371 013c 8F71      		andi r24,lo8(31)
 372 013e 0E94 0000 		call mod_config
 373               	.LVL35:
 153:quantum/keymap_common.c ****             break;
 374               		.loc 1 153 13 is_stmt 1 view .LVU67
 153:quantum/keymap_common.c ****             break;
 375               		.loc 1 153 27 is_stmt 0 view .LVU68
 376 0142 90E0      		ldi r25,0
 377 0144 982F      		mov r25,r24
 378 0146 8827      		clr r24
 379               	.LVL36:
 153:quantum/keymap_common.c ****             break;
 380               		.loc 1 153 27 view .LVU69
 381 0148 8827      		clr r24
 382 014a 9F71      		andi r25,31
 383 014c 9C01      		movw r18,r24
 384 014e 2C2B      		or r18,r28
 385 0150 E901      		movw r28,r18
 386               	.LVL37:
 153:quantum/keymap_common.c ****             break;
 387               		.loc 1 153 27 view .LVU70
 388 0152 00C0      		rjmp .L46
 389               	.LVL38:
 390               	.L10:
  65:quantum/keymap_common.c ****             break;
 391               		.loc 1 65 13 is_stmt 1 view .LVU71
 392               	.LBB8:
 393               	.LBI8:
 204:tmk_core/common/report.h ****     switch (key) {
 394               		.loc 2 204 24 view .LVU72
 395               	.LBE8:
 205:tmk_core/common/report.h ****         case KC_SYSTEM_POWER:
 396               		.loc 2 205 5 view .LVU73
  65:quantum/keymap_common.c ****             break;
 397               		.loc 1 65 27 is_stmt 0 view .LVU74
 398 0154 C55A      		subi r28,lo8(-(91))
 399 0156 D0E0      		ldi r29,0
 400 0158 C050      		subi r28,lo8(-(CSWTCH.0))
 401 015a D040      		sbci r29,hi8(-(CSWTCH.0))
 402 015c C881      		ld r28,Y
 403 015e D0E0      		ldi r29,0
 404               	.LVL39:
  65:quantum/keymap_common.c ****             break;
 405               		.loc 1 65 27 view .LVU75
 406 0160 D064      		ori r29,64
 407               	.LVL40:
  66:quantum/keymap_common.c ****         case KC_AUDIO_MUTE ... KC_BRIGHTNESS_DOWN:
 408               		.loc 1 66 13 is_stmt 1 view .LVU76
 409               	.L8:
 166:quantum/keymap_common.c **** }
 410               		.loc 1 166 5 view .LVU77
 167:quantum/keymap_common.c **** 
 411               		.loc 1 167 1 is_stmt 0 view .LVU78
 412 0162 CE01      		movw r24,r28
 413               	/* epilogue start */
 414 0164 DF91      		pop r29
 415 0166 CF91      		pop r28
 416 0168 0895      		ret
 417               	.LVL41:
 418               	.L41:
 106:quantum/keymap_common.c ****             // Layer set "GOTO"
 419               		.loc 1 106 34 is_stmt 1 view .LVU79
 108:quantum/keymap_common.c ****             action_layer = keycode & 0xF;
 420               		.loc 1 108 13 view .LVU80
 109:quantum/keymap_common.c ****             action.code  = ACTION_LAYER_SET(action_layer, when);
 421               		.loc 1 109 13 view .LVU81
 110:quantum/keymap_common.c ****             break;
 422               		.loc 1 110 13 view .LVU82
 108:quantum/keymap_common.c ****             action_layer = keycode & 0xF;
 423               		.loc 1 108 37 is_stmt 0 view .LVU83
 424 016a CE01      		movw r24,r28
 425               	.LVL42:
 108:quantum/keymap_common.c ****             action_layer = keycode & 0xF;
 426               		.loc 1 108 37 view .LVU84
 427 016c E4E0      		ldi r30,4
 428               		1:
 429 016e 9695      		lsr r25
 430 0170 8795      		ror r24
 431 0172 EA95      		dec r30
 432 0174 01F4      		brne 1b
 108:quantum/keymap_common.c ****             action_layer = keycode & 0xF;
 433               		.loc 1 108 26 view .LVU85
 434 0176 8370      		andi r24,lo8(3)
 110:quantum/keymap_common.c ****             break;
 435               		.loc 1 110 28 view .LVU86
 436 0178 2C2F      		mov r18,r28
 437 017a 2695      		lsr r18
 438 017c 2695      		lsr r18
 439 017e 2370      		andi r18,lo8(3)
 440 0180 40E2      		ldi r20,lo8(32)
 441 0182 249F      		mul r18,r20
 442 0184 9001      		movw r18,r0
 443 0186 1124      		clr __zero_reg__
 444 0188 382B      		or r19,r24
 445 018a 8C2F      		mov r24,r28
 446 018c 8370      		andi r24,lo8(3)
 447 018e C1E0      		ldi r28,lo8(1)
 448 0190 D0E0      		ldi r29,0
 449               	.LVL43:
 110:quantum/keymap_common.c ****             break;
 450               		.loc 1 110 28 view .LVU87
 451 0192 00C0      		rjmp 2f
 452               		1:
 453 0194 CC0F      		lsl r28
 454 0196 DD1F      		rol r29
 455               		2:
 456 0198 8A95      		dec r24
 457 019a 02F4      		brpl 1b
 458 019c C22B      		or r28,r18
 459 019e D32B      		or r29,r19
 460               	.LVL44:
 461               	.L45:
 120:quantum/keymap_common.c ****             break;
 462               		.loc 1 120 28 view .LVU88
 463 01a0 DC68      		ori r29,140
 464               	.LVL45:
 121:quantum/keymap_common.c ****         case QK_TOGGLE_LAYER ... QK_TOGGLE_LAYER_MAX:;
 465               		.loc 1 121 13 is_stmt 1 view .LVU89
 466 01a2 00C0      		rjmp .L8
 467               	.LVL46:
 468               	.L6:
 112:quantum/keymap_common.c ****             // Momentary action_layer
 469               		.loc 1 112 48 view .LVU90
 114:quantum/keymap_common.c ****             action.code  = ACTION_LAYER_MOMENTARY(action_layer);
 470               		.loc 1 114 13 view .LVU91
 115:quantum/keymap_common.c ****             break;
 471               		.loc 1 115 13 view .LVU92
 115:quantum/keymap_common.c ****             break;
 472               		.loc 1 115 28 is_stmt 0 view .LVU93
 473 01a4 D82F      		mov r29,r24
 474 01a6 CC27      		clr r28
 475               	.LVL47:
 115:quantum/keymap_common.c ****             break;
 476               		.loc 1 115 28 view .LVU94
 477 01a8 C16F      		ori r28,241
 478 01aa D06A      		ori r29,160
 479               	.LVL48:
 116:quantum/keymap_common.c ****         case QK_DEF_LAYER ... QK_DEF_LAYER_MAX:;
 480               		.loc 1 116 13 is_stmt 1 view .LVU95
 481 01ac 00C0      		rjmp .L8
 482               	.LVL49:
 483               	.L42:
 117:quantum/keymap_common.c ****             // Set default action_layer
 484               		.loc 1 117 48 view .LVU96
 119:quantum/keymap_common.c ****             action.code  = ACTION_DEFAULT_LAYER_SET(action_layer);
 485               		.loc 1 119 13 view .LVU97
 120:quantum/keymap_common.c ****             break;
 486               		.loc 1 120 13 view .LVU98
 120:quantum/keymap_common.c ****             break;
 487               		.loc 1 120 28 is_stmt 0 view .LVU99
 488 01ae C1E0      		ldi r28,lo8(1)
 489 01b0 D0E0      		ldi r29,0
 490               	.LVL50:
 120:quantum/keymap_common.c ****             break;
 491               		.loc 1 120 28 view .LVU100
 492 01b2 00C0      		rjmp 2f
 493               		1:
 494 01b4 CC0F      		lsl r28
 495 01b6 DD1F      		rol r29
 496               		2:
 497 01b8 2A95      		dec r18
 498 01ba 02F4      		brpl 1b
 499 01bc 20E2      		ldi r18,lo8(32)
 500 01be 929F      		mul r25,r18
 501 01c0 C001      		movw r24,r0
 502 01c2 1124      		clr __zero_reg__
 503 01c4 C82B      		or r28,r24
 504 01c6 D92B      		or r29,r25
 505 01c8 00C0      		rjmp .L45
 506               	.LVL51:
 507               	.L18:
 129:quantum/keymap_common.c ****             // OSL(action_layer) - One-shot action_layer
 508               		.loc 1 129 58 is_stmt 1 view .LVU101
 131:quantum/keymap_common.c ****             action.code  = ACTION_LAYER_ONESHOT(action_layer);
 509               		.loc 1 131 13 view .LVU102
 132:quantum/keymap_common.c ****             break;
 510               		.loc 1 132 13 view .LVU103
 132:quantum/keymap_common.c ****             break;
 511               		.loc 1 132 28 is_stmt 0 view .LVU104
 512 01ca DC2F      		mov r29,r28
 513 01cc CC27      		clr r28
 514               	.LVL52:
 132:quantum/keymap_common.c ****             break;
 515               		.loc 1 132 28 view .LVU105
 516 01ce C46F      		ori r28,244
 517 01d0 D06A      		ori r29,160
 518               	.LVL53:
 133:quantum/keymap_common.c ****         case QK_ONE_SHOT_MOD ... QK_ONE_SHOT_MOD_MAX:;
 519               		.loc 1 133 13 is_stmt 1 view .LVU106
 520 01d2 00C0      		rjmp .L8
 521               	.LVL54:
 522               	.L17:
 134:quantum/keymap_common.c ****             // OSM(mod) - One-shot mod
 523               		.loc 1 134 54 view .LVU107
 136:quantum/keymap_common.c ****             action.code = ACTION_MODS_ONESHOT(mod);
 524               		.loc 1 136 13 view .LVU108
 136:quantum/keymap_common.c ****             action.code = ACTION_MODS_ONESHOT(mod);
 525               		.loc 1 136 27 is_stmt 0 view .LVU109
 526 01d4 0E94 0000 		call mod_config
 527               	.LVL55:
 137:quantum/keymap_common.c ****             break;
 528               		.loc 1 137 13 is_stmt 1 view .LVU110
 137:quantum/keymap_common.c ****             break;
 529               		.loc 1 137 27 is_stmt 0 view .LVU111
 530 01d8 C82F      		mov r28,r24
 531               	.LVL56:
 137:quantum/keymap_common.c ****             break;
 532               		.loc 1 137 27 view .LVU112
 533 01da D0E0      		ldi r29,0
 534 01dc DC2F      		mov r29,r28
 535 01de CC27      		clr r28
 536 01e0 CC27      		clr r28
 537 01e2 DF71      		andi r29,31
 538               	.LVL57:
 539               	.L46:
 153:quantum/keymap_common.c ****             break;
 540               		.loc 1 153 27 view .LVU113
 541 01e4 D062      		ori r29,32
 542               	.LVL58:
 154:quantum/keymap_common.c **** #endif
 543               		.loc 1 154 13 is_stmt 1 view .LVU114
 544 01e6 00C0      		rjmp .L8
 545               	.LVL59:
 546               	.L22:
 145:quantum/keymap_common.c ****             action_layer = (keycode >> 4) & 0xF;
 547               		.loc 1 145 13 view .LVU115
 145:quantum/keymap_common.c ****             action_layer = (keycode >> 4) & 0xF;
 548               		.loc 1 145 28 is_stmt 0 view .LVU116
 549 01e8 8C2F      		mov r24,r28
 550 01ea 8F70      		andi r24,lo8(15)
 551 01ec 0E94 0000 		call mod_config
 552               	.LVL60:
 146:quantum/keymap_common.c ****             action.code  = ACTION_LAYER_MODS(action_layer, mod);
 553               		.loc 1 146 13 is_stmt 1 view .LVU117
 147:quantum/keymap_common.c ****             break;
 554               		.loc 1 147 13 view .LVU118
 146:quantum/keymap_common.c ****             action.code  = ACTION_LAYER_MODS(action_layer, mod);
 555               		.loc 1 146 37 is_stmt 0 view .LVU119
 556 01f0 34E0      		ldi r19,4
 557               		1:
 558 01f2 D695      		lsr r29
 559 01f4 C795      		ror r28
 560 01f6 3A95      		dec r19
 561 01f8 01F4      		brne 1b
 562               	.LVL61:
 146:quantum/keymap_common.c ****             action.code  = ACTION_LAYER_MODS(action_layer, mod);
 563               		.loc 1 146 26 view .LVU120
 564 01fa CF70      		andi r28,lo8(15)
 147:quantum/keymap_common.c ****             break;
 565               		.loc 1 147 28 view .LVU121
 566 01fc 9C2F      		mov r25,r28
 567               	.LVL62:
 147:quantum/keymap_common.c ****             break;
 568               		.loc 1 147 28 view .LVU122
 569 01fe EC01      		movw r28,r24
 570 0200 D069      		ori r29,144
 571               	.LVL63:
 148:quantum/keymap_common.c **** #endif
 572               		.loc 1 148 13 is_stmt 1 view .LVU123
 573 0202 00C0      		rjmp .L8
 574               	.LVL64:
 575               	.L24:
 158:quantum/keymap_common.c ****             break;
 576               		.loc 1 158 13 view .LVU124
 158:quantum/keymap_common.c ****             break;
 577               		.loc 1 158 27 is_stmt 0 view .LVU125
 578 0204 DD27      		clr r29
 579               	.LVL65:
 158:quantum/keymap_common.c ****             break;
 580               		.loc 1 158 27 view .LVU126
 581 0206 D066      		ori r29,96
 582               	.LVL66:
 159:quantum/keymap_common.c **** #endif
 583               		.loc 1 159 13 is_stmt 1 view .LVU127
 584 0208 00C0      		rjmp .L8
 585               		.cfi_endproc
 586               	.LFE112:
 588               		.section	.text.keymap_function_id_to_action,"ax",@progbits
 589               		.weak	keymap_function_id_to_action
 591               	keymap_function_id_to_action:
 592               	.LVL67:
 593               	.LFB116:
 184:quantum/keymap_common.c **** 
 185:quantum/keymap_common.c **** // translates function id to action
 186:quantum/keymap_common.c **** __attribute__((weak)) uint16_t keymap_function_id_to_action(uint16_t function_id) {
 594               		.loc 1 186 83 view -0
 595               		.cfi_startproc
 596               	/* prologue: function */
 597               	/* frame size = 0 */
 598               	/* stack size = 0 */
 599               	.L__stack_usage = 0
 187:quantum/keymap_common.c **** // The compiler sees the empty (weak) fn_actions and generates a warning
 188:quantum/keymap_common.c **** // This function should not be called in that case, so the warning is too strict
 189:quantum/keymap_common.c **** // If this function is called however, the keymap should have overridden fn_actions, and then the c
 190:quantum/keymap_common.c **** // is comparing against the wrong array
 191:quantum/keymap_common.c **** #pragma GCC diagnostic push
 192:quantum/keymap_common.c **** #pragma GCC diagnostic ignored "-Warray-bounds"
 193:quantum/keymap_common.c ****     return pgm_read_word(&fn_actions[function_id]);
 600               		.loc 1 193 5 view .LVU129
 601               	.LBB9:
 602               		.loc 1 193 12 view .LVU130
 603 0000 FC01      		movw r30,r24
 604 0002 EE0F      		lsl r30
 605 0004 FF1F      		rol r31
 606               	.LVL68:
 607               		.loc 1 193 12 is_stmt 0 view .LVU131
 608 0006 E050      		subi r30,lo8(-(fn_actions))
 609 0008 F040      		sbci r31,hi8(-(fn_actions))
 610               	.LVL69:
 611               		.loc 1 193 12 is_stmt 1 view .LVU132
 612               		.loc 1 193 12 view .LVU133
 613               	/* #APP */
 614               	 ;  193 "quantum/keymap_common.c" 1
 615 000a 8591      		lpm r24, Z+
 616 000c 9491      		lpm r25, Z
 617               		
 618               	 ;  0 "" 2
 619               	.LVL70:
 620               		.loc 1 193 12 view .LVU134
 621               	/* #NOAPP */
 622               	/* epilogue start */
 623               	.LBE9:
 194:quantum/keymap_common.c **** #pragma GCC diagnostic pop
 195:quantum/keymap_common.c **** }
 624               		.loc 1 195 1 is_stmt 0 view .LVU135
 625 000e 0895      		ret
 626               		.cfi_endproc
 627               	.LFE116:
 629               		.section	.rodata.CSWTCH.1,"a"
 632               	CSWTCH.1:
 633 0000 E200      		.word	226
 634 0002 E900      		.word	233
 635 0004 EA00      		.word	234
 636 0006 B500      		.word	181
 637 0008 B600      		.word	182
 638 000a B700      		.word	183
 639 000c CD00      		.word	205
 640 000e 8301      		.word	387
 641 0010 CC00      		.word	204
 642 0012 8A01      		.word	394
 643 0014 9201      		.word	402
 644 0016 9401      		.word	404
 645 0018 2102      		.word	545
 646 001a 2302      		.word	547
 647 001c 2402      		.word	548
 648 001e 2502      		.word	549
 649 0020 2602      		.word	550
 650 0022 2702      		.word	551
 651 0024 2A02      		.word	554
 652 0026 B300      		.word	179
 653 0028 B400      		.word	180
 654 002a 6F00      		.word	111
 655 002c 7000      		.word	112
 656               		.section	.rodata.CSWTCH.0,"a"
 659               	CSWTCH.0:
 660 0000 81        		.byte	-127
 661 0001 82        		.byte	-126
 662 0002 83        		.byte	-125
 663               		.weak	fn_actions
 664               		.section	.progmem.data.fn_actions,"a"
 667               	fn_actions:
 668               		.text
 669               	.Letext0:
 670               		.file 3 "/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/stdint.h"
 671               		.file 4 "tmk_core/common/keyboard.h"
 672               		.file 5 "tmk_core/common/keycode.h"
 673               		.file 6 "tmk_core/common/action_code.h"
 674               		.file 7 "/usr/local/Cellar/avr-gcc@8/8.4.0/lib/avr-gcc/8/gcc/avr/8.4.0/include/stddef.h"
 675               		.file 8 "tmk_core/common/action_macro.h"
 676               		.file 9 "tmk_core/common/action.h"
 677               		.file 10 "lib/lufa/LUFA/Drivers/USB/Core/AVR8/../StdRequestType.h"
 678               		.file 11 "lib/lufa/LUFA/Drivers/USB/Core/AVR8/../DeviceStandardReq.h"
 679               		.file 12 "lib/lufa/LUFA/Drivers/USB/Core/USBTask.h"
 680               		.file 13 "lib/lufa/LUFA/Drivers/USB/Core/HostStandardReq.h"
 681               		.file 14 "/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/stdio.h"
 682               		.file 15 "tmk_core/common/host.h"
 683               		.file 16 "tmk_core/common/debug.h"
 684               		.file 17 "quantum/keycode_config.h"
 685               		.file 18 "quantum/quantum_keycodes.h"
 686               		.file 19 "quantum/keymap.h"
 687               		.file 20 "tmk_core/common/action_layer.h"
 688               		.file 21 "tmk_core/common/timer.h"
 689               		.file 22 "tmk_core/common/action_util.h"
 690               		.file 23 "/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/stdlib.h"
 691               		.file 24 "quantum/process_keycode/process_unicode_common.h"
 692               		.file 25 "quantum/quantum.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 keymap_common.c
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccZykWIG.s:2      *ABS*:000000000000003e __SP_H__
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccZykWIG.s:3      *ABS*:000000000000003d __SP_L__
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccZykWIG.s:4      *ABS*:000000000000003f __SREG__
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccZykWIG.s:5      *ABS*:0000000000000000 __tmp_reg__
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccZykWIG.s:6      *ABS*:0000000000000001 __zero_reg__
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccZykWIG.s:13     .text.action_get_macro:0000000000000000 action_get_macro
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccZykWIG.s:37     .text.action_function:0000000000000000 action_function
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccZykWIG.s:56     .text.keymap_key_to_keycode:0000000000000000 keymap_key_to_keycode
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccZykWIG.s:113    .text.action_for_key:0000000000000000 action_for_key
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccZykWIG.s:632    .rodata.CSWTCH.1:0000000000000000 CSWTCH.1
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccZykWIG.s:659    .rodata.CSWTCH.0:0000000000000000 CSWTCH.0
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccZykWIG.s:591    .text.keymap_function_id_to_action:0000000000000000 keymap_function_id_to_action
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccZykWIG.s:667    .progmem.data.fn_actions:0000000000000000 fn_actions

UNDEFINED SYMBOLS
keymaps
keycode_config
mod_config
__do_copy_data
