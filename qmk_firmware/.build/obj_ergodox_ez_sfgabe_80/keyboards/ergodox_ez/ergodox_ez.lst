   1               		.file	"ergodox_ez.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.ergodox_board_led_on,"ax",@progbits
  11               	.global	ergodox_board_led_on
  13               	ergodox_board_led_on:
  14               	.LFB112:
  15               		.file 1 "keyboards/ergodox_ez/ergodox_ez.h"
   1:keyboards/ergodox_ez/ergodox_ez.h **** /*
   2:keyboards/ergodox_ez/ergodox_ez.h **** Copyright 2012 Jun Wako <wakojun@gmail.com>
   3:keyboards/ergodox_ez/ergodox_ez.h **** Copyright 2013 Oleg Kostyuk <cub.uanic@gmail.com>
   4:keyboards/ergodox_ez/ergodox_ez.h **** Copyright 2015 ZSA Technology Labs Inc (@zsa)
   5:keyboards/ergodox_ez/ergodox_ez.h **** Copyright 2020 Christopher Courtney <drashna@live.com> (@drashna)
   6:keyboards/ergodox_ez/ergodox_ez.h **** 
   7:keyboards/ergodox_ez/ergodox_ez.h **** This program is free software: you can redistribute it and/or modify
   8:keyboards/ergodox_ez/ergodox_ez.h **** it under the terms of the GNU General Public License as published by
   9:keyboards/ergodox_ez/ergodox_ez.h **** the Free Software Foundation, either version 2 of the License, or
  10:keyboards/ergodox_ez/ergodox_ez.h **** (at your option) any later version.
  11:keyboards/ergodox_ez/ergodox_ez.h **** 
  12:keyboards/ergodox_ez/ergodox_ez.h **** This program is distributed in the hope that it will be useful,
  13:keyboards/ergodox_ez/ergodox_ez.h **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  14:keyboards/ergodox_ez/ergodox_ez.h **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  15:keyboards/ergodox_ez/ergodox_ez.h **** GNU General Public License for more details.
  16:keyboards/ergodox_ez/ergodox_ez.h **** 
  17:keyboards/ergodox_ez/ergodox_ez.h **** You should have received a copy of the GNU General Public License
  18:keyboards/ergodox_ez/ergodox_ez.h **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  19:keyboards/ergodox_ez/ergodox_ez.h **** */
  20:keyboards/ergodox_ez/ergodox_ez.h **** 
  21:keyboards/ergodox_ez/ergodox_ez.h **** #pragma once
  22:keyboards/ergodox_ez/ergodox_ez.h **** 
  23:keyboards/ergodox_ez/ergodox_ez.h **** #include "quantum.h"
  24:keyboards/ergodox_ez/ergodox_ez.h **** #include <stdint.h>
  25:keyboards/ergodox_ez/ergodox_ez.h **** #include <stdbool.h>
  26:keyboards/ergodox_ez/ergodox_ez.h **** #include "i2c_master.h"
  27:keyboards/ergodox_ez/ergodox_ez.h **** 
  28:keyboards/ergodox_ez/ergodox_ez.h **** #if defined(KEYBOARD_ergodox_ez_glow)
  29:keyboards/ergodox_ez/ergodox_ez.h **** #    include "glow.h"
  30:keyboards/ergodox_ez/ergodox_ez.h **** #elif defined(KEYBOARD_ergodox_ez_shine)
  31:keyboards/ergodox_ez/ergodox_ez.h **** #    include "shine.h"
  32:keyboards/ergodox_ez/ergodox_ez.h **** #endif
  33:keyboards/ergodox_ez/ergodox_ez.h **** 
  34:keyboards/ergodox_ez/ergodox_ez.h **** // I2C aliases and register addresses (see "mcp23018.md")
  35:keyboards/ergodox_ez/ergodox_ez.h **** #define I2C_ADDR        0b0100000
  36:keyboards/ergodox_ez/ergodox_ez.h **** #define I2C_ADDR_WRITE  ( (I2C_ADDR<<1) | I2C_WRITE )
  37:keyboards/ergodox_ez/ergodox_ez.h **** #define I2C_ADDR_READ   ( (I2C_ADDR<<1) | I2C_READ  )
  38:keyboards/ergodox_ez/ergodox_ez.h **** #define IODIRA          0x00            // i/o direction register
  39:keyboards/ergodox_ez/ergodox_ez.h **** #define IODIRB          0x01
  40:keyboards/ergodox_ez/ergodox_ez.h **** #define GPPUA           0x0C            // GPIO pull-up resistor register
  41:keyboards/ergodox_ez/ergodox_ez.h **** #define GPPUB           0x0D
  42:keyboards/ergodox_ez/ergodox_ez.h **** #define GPIOA           0x12            // general purpose i/o port register (write modifies OLAT)
  43:keyboards/ergodox_ez/ergodox_ez.h **** #define GPIOB           0x13
  44:keyboards/ergodox_ez/ergodox_ez.h **** #define OLATA           0x14            // output latch register
  45:keyboards/ergodox_ez/ergodox_ez.h **** #define OLATB           0x15
  46:keyboards/ergodox_ez/ergodox_ez.h **** 
  47:keyboards/ergodox_ez/ergodox_ez.h **** extern i2c_status_t mcp23018_status;
  48:keyboards/ergodox_ez/ergodox_ez.h **** #define ERGODOX_EZ_I2C_TIMEOUT 100
  49:keyboards/ergodox_ez/ergodox_ez.h **** 
  50:keyboards/ergodox_ez/ergodox_ez.h **** void init_ergodox(void);
  51:keyboards/ergodox_ez/ergodox_ez.h **** void ergodox_blink_all_leds(void);
  52:keyboards/ergodox_ez/ergodox_ez.h **** uint8_t init_mcp23018(void);
  53:keyboards/ergodox_ez/ergodox_ez.h **** uint8_t ergodox_left_leds_update(void);
  54:keyboards/ergodox_ez/ergodox_ez.h **** 
  55:keyboards/ergodox_ez/ergodox_ez.h **** #ifndef LED_BRIGHTNESS_LO
  56:keyboards/ergodox_ez/ergodox_ez.h **** #define LED_BRIGHTNESS_LO       15
  57:keyboards/ergodox_ez/ergodox_ez.h **** #endif
  58:keyboards/ergodox_ez/ergodox_ez.h **** #ifndef LED_BRIGHTNESS_HI
  59:keyboards/ergodox_ez/ergodox_ez.h **** #define LED_BRIGHTNESS_HI       255
  60:keyboards/ergodox_ez/ergodox_ez.h **** #endif
  61:keyboards/ergodox_ez/ergodox_ez.h **** 
  62:keyboards/ergodox_ez/ergodox_ez.h **** 
  63:keyboards/ergodox_ez/ergodox_ez.h **** inline void ergodox_board_led_on(void)      { DDRD |=  (1<<6); PORTD |=  (1<<6); }
  16               		.loc 1 63 45 view -0
  17               		.cfi_startproc
  18               	/* prologue: function */
  19               	/* frame size = 0 */
  20               	/* stack size = 0 */
  21               	.L__stack_usage = 0
  22               		.loc 1 63 47 view .LVU1
  23               		.loc 1 63 52 is_stmt 0 view .LVU2
  24 0000 569A      		sbi 0xa,6
  25               		.loc 1 63 64 is_stmt 1 view .LVU3
  26               		.loc 1 63 70 is_stmt 0 view .LVU4
  27 0002 5E9A      		sbi 0xb,6
  28               	/* epilogue start */
  29               		.loc 1 63 1 view .LVU5
  30 0004 0895      		ret
  31               		.cfi_endproc
  32               	.LFE112:
  34               		.section	.text.ergodox_right_led_1_on,"ax",@progbits
  35               	.global	ergodox_right_led_1_on
  37               	ergodox_right_led_1_on:
  38               	.LFB113:
  64:keyboards/ergodox_ez/ergodox_ez.h **** inline void ergodox_right_led_1_on(void)    { DDRB |=  (1<<5); PORTB |=  (1<<5); }
  39               		.loc 1 64 45 is_stmt 1 view -0
  40               		.cfi_startproc
  41               	/* prologue: function */
  42               	/* frame size = 0 */
  43               	/* stack size = 0 */
  44               	.L__stack_usage = 0
  45               		.loc 1 64 47 view .LVU7
  46               		.loc 1 64 52 is_stmt 0 view .LVU8
  47 0000 259A      		sbi 0x4,5
  48               		.loc 1 64 64 is_stmt 1 view .LVU9
  49               		.loc 1 64 70 is_stmt 0 view .LVU10
  50 0002 2D9A      		sbi 0x5,5
  51               	/* epilogue start */
  52               		.loc 1 64 1 view .LVU11
  53 0004 0895      		ret
  54               		.cfi_endproc
  55               	.LFE113:
  57               		.section	.text.ergodox_right_led_2_on,"ax",@progbits
  58               	.global	ergodox_right_led_2_on
  60               	ergodox_right_led_2_on:
  61               	.LFB114:
  65:keyboards/ergodox_ez/ergodox_ez.h **** inline void ergodox_right_led_2_on(void)    { DDRB |=  (1<<6); PORTB |=  (1<<6); }
  62               		.loc 1 65 45 is_stmt 1 view -0
  63               		.cfi_startproc
  64               	/* prologue: function */
  65               	/* frame size = 0 */
  66               	/* stack size = 0 */
  67               	.L__stack_usage = 0
  68               		.loc 1 65 47 view .LVU13
  69               		.loc 1 65 52 is_stmt 0 view .LVU14
  70 0000 269A      		sbi 0x4,6
  71               		.loc 1 65 64 is_stmt 1 view .LVU15
  72               		.loc 1 65 70 is_stmt 0 view .LVU16
  73 0002 2E9A      		sbi 0x5,6
  74               	/* epilogue start */
  75               		.loc 1 65 1 view .LVU17
  76 0004 0895      		ret
  77               		.cfi_endproc
  78               	.LFE114:
  80               		.section	.text.ergodox_right_led_3_on,"ax",@progbits
  81               	.global	ergodox_right_led_3_on
  83               	ergodox_right_led_3_on:
  84               	.LFB115:
  66:keyboards/ergodox_ez/ergodox_ez.h **** inline void ergodox_right_led_3_on(void)    { DDRB |=  (1<<7); PORTB |=  (1<<7); }
  85               		.loc 1 66 45 is_stmt 1 view -0
  86               		.cfi_startproc
  87               	/* prologue: function */
  88               	/* frame size = 0 */
  89               	/* stack size = 0 */
  90               	.L__stack_usage = 0
  91               		.loc 1 66 47 view .LVU19
  92               		.loc 1 66 52 is_stmt 0 view .LVU20
  93 0000 279A      		sbi 0x4,7
  94               		.loc 1 66 64 is_stmt 1 view .LVU21
  95               		.loc 1 66 70 is_stmt 0 view .LVU22
  96 0002 2F9A      		sbi 0x5,7
  97               	/* epilogue start */
  98               		.loc 1 66 1 view .LVU23
  99 0004 0895      		ret
 100               		.cfi_endproc
 101               	.LFE115:
 103               		.section	.text.ergodox_right_led_on,"ax",@progbits
 104               	.global	ergodox_right_led_on
 106               	ergodox_right_led_on:
 107               	.LVL0:
 108               	.LFB116:
  67:keyboards/ergodox_ez/ergodox_ez.h **** inline void ergodox_right_led_on(uint8_t led) { DDRB |= (1<<(led+4)); PORTB |= (1<<(led+4)); }
 109               		.loc 1 67 47 is_stmt 1 view -0
 110               		.cfi_startproc
 111               	/* prologue: function */
 112               	/* frame size = 0 */
 113               	/* stack size = 0 */
 114               	.L__stack_usage = 0
 115               		.loc 1 67 49 view .LVU25
 116               		.loc 1 67 54 is_stmt 0 view .LVU26
 117 0000 24B1      		in r18,0x4
 118               		.loc 1 67 65 view .LVU27
 119 0002 34E0      		ldi r19,lo8(4)
 120 0004 380F      		add r19,r24
 121               		.loc 1 67 59 view .LVU28
 122 0006 81E0      		ldi r24,lo8(1)
 123 0008 90E0      		ldi r25,0
 124               	.LVL1:
 125               		.loc 1 67 59 view .LVU29
 126 000a 00C0      		rjmp 2f
 127               		1:
 128 000c 880F      		lsl r24
 129               		2:
 130 000e 3A95      		dec r19
 131 0010 02F4      		brpl 1b
 132               		.loc 1 67 54 view .LVU30
 133 0012 282B      		or r18,r24
 134 0014 24B9      		out 0x4,r18
 135               		.loc 1 67 71 is_stmt 1 view .LVU31
 136               		.loc 1 67 77 is_stmt 0 view .LVU32
 137 0016 95B1      		in r25,0x5
 138 0018 892B      		or r24,r25
 139 001a 85B9      		out 0x5,r24
 140               	/* epilogue start */
 141               		.loc 1 67 1 view .LVU33
 142 001c 0895      		ret
 143               		.cfi_endproc
 144               	.LFE116:
 146               		.section	.text.ergodox_board_led_off,"ax",@progbits
 147               	.global	ergodox_board_led_off
 149               	ergodox_board_led_off:
 150               	.LFB117:
  68:keyboards/ergodox_ez/ergodox_ez.h **** 
  69:keyboards/ergodox_ez/ergodox_ez.h **** inline void ergodox_board_led_off(void)     { DDRD &= ~(1<<6); PORTD &= ~(1<<6); }
 151               		.loc 1 69 45 is_stmt 1 view -0
 152               		.cfi_startproc
 153               	/* prologue: function */
 154               	/* frame size = 0 */
 155               	/* stack size = 0 */
 156               	.L__stack_usage = 0
 157               		.loc 1 69 47 view .LVU35
 158               		.loc 1 69 52 is_stmt 0 view .LVU36
 159 0000 5698      		cbi 0xa,6
 160               		.loc 1 69 64 is_stmt 1 view .LVU37
 161               		.loc 1 69 70 is_stmt 0 view .LVU38
 162 0002 5E98      		cbi 0xb,6
 163               	/* epilogue start */
 164               		.loc 1 69 1 view .LVU39
 165 0004 0895      		ret
 166               		.cfi_endproc
 167               	.LFE117:
 169               		.section	.text.ergodox_right_led_1_off,"ax",@progbits
 170               	.global	ergodox_right_led_1_off
 172               	ergodox_right_led_1_off:
 173               	.LFB118:
  70:keyboards/ergodox_ez/ergodox_ez.h **** inline void ergodox_right_led_1_off(void)   { DDRB &= ~(1<<5); PORTB &= ~(1<<5); }
 174               		.loc 1 70 45 is_stmt 1 view -0
 175               		.cfi_startproc
 176               	/* prologue: function */
 177               	/* frame size = 0 */
 178               	/* stack size = 0 */
 179               	.L__stack_usage = 0
 180               		.loc 1 70 47 view .LVU41
 181               		.loc 1 70 52 is_stmt 0 view .LVU42
 182 0000 2598      		cbi 0x4,5
 183               		.loc 1 70 64 is_stmt 1 view .LVU43
 184               		.loc 1 70 70 is_stmt 0 view .LVU44
 185 0002 2D98      		cbi 0x5,5
 186               	/* epilogue start */
 187               		.loc 1 70 1 view .LVU45
 188 0004 0895      		ret
 189               		.cfi_endproc
 190               	.LFE118:
 192               		.section	.text.ergodox_right_led_2_off,"ax",@progbits
 193               	.global	ergodox_right_led_2_off
 195               	ergodox_right_led_2_off:
 196               	.LFB119:
  71:keyboards/ergodox_ez/ergodox_ez.h **** inline void ergodox_right_led_2_off(void)   { DDRB &= ~(1<<6); PORTB &= ~(1<<6); }
 197               		.loc 1 71 45 is_stmt 1 view -0
 198               		.cfi_startproc
 199               	/* prologue: function */
 200               	/* frame size = 0 */
 201               	/* stack size = 0 */
 202               	.L__stack_usage = 0
 203               		.loc 1 71 47 view .LVU47
 204               		.loc 1 71 52 is_stmt 0 view .LVU48
 205 0000 2698      		cbi 0x4,6
 206               		.loc 1 71 64 is_stmt 1 view .LVU49
 207               		.loc 1 71 70 is_stmt 0 view .LVU50
 208 0002 2E98      		cbi 0x5,6
 209               	/* epilogue start */
 210               		.loc 1 71 1 view .LVU51
 211 0004 0895      		ret
 212               		.cfi_endproc
 213               	.LFE119:
 215               		.section	.text.ergodox_right_led_3_off,"ax",@progbits
 216               	.global	ergodox_right_led_3_off
 218               	ergodox_right_led_3_off:
 219               	.LFB120:
  72:keyboards/ergodox_ez/ergodox_ez.h **** inline void ergodox_right_led_3_off(void)   { DDRB &= ~(1<<7); PORTB &= ~(1<<7); }
 220               		.loc 1 72 45 is_stmt 1 view -0
 221               		.cfi_startproc
 222               	/* prologue: function */
 223               	/* frame size = 0 */
 224               	/* stack size = 0 */
 225               	.L__stack_usage = 0
 226               		.loc 1 72 47 view .LVU53
 227               		.loc 1 72 52 is_stmt 0 view .LVU54
 228 0000 2798      		cbi 0x4,7
 229               		.loc 1 72 64 is_stmt 1 view .LVU55
 230               		.loc 1 72 70 is_stmt 0 view .LVU56
 231 0002 2F98      		cbi 0x5,7
 232               	/* epilogue start */
 233               		.loc 1 72 1 view .LVU57
 234 0004 0895      		ret
 235               		.cfi_endproc
 236               	.LFE120:
 238               		.section	.text.ergodox_right_led_off,"ax",@progbits
 239               	.global	ergodox_right_led_off
 241               	ergodox_right_led_off:
 242               	.LVL2:
 243               	.LFB121:
  73:keyboards/ergodox_ez/ergodox_ez.h **** inline void ergodox_right_led_off(uint8_t led) { DDRB &= ~(1<<(led+4)); PORTB &= ~(1<<(led+4)); }
 244               		.loc 1 73 48 is_stmt 1 view -0
 245               		.cfi_startproc
 246               	/* prologue: function */
 247               	/* frame size = 0 */
 248               	/* stack size = 0 */
 249               	.L__stack_usage = 0
 250               		.loc 1 73 50 view .LVU59
 251               		.loc 1 73 55 is_stmt 0 view .LVU60
 252 0000 94B1      		in r25,0x4
 253               		.loc 1 73 67 view .LVU61
 254 0002 8C5F      		subi r24,lo8(-(4))
 255               	.LVL3:
 256               		.loc 1 73 61 view .LVU62
 257 0004 21E0      		ldi r18,lo8(1)
 258 0006 30E0      		ldi r19,0
 259 0008 00C0      		rjmp 2f
 260               		1:
 261 000a 220F      		lsl r18
 262               		2:
 263 000c 8A95      		dec r24
 264 000e 02F4      		brpl 1b
 265               		.loc 1 73 55 view .LVU63
 266 0010 2095      		com r18
 267 0012 9223      		and r25,r18
 268 0014 94B9      		out 0x4,r25
 269               		.loc 1 73 73 is_stmt 1 view .LVU64
 270               		.loc 1 73 79 is_stmt 0 view .LVU65
 271 0016 85B1      		in r24,0x5
 272               	.LVL4:
 273               		.loc 1 73 79 view .LVU66
 274 0018 2823      		and r18,r24
 275 001a 25B9      		out 0x5,r18
 276               	/* epilogue start */
 277               		.loc 1 73 1 view .LVU67
 278 001c 0895      		ret
 279               		.cfi_endproc
 280               	.LFE121:
 282               		.section	.text.ergodox_led_all_on,"ax",@progbits
 283               	.global	ergodox_led_all_on
 285               	ergodox_led_all_on:
 286               	.LFB122:
  74:keyboards/ergodox_ez/ergodox_ez.h **** 
  75:keyboards/ergodox_ez/ergodox_ez.h **** #ifdef LEFT_LEDS
  76:keyboards/ergodox_ez/ergodox_ez.h **** bool ergodox_left_led_1;
  77:keyboards/ergodox_ez/ergodox_ez.h **** bool ergodox_left_led_2;
  78:keyboards/ergodox_ez/ergodox_ez.h **** bool ergodox_left_led_3;
  79:keyboards/ergodox_ez/ergodox_ez.h **** 
  80:keyboards/ergodox_ez/ergodox_ez.h **** inline void ergodox_left_led_1_on(void)    { ergodox_left_led_1 = 1; }
  81:keyboards/ergodox_ez/ergodox_ez.h **** inline void ergodox_left_led_2_on(void)    { ergodox_left_led_2 = 1; }
  82:keyboards/ergodox_ez/ergodox_ez.h **** inline void ergodox_left_led_3_on(void)    { ergodox_left_led_3 = 1; }
  83:keyboards/ergodox_ez/ergodox_ez.h **** 
  84:keyboards/ergodox_ez/ergodox_ez.h **** inline void ergodox_left_led_1_off(void)    { ergodox_left_led_1 = 0; }
  85:keyboards/ergodox_ez/ergodox_ez.h **** inline void ergodox_left_led_2_off(void)    { ergodox_left_led_2 = 0; }
  86:keyboards/ergodox_ez/ergodox_ez.h **** inline void ergodox_left_led_3_off(void)    { ergodox_left_led_3 = 0; }
  87:keyboards/ergodox_ez/ergodox_ez.h **** #endif // LEFT_LEDS
  88:keyboards/ergodox_ez/ergodox_ez.h **** 
  89:keyboards/ergodox_ez/ergodox_ez.h **** inline void ergodox_led_all_on(void) {
 287               		.loc 1 89 38 is_stmt 1 view -0
 288               		.cfi_startproc
 289               	/* prologue: function */
 290               	/* frame size = 0 */
 291               	/* stack size = 0 */
 292               	.L__stack_usage = 0
  90:keyboards/ergodox_ez/ergodox_ez.h ****     ergodox_board_led_on();
 293               		.loc 1 90 5 view .LVU69
 294 0000 0E94 0000 		call ergodox_board_led_on
 295               	.LVL5:
  91:keyboards/ergodox_ez/ergodox_ez.h ****     ergodox_right_led_1_on();
 296               		.loc 1 91 5 view .LVU70
 297 0004 0E94 0000 		call ergodox_right_led_1_on
 298               	.LVL6:
  92:keyboards/ergodox_ez/ergodox_ez.h ****     ergodox_right_led_2_on();
 299               		.loc 1 92 5 view .LVU71
 300 0008 0E94 0000 		call ergodox_right_led_2_on
 301               	.LVL7:
  93:keyboards/ergodox_ez/ergodox_ez.h ****     ergodox_right_led_3_on();
 302               		.loc 1 93 5 view .LVU72
 303 000c 0C94 0000 		jmp ergodox_right_led_3_on
 304               	.LVL8:
 305               		.cfi_endproc
 306               	.LFE122:
 308               		.section	.text.ergodox_led_all_off,"ax",@progbits
 309               	.global	ergodox_led_all_off
 311               	ergodox_led_all_off:
 312               	.LFB123:
  94:keyboards/ergodox_ez/ergodox_ez.h **** #ifdef LEFT_LEDS
  95:keyboards/ergodox_ez/ergodox_ez.h ****     ergodox_left_led_1_on();
  96:keyboards/ergodox_ez/ergodox_ez.h ****     ergodox_left_led_2_on();
  97:keyboards/ergodox_ez/ergodox_ez.h ****     ergodox_left_led_3_on();
  98:keyboards/ergodox_ez/ergodox_ez.h **** #endif // LEFT_LEDS
  99:keyboards/ergodox_ez/ergodox_ez.h **** }
 100:keyboards/ergodox_ez/ergodox_ez.h **** 
 101:keyboards/ergodox_ez/ergodox_ez.h **** inline void ergodox_led_all_off(void)
 102:keyboards/ergodox_ez/ergodox_ez.h **** {
 313               		.loc 1 102 1 view -0
 314               		.cfi_startproc
 315               	/* prologue: function */
 316               	/* frame size = 0 */
 317               	/* stack size = 0 */
 318               	.L__stack_usage = 0
 103:keyboards/ergodox_ez/ergodox_ez.h ****     ergodox_board_led_off();
 319               		.loc 1 103 5 view .LVU74
 320 0000 0E94 0000 		call ergodox_board_led_off
 321               	.LVL9:
 104:keyboards/ergodox_ez/ergodox_ez.h ****     ergodox_right_led_1_off();
 322               		.loc 1 104 5 view .LVU75
 323 0004 0E94 0000 		call ergodox_right_led_1_off
 324               	.LVL10:
 105:keyboards/ergodox_ez/ergodox_ez.h ****     ergodox_right_led_2_off();
 325               		.loc 1 105 5 view .LVU76
 326 0008 0E94 0000 		call ergodox_right_led_2_off
 327               	.LVL11:
 106:keyboards/ergodox_ez/ergodox_ez.h ****     ergodox_right_led_3_off();
 328               		.loc 1 106 5 view .LVU77
 329 000c 0C94 0000 		jmp ergodox_right_led_3_off
 330               	.LVL12:
 331               		.cfi_endproc
 332               	.LFE123:
 334               		.section	.text.ergodox_right_led_1_set,"ax",@progbits
 335               	.global	ergodox_right_led_1_set
 337               	ergodox_right_led_1_set:
 338               	.LVL13:
 339               	.LFB124:
 107:keyboards/ergodox_ez/ergodox_ez.h **** #ifdef LEFT_LEDS
 108:keyboards/ergodox_ez/ergodox_ez.h ****     ergodox_left_led_1_off();
 109:keyboards/ergodox_ez/ergodox_ez.h ****     ergodox_left_led_2_off();
 110:keyboards/ergodox_ez/ergodox_ez.h ****     ergodox_left_led_3_off();
 111:keyboards/ergodox_ez/ergodox_ez.h **** #endif // LEFT_LEDS
 112:keyboards/ergodox_ez/ergodox_ez.h **** }
 113:keyboards/ergodox_ez/ergodox_ez.h **** 
 114:keyboards/ergodox_ez/ergodox_ez.h **** inline void ergodox_right_led_1_set(uint8_t n)    { OCR1A = n; }
 340               		.loc 1 114 51 view -0
 341               		.cfi_startproc
 342               	/* prologue: function */
 343               	/* frame size = 0 */
 344               	/* stack size = 0 */
 345               	.L__stack_usage = 0
 346               		.loc 1 114 53 view .LVU79
 347               		.loc 1 114 59 is_stmt 0 view .LVU80
 348 0000 90E0      		ldi r25,0
 349 0002 9093 8900 		sts 136+1,r25
 350 0006 8093 8800 		sts 136,r24
 351               	/* epilogue start */
 352               		.loc 1 114 1 view .LVU81
 353 000a 0895      		ret
 354               		.cfi_endproc
 355               	.LFE124:
 357               		.section	.text.ergodox_right_led_2_set,"ax",@progbits
 358               	.global	ergodox_right_led_2_set
 360               	ergodox_right_led_2_set:
 361               	.LVL14:
 362               	.LFB125:
 115:keyboards/ergodox_ez/ergodox_ez.h **** inline void ergodox_right_led_2_set(uint8_t n)    { OCR1B = n; }
 363               		.loc 1 115 51 is_stmt 1 view -0
 364               		.cfi_startproc
 365               	/* prologue: function */
 366               	/* frame size = 0 */
 367               	/* stack size = 0 */
 368               	.L__stack_usage = 0
 369               		.loc 1 115 53 view .LVU83
 370               		.loc 1 115 59 is_stmt 0 view .LVU84
 371 0000 90E0      		ldi r25,0
 372 0002 9093 8B00 		sts 138+1,r25
 373 0006 8093 8A00 		sts 138,r24
 374               	/* epilogue start */
 375               		.loc 1 115 1 view .LVU85
 376 000a 0895      		ret
 377               		.cfi_endproc
 378               	.LFE125:
 380               		.section	.text.ergodox_right_led_3_set,"ax",@progbits
 381               	.global	ergodox_right_led_3_set
 383               	ergodox_right_led_3_set:
 384               	.LVL15:
 385               	.LFB126:
 116:keyboards/ergodox_ez/ergodox_ez.h **** inline void ergodox_right_led_3_set(uint8_t n)    { OCR1C = n; }
 386               		.loc 1 116 51 is_stmt 1 view -0
 387               		.cfi_startproc
 388               	/* prologue: function */
 389               	/* frame size = 0 */
 390               	/* stack size = 0 */
 391               	.L__stack_usage = 0
 392               		.loc 1 116 53 view .LVU87
 393               		.loc 1 116 59 is_stmt 0 view .LVU88
 394 0000 90E0      		ldi r25,0
 395 0002 9093 8D00 		sts 140+1,r25
 396 0006 8093 8C00 		sts 140,r24
 397               	/* epilogue start */
 398               		.loc 1 116 1 view .LVU89
 399 000a 0895      		ret
 400               		.cfi_endproc
 401               	.LFE126:
 403               		.section	.text.ergodox_right_led_set,"ax",@progbits
 404               	.global	ergodox_right_led_set
 406               	ergodox_right_led_set:
 407               	.LVL16:
 408               	.LFB127:
 117:keyboards/ergodox_ez/ergodox_ez.h **** inline void ergodox_right_led_set(uint8_t led, uint8_t n)  {
 409               		.loc 1 117 60 is_stmt 1 view -0
 410               		.cfi_startproc
 411               	/* prologue: function */
 412               	/* frame size = 0 */
 413               	/* stack size = 0 */
 414               	.L__stack_usage = 0
 118:keyboards/ergodox_ez/ergodox_ez.h ****     (led == 1) ? (OCR1A = n) :
 415               		.loc 1 118 5 view .LVU91
 416 0000 70E0      		ldi r23,0
 417               		.loc 1 118 30 is_stmt 0 view .LVU92
 418 0002 8130      		cpi r24,lo8(1)
 419 0004 01F4      		brne .L17
 420               		.loc 1 118 25 discriminator 1 view .LVU93
 421 0006 7093 8900 		sts 136+1,r23
 422 000a 6093 8800 		sts 136,r22
 423 000e 0895      		ret
 424               	.L17:
 119:keyboards/ergodox_ez/ergodox_ez.h ****     (led == 2) ? (OCR1B = n) :
 425               		.loc 1 119 30 view .LVU94
 426 0010 8230      		cpi r24,lo8(2)
 427 0012 01F4      		brne .L19
 428               		.loc 1 119 25 discriminator 1 view .LVU95
 429 0014 7093 8B00 		sts 138+1,r23
 430 0018 6093 8A00 		sts 138,r22
 431 001c 0895      		ret
 432               	.L19:
 120:keyboards/ergodox_ez/ergodox_ez.h ****                  (OCR1C = n);
 433               		.loc 1 120 25 discriminator 2 view .LVU96
 434 001e 7093 8D00 		sts 140+1,r23
 435 0022 6093 8C00 		sts 140,r22
 436               	/* epilogue start */
 121:keyboards/ergodox_ez/ergodox_ez.h **** }
 437               		.loc 1 121 1 discriminator 2 view .LVU97
 438 0026 0895      		ret
 439               		.cfi_endproc
 440               	.LFE127:
 442               		.section	.text.ergodox_led_all_set,"ax",@progbits
 443               	.global	ergodox_led_all_set
 445               	ergodox_led_all_set:
 446               	.LVL17:
 447               	.LFB128:
 122:keyboards/ergodox_ez/ergodox_ez.h **** 
 123:keyboards/ergodox_ez/ergodox_ez.h **** inline void ergodox_led_all_set(uint8_t n) {
 448               		.loc 1 123 44 is_stmt 1 view -0
 449               		.cfi_startproc
 450               	/* prologue: function */
 451               	/* frame size = 0 */
 452               	/* stack size = 0 */
 453               	.L__stack_usage = 0
 124:keyboards/ergodox_ez/ergodox_ez.h ****     ergodox_right_led_1_set(n);
 454               		.loc 1 124 5 view .LVU99
 455               	.LBB20:
 456               	.LBI20:
 114:keyboards/ergodox_ez/ergodox_ez.h **** inline void ergodox_right_led_2_set(uint8_t n)    { OCR1B = n; }
 457               		.loc 1 114 13 view .LVU100
 458               	.LBB21:
 114:keyboards/ergodox_ez/ergodox_ez.h **** inline void ergodox_right_led_2_set(uint8_t n)    { OCR1B = n; }
 459               		.loc 1 114 53 view .LVU101
 114:keyboards/ergodox_ez/ergodox_ez.h **** inline void ergodox_right_led_2_set(uint8_t n)    { OCR1B = n; }
 460               		.loc 1 114 59 is_stmt 0 view .LVU102
 461 0000 90E0      		ldi r25,0
 462 0002 9093 8900 		sts 136+1,r25
 463 0006 8093 8800 		sts 136,r24
 464               	.LVL18:
 114:keyboards/ergodox_ez/ergodox_ez.h **** inline void ergodox_right_led_2_set(uint8_t n)    { OCR1B = n; }
 465               		.loc 1 114 59 view .LVU103
 466               	.LBE21:
 467               	.LBE20:
 125:keyboards/ergodox_ez/ergodox_ez.h ****     ergodox_right_led_2_set(n);
 468               		.loc 1 125 5 is_stmt 1 view .LVU104
 469               	.LBB22:
 470               	.LBI22:
 115:keyboards/ergodox_ez/ergodox_ez.h **** inline void ergodox_right_led_3_set(uint8_t n)    { OCR1C = n; }
 471               		.loc 1 115 13 view .LVU105
 472               	.LBB23:
 115:keyboards/ergodox_ez/ergodox_ez.h **** inline void ergodox_right_led_3_set(uint8_t n)    { OCR1C = n; }
 473               		.loc 1 115 53 view .LVU106
 115:keyboards/ergodox_ez/ergodox_ez.h **** inline void ergodox_right_led_3_set(uint8_t n)    { OCR1C = n; }
 474               		.loc 1 115 59 is_stmt 0 view .LVU107
 475 000a 9093 8B00 		sts 138+1,r25
 476 000e 8093 8A00 		sts 138,r24
 477               	.LVL19:
 115:keyboards/ergodox_ez/ergodox_ez.h **** inline void ergodox_right_led_3_set(uint8_t n)    { OCR1C = n; }
 478               		.loc 1 115 59 view .LVU108
 479               	.LBE23:
 480               	.LBE22:
 126:keyboards/ergodox_ez/ergodox_ez.h ****     ergodox_right_led_3_set(n);
 481               		.loc 1 126 5 is_stmt 1 view .LVU109
 482               	.LBB24:
 483               	.LBI24:
 116:keyboards/ergodox_ez/ergodox_ez.h **** inline void ergodox_right_led_set(uint8_t led, uint8_t n)  {
 484               		.loc 1 116 13 view .LVU110
 485               	.LBB25:
 116:keyboards/ergodox_ez/ergodox_ez.h **** inline void ergodox_right_led_set(uint8_t led, uint8_t n)  {
 486               		.loc 1 116 53 view .LVU111
 116:keyboards/ergodox_ez/ergodox_ez.h **** inline void ergodox_right_led_set(uint8_t led, uint8_t n)  {
 487               		.loc 1 116 59 is_stmt 0 view .LVU112
 488 0012 9093 8D00 		sts 140+1,r25
 489 0016 8093 8C00 		sts 140,r24
 490               	.LVL20:
 491               	/* epilogue start */
 116:keyboards/ergodox_ez/ergodox_ez.h **** inline void ergodox_right_led_set(uint8_t led, uint8_t n)  {
 492               		.loc 1 116 59 view .LVU113
 493               	.LBE25:
 494               	.LBE24:
 127:keyboards/ergodox_ez/ergodox_ez.h **** }
 495               		.loc 1 127 1 view .LVU114
 496 001a 0895      		ret
 497               		.cfi_endproc
 498               	.LFE128:
 500               		.section	.text.ergodox_blink_all_leds,"ax",@progbits
 501               	.global	ergodox_blink_all_leds
 503               	ergodox_blink_all_leds:
 504               	.LFB130:
 505               		.file 2 "keyboards/ergodox_ez/ergodox_ez.c"
   1:keyboards/ergodox_ez/ergodox_ez.c **** /*
   2:keyboards/ergodox_ez/ergodox_ez.c **** Copyright 2012 Jun Wako <wakojun@gmail.com>
   3:keyboards/ergodox_ez/ergodox_ez.c **** Copyright 2013 Oleg Kostyuk <cub.uanic@gmail.com>
   4:keyboards/ergodox_ez/ergodox_ez.c **** Copyright 2015 ZSA Technology Labs Inc (@zsa)
   5:keyboards/ergodox_ez/ergodox_ez.c **** Copyright 2020 Christopher Courtney <drashna@live.com> (@drashna)
   6:keyboards/ergodox_ez/ergodox_ez.c **** 
   7:keyboards/ergodox_ez/ergodox_ez.c **** This program is free software: you can redistribute it and/or modify
   8:keyboards/ergodox_ez/ergodox_ez.c **** it under the terms of the GNU General Public License as published by
   9:keyboards/ergodox_ez/ergodox_ez.c **** the Free Software Foundation, either version 2 of the License, or
  10:keyboards/ergodox_ez/ergodox_ez.c **** (at your option) any later version.
  11:keyboards/ergodox_ez/ergodox_ez.c **** 
  12:keyboards/ergodox_ez/ergodox_ez.c **** This program is distributed in the hope that it will be useful,
  13:keyboards/ergodox_ez/ergodox_ez.c **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  14:keyboards/ergodox_ez/ergodox_ez.c **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  15:keyboards/ergodox_ez/ergodox_ez.c **** GNU General Public License for more details.
  16:keyboards/ergodox_ez/ergodox_ez.c **** 
  17:keyboards/ergodox_ez/ergodox_ez.c **** You should have received a copy of the GNU General Public License
  18:keyboards/ergodox_ez/ergodox_ez.c **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  19:keyboards/ergodox_ez/ergodox_ez.c **** */
  20:keyboards/ergodox_ez/ergodox_ez.c **** 
  21:keyboards/ergodox_ez/ergodox_ez.c **** #include "ergodox_ez.h"
  22:keyboards/ergodox_ez/ergodox_ez.c **** 
  23:keyboards/ergodox_ez/ergodox_ez.c **** extern inline void ergodox_board_led_on(void);
  24:keyboards/ergodox_ez/ergodox_ez.c **** extern inline void ergodox_right_led_1_on(void);
  25:keyboards/ergodox_ez/ergodox_ez.c **** extern inline void ergodox_right_led_2_on(void);
  26:keyboards/ergodox_ez/ergodox_ez.c **** extern inline void ergodox_right_led_3_on(void);
  27:keyboards/ergodox_ez/ergodox_ez.c **** extern inline void ergodox_right_led_on(uint8_t led);
  28:keyboards/ergodox_ez/ergodox_ez.c **** 
  29:keyboards/ergodox_ez/ergodox_ez.c **** extern inline void ergodox_board_led_off(void);
  30:keyboards/ergodox_ez/ergodox_ez.c **** extern inline void ergodox_right_led_1_off(void);
  31:keyboards/ergodox_ez/ergodox_ez.c **** extern inline void ergodox_right_led_2_off(void);
  32:keyboards/ergodox_ez/ergodox_ez.c **** extern inline void ergodox_right_led_3_off(void);
  33:keyboards/ergodox_ez/ergodox_ez.c **** extern inline void ergodox_right_led_off(uint8_t led);
  34:keyboards/ergodox_ez/ergodox_ez.c **** 
  35:keyboards/ergodox_ez/ergodox_ez.c **** extern inline void ergodox_led_all_on(void);
  36:keyboards/ergodox_ez/ergodox_ez.c **** extern inline void ergodox_led_all_off(void);
  37:keyboards/ergodox_ez/ergodox_ez.c **** 
  38:keyboards/ergodox_ez/ergodox_ez.c **** extern inline void ergodox_right_led_1_set(uint8_t n);
  39:keyboards/ergodox_ez/ergodox_ez.c **** extern inline void ergodox_right_led_2_set(uint8_t n);
  40:keyboards/ergodox_ez/ergodox_ez.c **** extern inline void ergodox_right_led_3_set(uint8_t n);
  41:keyboards/ergodox_ez/ergodox_ez.c **** extern inline void ergodox_right_led_set(uint8_t led, uint8_t n);
  42:keyboards/ergodox_ez/ergodox_ez.c **** 
  43:keyboards/ergodox_ez/ergodox_ez.c **** extern inline void ergodox_led_all_set(uint8_t n);
  44:keyboards/ergodox_ez/ergodox_ez.c **** 
  45:keyboards/ergodox_ez/ergodox_ez.c **** keyboard_config_t keyboard_config;
  46:keyboards/ergodox_ez/ergodox_ez.c **** 
  47:keyboards/ergodox_ez/ergodox_ez.c **** bool i2c_initialized = 0;
  48:keyboards/ergodox_ez/ergodox_ez.c **** i2c_status_t mcp23018_status = 0x20;
  49:keyboards/ergodox_ez/ergodox_ez.c **** 
  50:keyboards/ergodox_ez/ergodox_ez.c **** void matrix_init_kb(void) {
  51:keyboards/ergodox_ez/ergodox_ez.c ****    // keyboard LEDs (see "PWM on ports OC1(A|B|C)" in "teensy-2-0.md")
  52:keyboards/ergodox_ez/ergodox_ez.c ****     TCCR1A = 0b10101001;  // set and configure fast PWM
  53:keyboards/ergodox_ez/ergodox_ez.c ****     TCCR1B = 0b00001001;  // set and configure fast PWM
  54:keyboards/ergodox_ez/ergodox_ez.c **** 
  55:keyboards/ergodox_ez/ergodox_ez.c ****     // (tied to Vcc for hardware convenience)
  56:keyboards/ergodox_ez/ergodox_ez.c ****     DDRB  &= ~(1<<4);  // set B(4) as input
  57:keyboards/ergodox_ez/ergodox_ez.c ****     PORTB &= ~(1<<4);  // set B(4) internal pull-up disabled
  58:keyboards/ergodox_ez/ergodox_ez.c **** 
  59:keyboards/ergodox_ez/ergodox_ez.c ****     // unused pins - C7, D4, D5, D7, E6
  60:keyboards/ergodox_ez/ergodox_ez.c ****     // set as input with internal pull-up enabled
  61:keyboards/ergodox_ez/ergodox_ez.c ****     DDRC  &= ~(1<<7);
  62:keyboards/ergodox_ez/ergodox_ez.c ****     DDRD  &= ~(1<<5 | 1<<4);
  63:keyboards/ergodox_ez/ergodox_ez.c ****     DDRE  &= ~(1<<6);
  64:keyboards/ergodox_ez/ergodox_ez.c ****     PORTC |=  (1<<7);
  65:keyboards/ergodox_ez/ergodox_ez.c ****     PORTD |=  (1<<5 | 1<<4);
  66:keyboards/ergodox_ez/ergodox_ez.c ****     PORTE |=  (1<<6);
  67:keyboards/ergodox_ez/ergodox_ez.c **** 
  68:keyboards/ergodox_ez/ergodox_ez.c ****     keyboard_config.raw = eeconfig_read_kb();
  69:keyboards/ergodox_ez/ergodox_ez.c ****     ergodox_led_all_set((uint8_t)keyboard_config.led_level * 255 / 4 );
  70:keyboards/ergodox_ez/ergodox_ez.c **** #ifdef RGB_MATRIX_ENABLE
  71:keyboards/ergodox_ez/ergodox_ez.c ****     if (keyboard_config.rgb_matrix_enable) {
  72:keyboards/ergodox_ez/ergodox_ez.c ****         rgb_matrix_set_flags(LED_FLAG_ALL);
  73:keyboards/ergodox_ez/ergodox_ez.c ****     } else {
  74:keyboards/ergodox_ez/ergodox_ez.c ****         rgb_matrix_set_flags(LED_FLAG_NONE);
  75:keyboards/ergodox_ez/ergodox_ez.c ****     }
  76:keyboards/ergodox_ez/ergodox_ez.c **** #endif
  77:keyboards/ergodox_ez/ergodox_ez.c **** 
  78:keyboards/ergodox_ez/ergodox_ez.c ****     ergodox_blink_all_leds();
  79:keyboards/ergodox_ez/ergodox_ez.c **** 
  80:keyboards/ergodox_ez/ergodox_ez.c ****     matrix_init_user();
  81:keyboards/ergodox_ez/ergodox_ez.c **** }
  82:keyboards/ergodox_ez/ergodox_ez.c **** 
  83:keyboards/ergodox_ez/ergodox_ez.c **** void ergodox_blink_all_leds(void)
  84:keyboards/ergodox_ez/ergodox_ez.c **** {
 506               		.loc 2 84 1 is_stmt 1 view -0
 507               		.cfi_startproc
 508               	/* prologue: function */
 509               	/* frame size = 0 */
 510               	/* stack size = 0 */
 511               	.L__stack_usage = 0
  85:keyboards/ergodox_ez/ergodox_ez.c ****     ergodox_led_all_off();
 512               		.loc 2 85 5 view .LVU116
 513 0000 0E94 0000 		call ergodox_led_all_off
 514               	.LVL21:
  86:keyboards/ergodox_ez/ergodox_ez.c ****     ergodox_led_all_set(LED_BRIGHTNESS_DEFAULT);
 515               		.loc 2 86 5 view .LVU117
 516 0004 8FEF      		ldi r24,lo8(-1)
 517 0006 0E94 0000 		call ergodox_led_all_set
 518               	.LVL22:
  87:keyboards/ergodox_ez/ergodox_ez.c ****     ergodox_right_led_1_on();
 519               		.loc 2 87 5 view .LVU118
 520 000a 0E94 0000 		call ergodox_right_led_1_on
 521               	.LVL23:
  88:keyboards/ergodox_ez/ergodox_ez.c ****     _delay_ms(50);
 522               		.loc 2 88 5 view .LVU119
 523               	.LBB26:
 524               	.LBI26:
 525               		.file 3 "/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h"
   1:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    Copyright (c) 2004,2005,2007 Joerg Wunsch
   3:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    Copyright (c) 2007  Florin-Viorel Petrov
   4:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    All rights reserved.
   5:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
   6:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    Redistribution and use in source and binary forms, with or without
   7:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    modification, are permitted provided that the following conditions are met:
   8:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
   9:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    * Redistributions of source code must retain the above copyright
  10:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer.
  11:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
  12:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    * Redistributions in binary form must reproduce the above copyright
  13:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer in
  14:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****      the documentation and/or other materials provided with the
  15:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****      distribution.
  16:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
  17:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    * Neither the name of the copyright holders nor the names of
  18:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****      contributors may be used to endorse or promote products derived
  19:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****      from this software without specific prior written permission.
  20:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
  21:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  25:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****   POSSIBILITY OF SUCH DAMAGE. */
  32:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
  33:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** /* $Id: delay.h.in 2506 2016-02-08 10:05:45Z joerg_wunsch $ */
  34:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
  35:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** #ifndef _UTIL_DELAY_H_
  36:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** #define _UTIL_DELAY_H_ 1
  37:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
  38:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** #ifndef __DOXYGEN__
  39:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** #  ifndef __HAS_DELAY_CYCLES
  40:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** #    define __HAS_DELAY_CYCLES 1
  41:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** #  endif
  42:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** #endif  /* __DOXYGEN__ */
  43:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
  44:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** #include <inttypes.h>
  45:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** #include <util/delay_basic.h>
  46:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** #include <math.h>
  47:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
  48:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** /** \file */
  49:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** /** \defgroup util_delay <util/delay.h>: Convenience functions for busy-wait delay loops
  50:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     \code
  51:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     #define F_CPU 1000000UL  // 1 MHz
  52:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     //#define F_CPU 14.7456E6
  53:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     #include <util/delay.h>
  54:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     \endcode
  55:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
  56:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     \note As an alternative method, it is possible to pass the
  57:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     F_CPU macro down to the compiler from the Makefile.
  58:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     Obviously, in that case, no \c \#define statement should be
  59:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     used.
  60:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
  61:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     The functions in this header file are wrappers around the basic
  62:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     busy-wait functions from <util/delay_basic.h>.  They are meant as
  63:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     convenience functions where actual time values can be specified
  64:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     rather than a number of cycles to wait for.  The idea behind is
  65:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     that compile-time constant expressions will be eliminated by
  66:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     compiler optimization so floating-point expressions can be used
  67:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     to calculate the number of delay cycles needed based on the CPU
  68:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     frequency passed by the macro F_CPU.
  69:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
  70:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     \note In order for these functions to work as intended, compiler
  71:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     optimizations <em>must</em> be enabled, and the delay time
  72:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     <em>must</em> be an expression that is a known constant at
  73:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     compile-time.  If these requirements are not met, the resulting
  74:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     delay will be much longer (and basically unpredictable), and
  75:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     applications that otherwise do not use floating-point calculations
  76:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     will experience severe code bloat by the floating-point library
  77:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     routines linked into the application.
  78:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
  79:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     The functions available allow the specification of microsecond, and
  80:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     millisecond delays directly, using the application-supplied macro
  81:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     F_CPU as the CPU clock frequency (in Hertz).
  82:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
  83:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** */
  84:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
  85:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** #if !defined(__DOXYGEN__)
  86:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** static __inline__ void _delay_us(double __us) __attribute__((__always_inline__));
  87:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** static __inline__ void _delay_ms(double __ms) __attribute__((__always_inline__));
  88:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** #endif
  89:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
  90:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** #ifndef F_CPU
  91:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** /* prevent compiler error by supplying a default */
  92:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** # warning "F_CPU not defined for <util/delay.h>"
  93:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** /** \ingroup util_delay
  94:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     \def F_CPU
  95:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     \brief CPU frequency in Hz
  96:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
  97:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     The macro F_CPU specifies the CPU frequency to be considered by
  98:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     the delay macros.  This macro is normally supplied by the
  99:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     environment (e.g. from within a project header, or the project's
 100:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     Makefile).  The value 1 MHz here is only provided as a "vanilla"
 101:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     fallback if no such user-provided definition could be found.
 102:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
 103:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     In terms of the delay functions, the CPU frequency can be given as
 104:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     a floating-point constant (e.g. 3.6864E6 for 3.6864 MHz).
 105:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     However, the macros in <util/setbaud.h> require it to be an
 106:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     integer value.
 107:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****  */
 108:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** # define F_CPU 1000000UL
 109:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** #endif
 110:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
 111:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** #ifndef __OPTIMIZE__
 112:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** # warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
 113:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** #endif
 114:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
 115:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 116:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 117:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****   __STDC_HOSTED__
 118:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** #  include <math.h>
 119:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** #endif
 120:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
 121:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** /**
 122:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    \ingroup util_delay
 123:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
 124:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    Perform a delay of \c __ms milliseconds, using _delay_loop_2().
 125:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
 126:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
 127:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 128:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
 129:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    The maximal possible delay is 262.14 ms / F_CPU in MHz.
 130:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
 131:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    When the user request delay which exceed the maximum possible one,
 132:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    _delay_ms() provides a decreased resolution functionality. In this
 133:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    mode _delay_ms() will work with a resolution of 1/10 ms, providing
 134:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    delays up to 6.5535 seconds (independent from CPU frequency).  The
 135:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    user will not be informed about decreased resolution.
 136:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
 137:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles()
 138:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    support, maximal possible delay is 4294967.295 ms/ F_CPU in MHz. For
 139:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    values greater than the maximal possible delay, overflows results in
 140:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    no delay i.e., 0ms.
 141:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
 142:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    Conversion of \c __ms into clock cycles may not always result in
 143:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    integer.  By default, the clock cycles rounded up to next
 144:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    integer. This ensures that the user gets at least \c __ms
 145:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    microseconds of delay.
 146:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
 147:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    Alternatively, by defining the macro \c __DELAY_ROUND_DOWN__, or
 148:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    \c __DELAY_ROUND_CLOSEST__, before including this header file, the
 149:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    algorithm can be made to round down, or round to closest integer,
 150:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    respectively.
 151:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
 152:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    \note
 153:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
 154:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    The implementation of _delay_ms() based on
 155:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    __builtin_avr_delay_cycles() is not backward compatible with older
 156:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    implementations.  In order to get functionality backward compatible
 157:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    with previous versions, the macro \c "__DELAY_BACKWARD_COMPATIBLE__"
 158:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    must be defined before including this header file. Also, the
 159:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    backward compatible algorithm will be chosen if the code is
 160:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    compiled in a <em>freestanding environment</em> (GCC option
 161:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    \c -ffreestanding), as the math functions required for rounding are
 162:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    not available to the compiler then.
 163:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
 164:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****  */
 165:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** void
 166:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** _delay_ms(double __ms)
 526               		.loc 3 166 1 view .LVU120
 527               	.LBB27:
 167:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** {
 168:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 	double __tmp ;
 528               		.loc 3 168 2 view .LVU121
 169:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 170:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 171:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****   __STDC_HOSTED__
 172:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 	uint32_t __ticks_dc;
 529               		.loc 3 172 2 view .LVU122
 173:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 530               		.loc 3 173 2 view .LVU123
 174:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 531               		.loc 3 174 2 view .LVU124
 175:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
 176:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 177:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 178:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
 179:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 180:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 181:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
 182:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 	#else
 183:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 		//round up by default
 184:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
 532               		.loc 3 184 3 view .LVU125
 185:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 	#endif
 186:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
 187:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
 533               		.loc 3 187 2 view .LVU126
 534 000e 2FEF      		ldi r18,lo8(159999)
 535 0010 80E7      		ldi r24,hi8(159999)
 536 0012 92E0      		ldi r25,hlo8(159999)
 537 0014 2150      	1:	subi r18,1
 538 0016 8040      		sbci r24,0
 539 0018 9040      		sbci r25,0
 540 001a 01F4      		brne 1b
 541 001c 00C0      		rjmp .
 542 001e 0000      		nop
 543               	.LVL24:
 544               		.loc 3 187 2 is_stmt 0 view .LVU127
 545               	.LBE27:
 546               	.LBE26:
  89:keyboards/ergodox_ez/ergodox_ez.c ****     ergodox_right_led_2_on();
 547               		.loc 2 89 5 is_stmt 1 view .LVU128
 548 0020 0E94 0000 		call ergodox_right_led_2_on
 549               	.LVL25:
  90:keyboards/ergodox_ez/ergodox_ez.c ****     _delay_ms(50);
 550               		.loc 2 90 5 view .LVU129
 551               	.LBB28:
 552               	.LBI28:
 166:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** {
 553               		.loc 3 166 1 view .LVU130
 554               	.LBB29:
 168:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 555               		.loc 3 168 2 view .LVU131
 172:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 556               		.loc 3 172 2 view .LVU132
 173:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 557               		.loc 3 173 2 view .LVU133
 174:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
 558               		.loc 3 174 2 view .LVU134
 184:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 	#endif
 559               		.loc 3 184 3 view .LVU135
 560               		.loc 3 187 2 view .LVU136
 561 0024 2FEF      		ldi r18,lo8(159999)
 562 0026 80E7      		ldi r24,hi8(159999)
 563 0028 92E0      		ldi r25,hlo8(159999)
 564 002a 2150      	1:	subi r18,1
 565 002c 8040      		sbci r24,0
 566 002e 9040      		sbci r25,0
 567 0030 01F4      		brne 1b
 568 0032 00C0      		rjmp .
 569 0034 0000      		nop
 570               	.LVL26:
 571               		.loc 3 187 2 is_stmt 0 view .LVU137
 572               	.LBE29:
 573               	.LBE28:
  91:keyboards/ergodox_ez/ergodox_ez.c ****     ergodox_right_led_3_on();
 574               		.loc 2 91 5 is_stmt 1 view .LVU138
 575 0036 0E94 0000 		call ergodox_right_led_3_on
 576               	.LVL27:
  92:keyboards/ergodox_ez/ergodox_ez.c ****     _delay_ms(50);
 577               		.loc 2 92 5 view .LVU139
 578               	.LBB30:
 579               	.LBI30:
 166:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** {
 580               		.loc 3 166 1 view .LVU140
 581               	.LBB31:
 168:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 582               		.loc 3 168 2 view .LVU141
 172:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 583               		.loc 3 172 2 view .LVU142
 173:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 584               		.loc 3 173 2 view .LVU143
 174:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
 585               		.loc 3 174 2 view .LVU144
 184:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 	#endif
 586               		.loc 3 184 3 view .LVU145
 587               		.loc 3 187 2 view .LVU146
 588 003a 2FEF      		ldi r18,lo8(159999)
 589 003c 80E7      		ldi r24,hi8(159999)
 590 003e 92E0      		ldi r25,hlo8(159999)
 591 0040 2150      	1:	subi r18,1
 592 0042 8040      		sbci r24,0
 593 0044 9040      		sbci r25,0
 594 0046 01F4      		brne 1b
 595 0048 00C0      		rjmp .
 596 004a 0000      		nop
 597               	.LVL28:
 598               		.loc 3 187 2 is_stmt 0 view .LVU147
 599               	.LBE31:
 600               	.LBE30:
  93:keyboards/ergodox_ez/ergodox_ez.c **** #ifdef LEFT_LEDS
  94:keyboards/ergodox_ez/ergodox_ez.c ****     ergodox_left_led_1_on();
  95:keyboards/ergodox_ez/ergodox_ez.c ****     _delay_ms(50);
  96:keyboards/ergodox_ez/ergodox_ez.c ****     if (!mcp23018_status) {
  97:keyboards/ergodox_ez/ergodox_ez.c ****       mcp23018_status = ergodox_left_leds_update();
  98:keyboards/ergodox_ez/ergodox_ez.c ****     }
  99:keyboards/ergodox_ez/ergodox_ez.c ****     ergodox_left_led_2_on();
 100:keyboards/ergodox_ez/ergodox_ez.c ****     _delay_ms(50);
 101:keyboards/ergodox_ez/ergodox_ez.c ****     if (!mcp23018_status) {
 102:keyboards/ergodox_ez/ergodox_ez.c ****       mcp23018_status = ergodox_left_leds_update();
 103:keyboards/ergodox_ez/ergodox_ez.c ****     }
 104:keyboards/ergodox_ez/ergodox_ez.c ****     ergodox_left_led_3_on();
 105:keyboards/ergodox_ez/ergodox_ez.c ****     _delay_ms(50);
 106:keyboards/ergodox_ez/ergodox_ez.c ****     if (!mcp23018_status) {
 107:keyboards/ergodox_ez/ergodox_ez.c ****       mcp23018_status = ergodox_left_leds_update();
 108:keyboards/ergodox_ez/ergodox_ez.c ****     }
 109:keyboards/ergodox_ez/ergodox_ez.c **** #endif
 110:keyboards/ergodox_ez/ergodox_ez.c ****     ergodox_right_led_1_off();
 601               		.loc 2 110 5 is_stmt 1 view .LVU148
 602 004c 0E94 0000 		call ergodox_right_led_1_off
 603               	.LVL29:
 111:keyboards/ergodox_ez/ergodox_ez.c ****     _delay_ms(50);
 604               		.loc 2 111 5 view .LVU149
 605               	.LBB32:
 606               	.LBI32:
 166:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** {
 607               		.loc 3 166 1 view .LVU150
 608               	.LBB33:
 168:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 609               		.loc 3 168 2 view .LVU151
 172:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 610               		.loc 3 172 2 view .LVU152
 173:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 611               		.loc 3 173 2 view .LVU153
 174:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
 612               		.loc 3 174 2 view .LVU154
 184:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 	#endif
 613               		.loc 3 184 3 view .LVU155
 614               		.loc 3 187 2 view .LVU156
 615 0050 2FEF      		ldi r18,lo8(159999)
 616 0052 80E7      		ldi r24,hi8(159999)
 617 0054 92E0      		ldi r25,hlo8(159999)
 618 0056 2150      	1:	subi r18,1
 619 0058 8040      		sbci r24,0
 620 005a 9040      		sbci r25,0
 621 005c 01F4      		brne 1b
 622 005e 00C0      		rjmp .
 623 0060 0000      		nop
 624               	.LVL30:
 625               		.loc 3 187 2 is_stmt 0 view .LVU157
 626               	.LBE33:
 627               	.LBE32:
 112:keyboards/ergodox_ez/ergodox_ez.c ****     ergodox_right_led_2_off();
 628               		.loc 2 112 5 is_stmt 1 view .LVU158
 629 0062 0E94 0000 		call ergodox_right_led_2_off
 630               	.LVL31:
 113:keyboards/ergodox_ez/ergodox_ez.c ****     _delay_ms(50);
 631               		.loc 2 113 5 view .LVU159
 632               	.LBB34:
 633               	.LBI34:
 166:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** {
 634               		.loc 3 166 1 view .LVU160
 635               	.LBB35:
 168:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 636               		.loc 3 168 2 view .LVU161
 172:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 637               		.loc 3 172 2 view .LVU162
 173:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 638               		.loc 3 173 2 view .LVU163
 174:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
 639               		.loc 3 174 2 view .LVU164
 184:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 	#endif
 640               		.loc 3 184 3 view .LVU165
 641               		.loc 3 187 2 view .LVU166
 642 0066 2FEF      		ldi r18,lo8(159999)
 643 0068 80E7      		ldi r24,hi8(159999)
 644 006a 92E0      		ldi r25,hlo8(159999)
 645 006c 2150      	1:	subi r18,1
 646 006e 8040      		sbci r24,0
 647 0070 9040      		sbci r25,0
 648 0072 01F4      		brne 1b
 649 0074 00C0      		rjmp .
 650 0076 0000      		nop
 651               	.LVL32:
 652               		.loc 3 187 2 is_stmt 0 view .LVU167
 653               	.LBE35:
 654               	.LBE34:
 114:keyboards/ergodox_ez/ergodox_ez.c ****     ergodox_right_led_3_off();
 655               		.loc 2 114 5 is_stmt 1 view .LVU168
 656 0078 0E94 0000 		call ergodox_right_led_3_off
 657               	.LVL33:
 115:keyboards/ergodox_ez/ergodox_ez.c **** #ifdef LEFT_LEDS
 116:keyboards/ergodox_ez/ergodox_ez.c ****     _delay_ms(50);
 117:keyboards/ergodox_ez/ergodox_ez.c ****     ergodox_left_led_1_off();
 118:keyboards/ergodox_ez/ergodox_ez.c ****     if (!mcp23018_status) {
 119:keyboards/ergodox_ez/ergodox_ez.c ****       mcp23018_status = ergodox_left_leds_update();
 120:keyboards/ergodox_ez/ergodox_ez.c ****     }
 121:keyboards/ergodox_ez/ergodox_ez.c ****     _delay_ms(50);
 122:keyboards/ergodox_ez/ergodox_ez.c ****     ergodox_left_led_2_off();
 123:keyboards/ergodox_ez/ergodox_ez.c ****     if (!mcp23018_status) {
 124:keyboards/ergodox_ez/ergodox_ez.c ****       mcp23018_status = ergodox_left_leds_update();
 125:keyboards/ergodox_ez/ergodox_ez.c ****     }
 126:keyboards/ergodox_ez/ergodox_ez.c ****     _delay_ms(50);
 127:keyboards/ergodox_ez/ergodox_ez.c ****     ergodox_left_led_3_off();
 128:keyboards/ergodox_ez/ergodox_ez.c ****     if (!mcp23018_status) {
 129:keyboards/ergodox_ez/ergodox_ez.c ****       mcp23018_status = ergodox_left_leds_update();
 130:keyboards/ergodox_ez/ergodox_ez.c ****     }
 131:keyboards/ergodox_ez/ergodox_ez.c **** #endif
 132:keyboards/ergodox_ez/ergodox_ez.c **** 
 133:keyboards/ergodox_ez/ergodox_ez.c ****     //ergodox_led_all_on();
 134:keyboards/ergodox_ez/ergodox_ez.c ****     //_delay_ms(333);
 135:keyboards/ergodox_ez/ergodox_ez.c ****     ergodox_led_all_off();
 658               		.loc 2 135 5 view .LVU169
 659 007c 0C94 0000 		jmp ergodox_led_all_off
 660               	.LVL34:
 661               		.cfi_endproc
 662               	.LFE130:
 664               		.section	.text.matrix_init_kb,"ax",@progbits
 665               	.global	matrix_init_kb
 667               	matrix_init_kb:
 668               	.LFB129:
  50:keyboards/ergodox_ez/ergodox_ez.c ****    // keyboard LEDs (see "PWM on ports OC1(A|B|C)" in "teensy-2-0.md")
 669               		.loc 2 50 27 view -0
 670               		.cfi_startproc
 671               	/* prologue: function */
 672               	/* frame size = 0 */
 673               	/* stack size = 0 */
 674               	.L__stack_usage = 0
  52:keyboards/ergodox_ez/ergodox_ez.c ****     TCCR1B = 0b00001001;  // set and configure fast PWM
 675               		.loc 2 52 5 view .LVU171
  52:keyboards/ergodox_ez/ergodox_ez.c ****     TCCR1B = 0b00001001;  // set and configure fast PWM
 676               		.loc 2 52 12 is_stmt 0 view .LVU172
 677 0000 89EA      		ldi r24,lo8(-87)
 678 0002 8093 8000 		sts 128,r24
  53:keyboards/ergodox_ez/ergodox_ez.c **** 
 679               		.loc 2 53 5 is_stmt 1 view .LVU173
  53:keyboards/ergodox_ez/ergodox_ez.c **** 
 680               		.loc 2 53 12 is_stmt 0 view .LVU174
 681 0006 89E0      		ldi r24,lo8(9)
 682 0008 8093 8100 		sts 129,r24
  56:keyboards/ergodox_ez/ergodox_ez.c ****     PORTB &= ~(1<<4);  // set B(4) internal pull-up disabled
 683               		.loc 2 56 5 is_stmt 1 view .LVU175
  56:keyboards/ergodox_ez/ergodox_ez.c ****     PORTB &= ~(1<<4);  // set B(4) internal pull-up disabled
 684               		.loc 2 56 11 is_stmt 0 view .LVU176
 685 000c 2498      		cbi 0x4,4
  57:keyboards/ergodox_ez/ergodox_ez.c **** 
 686               		.loc 2 57 5 is_stmt 1 view .LVU177
  57:keyboards/ergodox_ez/ergodox_ez.c **** 
 687               		.loc 2 57 11 is_stmt 0 view .LVU178
 688 000e 2C98      		cbi 0x5,4
  61:keyboards/ergodox_ez/ergodox_ez.c ****     DDRD  &= ~(1<<5 | 1<<4);
 689               		.loc 2 61 5 is_stmt 1 view .LVU179
  61:keyboards/ergodox_ez/ergodox_ez.c ****     DDRD  &= ~(1<<5 | 1<<4);
 690               		.loc 2 61 11 is_stmt 0 view .LVU180
 691 0010 3F98      		cbi 0x7,7
  62:keyboards/ergodox_ez/ergodox_ez.c ****     DDRE  &= ~(1<<6);
 692               		.loc 2 62 5 is_stmt 1 view .LVU181
  62:keyboards/ergodox_ez/ergodox_ez.c ****     DDRE  &= ~(1<<6);
 693               		.loc 2 62 11 is_stmt 0 view .LVU182
 694 0012 8AB1      		in r24,0xa
 695 0014 8F7C      		andi r24,lo8(-49)
 696 0016 8AB9      		out 0xa,r24
  63:keyboards/ergodox_ez/ergodox_ez.c ****     PORTC |=  (1<<7);
 697               		.loc 2 63 5 is_stmt 1 view .LVU183
  63:keyboards/ergodox_ez/ergodox_ez.c ****     PORTC |=  (1<<7);
 698               		.loc 2 63 11 is_stmt 0 view .LVU184
 699 0018 6E98      		cbi 0xd,6
  64:keyboards/ergodox_ez/ergodox_ez.c ****     PORTD |=  (1<<5 | 1<<4);
 700               		.loc 2 64 5 is_stmt 1 view .LVU185
  64:keyboards/ergodox_ez/ergodox_ez.c ****     PORTD |=  (1<<5 | 1<<4);
 701               		.loc 2 64 11 is_stmt 0 view .LVU186
 702 001a 479A      		sbi 0x8,7
  65:keyboards/ergodox_ez/ergodox_ez.c ****     PORTE |=  (1<<6);
 703               		.loc 2 65 5 is_stmt 1 view .LVU187
  65:keyboards/ergodox_ez/ergodox_ez.c ****     PORTE |=  (1<<6);
 704               		.loc 2 65 11 is_stmt 0 view .LVU188
 705 001c 8BB1      		in r24,0xb
 706 001e 8063      		ori r24,lo8(48)
 707 0020 8BB9      		out 0xb,r24
  66:keyboards/ergodox_ez/ergodox_ez.c **** 
 708               		.loc 2 66 5 is_stmt 1 view .LVU189
  66:keyboards/ergodox_ez/ergodox_ez.c **** 
 709               		.loc 2 66 11 is_stmt 0 view .LVU190
 710 0022 769A      		sbi 0xe,6
  68:keyboards/ergodox_ez/ergodox_ez.c ****     ergodox_led_all_set((uint8_t)keyboard_config.led_level * 255 / 4 );
 711               		.loc 2 68 5 is_stmt 1 view .LVU191
  68:keyboards/ergodox_ez/ergodox_ez.c ****     ergodox_led_all_set((uint8_t)keyboard_config.led_level * 255 / 4 );
 712               		.loc 2 68 27 is_stmt 0 view .LVU192
 713 0024 0E94 0000 		call eeconfig_read_kb
 714               	.LVL35:
  68:keyboards/ergodox_ez/ergodox_ez.c ****     ergodox_led_all_set((uint8_t)keyboard_config.led_level * 255 / 4 );
 715               		.loc 2 68 25 view .LVU193
 716 0028 6093 0000 		sts keyboard_config,r22
 717 002c 7093 0000 		sts keyboard_config+1,r23
 718 0030 8093 0000 		sts keyboard_config+2,r24
 719 0034 9093 0000 		sts keyboard_config+3,r25
  69:keyboards/ergodox_ez/ergodox_ez.c **** #ifdef RGB_MATRIX_ENABLE
 720               		.loc 2 69 5 is_stmt 1 view .LVU194
  69:keyboards/ergodox_ez/ergodox_ez.c **** #ifdef RGB_MATRIX_ENABLE
 721               		.loc 2 69 49 is_stmt 0 view .LVU195
 722 0038 6770      		andi r22,lo8(7)
  69:keyboards/ergodox_ez/ergodox_ez.c **** #ifdef RGB_MATRIX_ENABLE
 723               		.loc 2 69 60 view .LVU196
 724 003a 2FEF      		ldi r18,lo8(-1)
 725 003c 629F      		mul r22,r18
 726 003e C001      		movw r24,r0
 727 0040 1124      		clr __zero_reg__
  69:keyboards/ergodox_ez/ergodox_ez.c **** #ifdef RGB_MATRIX_ENABLE
 728               		.loc 2 69 66 view .LVU197
 729 0042 9595      		asr r25
 730 0044 8795      		ror r24
 731 0046 9595      		asr r25
 732 0048 8795      		ror r24
  69:keyboards/ergodox_ez/ergodox_ez.c **** #ifdef RGB_MATRIX_ENABLE
 733               		.loc 2 69 5 view .LVU198
 734 004a 0E94 0000 		call ergodox_led_all_set
 735               	.LVL36:
  78:keyboards/ergodox_ez/ergodox_ez.c **** 
 736               		.loc 2 78 5 is_stmt 1 view .LVU199
 737 004e 0E94 0000 		call ergodox_blink_all_leds
 738               	.LVL37:
  80:keyboards/ergodox_ez/ergodox_ez.c **** }
 739               		.loc 2 80 5 view .LVU200
 740 0052 0C94 0000 		jmp matrix_init_user
 741               	.LVL38:
 742               		.cfi_endproc
 743               	.LFE129:
 745               		.section	.text.init_mcp23018,"ax",@progbits
 746               	.global	init_mcp23018
 748               	init_mcp23018:
 749               	.LFB131:
 136:keyboards/ergodox_ez/ergodox_ez.c **** }
 137:keyboards/ergodox_ez/ergodox_ez.c **** 
 138:keyboards/ergodox_ez/ergodox_ez.c **** uint8_t init_mcp23018(void) {
 750               		.loc 2 138 29 view -0
 751               		.cfi_startproc
 752               	/* prologue: function */
 753               	/* frame size = 0 */
 754               	/* stack size = 0 */
 755               	.L__stack_usage = 0
 139:keyboards/ergodox_ez/ergodox_ez.c ****     mcp23018_status = 0x20;
 756               		.loc 2 139 5 view .LVU202
 757               		.loc 2 139 21 is_stmt 0 view .LVU203
 758 0000 80E2      		ldi r24,lo8(32)
 759 0002 90E0      		ldi r25,0
 760 0004 9093 0000 		sts mcp23018_status+1,r25
 761 0008 8093 0000 		sts mcp23018_status,r24
 140:keyboards/ergodox_ez/ergodox_ez.c **** 
 141:keyboards/ergodox_ez/ergodox_ez.c ****     // I2C subsystem
 142:keyboards/ergodox_ez/ergodox_ez.c **** 
 143:keyboards/ergodox_ez/ergodox_ez.c ****     // uint8_t sreg_prev;
 144:keyboards/ergodox_ez/ergodox_ez.c ****     // sreg_prev=SREG;
 145:keyboards/ergodox_ez/ergodox_ez.c ****     // cli();
 146:keyboards/ergodox_ez/ergodox_ez.c **** 
 147:keyboards/ergodox_ez/ergodox_ez.c ****     if (i2c_initialized == 0) {
 762               		.loc 2 147 5 is_stmt 1 view .LVU204
 763               		.loc 2 147 8 is_stmt 0 view .LVU205
 764 000c 8091 0000 		lds r24,i2c_initialized
 765 0010 8111      		cpse r24,__zero_reg__
 766 0012 00C0      		rjmp .L24
 148:keyboards/ergodox_ez/ergodox_ez.c ****         i2c_init();  // on pins D(1,0)
 767               		.loc 2 148 9 is_stmt 1 view .LVU206
 768 0014 0E94 0000 		call i2c_init
 769               	.LVL39:
 149:keyboards/ergodox_ez/ergodox_ez.c ****         i2c_initialized = true;
 770               		.loc 2 149 9 view .LVU207
 771               		.loc 2 149 25 is_stmt 0 view .LVU208
 772 0018 81E0      		ldi r24,lo8(1)
 773 001a 8093 0000 		sts i2c_initialized,r24
 150:keyboards/ergodox_ez/ergodox_ez.c ****         _delay_ms(1000);
 774               		.loc 2 150 9 is_stmt 1 view .LVU209
 775               	.LVL40:
 776               	.LBB36:
 777               	.LBI36:
 166:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** {
 778               		.loc 3 166 1 view .LVU210
 779               	.LBB37:
 168:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 780               		.loc 3 168 2 view .LVU211
 172:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 781               		.loc 3 172 2 view .LVU212
 173:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 782               		.loc 3 173 2 view .LVU213
 174:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
 783               		.loc 3 174 2 view .LVU214
 184:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 	#endif
 784               		.loc 3 184 3 view .LVU215
 785               		.loc 3 187 2 view .LVU216
 786 001e 2FEF      		ldi r18,lo8(3199999)
 787 0020 83ED      		ldi r24,hi8(3199999)
 788 0022 90E3      		ldi r25,hlo8(3199999)
 789 0024 2150      	1:	subi r18,1
 790 0026 8040      		sbci r24,0
 791 0028 9040      		sbci r25,0
 792 002a 01F4      		brne 1b
 793 002c 00C0      		rjmp .
 794 002e 0000      		nop
 795               	.LVL41:
 796               	.L24:
 797               		.loc 3 187 2 is_stmt 0 view .LVU217
 798               	.LBE37:
 799               	.LBE36:
 151:keyboards/ergodox_ez/ergodox_ez.c ****     }
 152:keyboards/ergodox_ez/ergodox_ez.c ****     // i2c_init(); // on pins D(1,0)
 153:keyboards/ergodox_ez/ergodox_ez.c ****     // _delay_ms(1000);
 154:keyboards/ergodox_ez/ergodox_ez.c **** 
 155:keyboards/ergodox_ez/ergodox_ez.c ****     // set pin direction
 156:keyboards/ergodox_ez/ergodox_ez.c ****     // - unused  : input  : 1
 157:keyboards/ergodox_ez/ergodox_ez.c ****     // - input   : input  : 1
 158:keyboards/ergodox_ez/ergodox_ez.c ****     // - driving : output : 0
 159:keyboards/ergodox_ez/ergodox_ez.c ****     mcp23018_status = i2c_start(I2C_ADDR_WRITE, ERGODOX_EZ_I2C_TIMEOUT);    if (mcp23018_status) go
 800               		.loc 2 159 5 is_stmt 1 view .LVU218
 801               		.loc 2 159 23 is_stmt 0 view .LVU219
 802 0030 64E6      		ldi r22,lo8(100)
 803 0032 70E0      		ldi r23,0
 804 0034 80E4      		ldi r24,lo8(64)
 805 0036 0E94 0000 		call i2c_start
 806               	.LVL42:
 807               		.loc 2 159 21 view .LVU220
 808 003a 9093 0000 		sts mcp23018_status+1,r25
 809 003e 8093 0000 		sts mcp23018_status,r24
 810               		.loc 2 159 77 is_stmt 1 view .LVU221
 811               		.loc 2 159 80 is_stmt 0 view .LVU222
 812 0042 892B      		or r24,r25
 813 0044 01F0      		breq .+2
 814 0046 00C0      		rjmp .L26
 160:keyboards/ergodox_ez/ergodox_ez.c ****     mcp23018_status = i2c_write(IODIRA, ERGODOX_EZ_I2C_TIMEOUT);            if (mcp23018_status) go
 815               		.loc 2 160 5 is_stmt 1 view .LVU223
 816               		.loc 2 160 23 is_stmt 0 view .LVU224
 817 0048 64E6      		ldi r22,lo8(100)
 818 004a 70E0      		ldi r23,0
 819 004c 80E0      		ldi r24,0
 820 004e 0E94 0000 		call i2c_write
 821               	.LVL43:
 822               		.loc 2 160 21 view .LVU225
 823 0052 9093 0000 		sts mcp23018_status+1,r25
 824 0056 8093 0000 		sts mcp23018_status,r24
 825               		.loc 2 160 77 is_stmt 1 view .LVU226
 826               		.loc 2 160 80 is_stmt 0 view .LVU227
 827 005a 892B      		or r24,r25
 828 005c 01F0      		breq .+2
 829 005e 00C0      		rjmp .L26
 161:keyboards/ergodox_ez/ergodox_ez.c ****     mcp23018_status = i2c_write(0b00000000, ERGODOX_EZ_I2C_TIMEOUT);        if (mcp23018_status) go
 830               		.loc 2 161 5 is_stmt 1 view .LVU228
 831               		.loc 2 161 23 is_stmt 0 view .LVU229
 832 0060 64E6      		ldi r22,lo8(100)
 833 0062 70E0      		ldi r23,0
 834 0064 80E0      		ldi r24,0
 835 0066 0E94 0000 		call i2c_write
 836               	.LVL44:
 837               		.loc 2 161 21 view .LVU230
 838 006a 9093 0000 		sts mcp23018_status+1,r25
 839 006e 8093 0000 		sts mcp23018_status,r24
 840               		.loc 2 161 77 is_stmt 1 view .LVU231
 841               		.loc 2 161 80 is_stmt 0 view .LVU232
 842 0072 892B      		or r24,r25
 843 0074 01F4      		brne .L26
 162:keyboards/ergodox_ez/ergodox_ez.c ****     mcp23018_status = i2c_write(0b00111111, ERGODOX_EZ_I2C_TIMEOUT);        if (mcp23018_status) go
 844               		.loc 2 162 5 is_stmt 1 view .LVU233
 845               		.loc 2 162 23 is_stmt 0 view .LVU234
 846 0076 64E6      		ldi r22,lo8(100)
 847 0078 70E0      		ldi r23,0
 848 007a 8FE3      		ldi r24,lo8(63)
 849 007c 0E94 0000 		call i2c_write
 850               	.LVL45:
 851               		.loc 2 162 21 view .LVU235
 852 0080 9093 0000 		sts mcp23018_status+1,r25
 853 0084 8093 0000 		sts mcp23018_status,r24
 854               		.loc 2 162 77 is_stmt 1 view .LVU236
 855               		.loc 2 162 80 is_stmt 0 view .LVU237
 856 0088 892B      		or r24,r25
 857 008a 01F4      		brne .L26
 163:keyboards/ergodox_ez/ergodox_ez.c ****     i2c_stop();
 858               		.loc 2 163 5 is_stmt 1 view .LVU238
 859 008c 0E94 0000 		call i2c_stop
 860               	.LVL46:
 164:keyboards/ergodox_ez/ergodox_ez.c **** 
 165:keyboards/ergodox_ez/ergodox_ez.c ****     // set pull-up
 166:keyboards/ergodox_ez/ergodox_ez.c ****     // - unused  : on  : 1
 167:keyboards/ergodox_ez/ergodox_ez.c ****     // - input   : on  : 1
 168:keyboards/ergodox_ez/ergodox_ez.c ****     // - driving : off : 0
 169:keyboards/ergodox_ez/ergodox_ez.c ****     mcp23018_status = i2c_start(I2C_ADDR_WRITE, ERGODOX_EZ_I2C_TIMEOUT);    if (mcp23018_status) go
 861               		.loc 2 169 5 view .LVU239
 862               		.loc 2 169 23 is_stmt 0 view .LVU240
 863 0090 64E6      		ldi r22,lo8(100)
 864 0092 70E0      		ldi r23,0
 865 0094 80E4      		ldi r24,lo8(64)
 866 0096 0E94 0000 		call i2c_start
 867               	.LVL47:
 868               		.loc 2 169 21 view .LVU241
 869 009a 9093 0000 		sts mcp23018_status+1,r25
 870 009e 8093 0000 		sts mcp23018_status,r24
 871               		.loc 2 169 77 is_stmt 1 view .LVU242
 872               		.loc 2 169 80 is_stmt 0 view .LVU243
 873 00a2 892B      		or r24,r25
 874 00a4 01F4      		brne .L26
 170:keyboards/ergodox_ez/ergodox_ez.c ****     mcp23018_status = i2c_write(GPPUA, ERGODOX_EZ_I2C_TIMEOUT);             if (mcp23018_status) go
 875               		.loc 2 170 5 is_stmt 1 view .LVU244
 876               		.loc 2 170 23 is_stmt 0 view .LVU245
 877 00a6 64E6      		ldi r22,lo8(100)
 878 00a8 70E0      		ldi r23,0
 879 00aa 8CE0      		ldi r24,lo8(12)
 880 00ac 0E94 0000 		call i2c_write
 881               	.LVL48:
 882               		.loc 2 170 21 view .LVU246
 883 00b0 9093 0000 		sts mcp23018_status+1,r25
 884 00b4 8093 0000 		sts mcp23018_status,r24
 885               		.loc 2 170 77 is_stmt 1 view .LVU247
 886               		.loc 2 170 80 is_stmt 0 view .LVU248
 887 00b8 892B      		or r24,r25
 888 00ba 01F4      		brne .L26
 171:keyboards/ergodox_ez/ergodox_ez.c ****     mcp23018_status = i2c_write(0b00000000, ERGODOX_EZ_I2C_TIMEOUT);        if (mcp23018_status) go
 889               		.loc 2 171 5 is_stmt 1 view .LVU249
 890               		.loc 2 171 23 is_stmt 0 view .LVU250
 891 00bc 64E6      		ldi r22,lo8(100)
 892 00be 70E0      		ldi r23,0
 893 00c0 80E0      		ldi r24,0
 894 00c2 0E94 0000 		call i2c_write
 895               	.LVL49:
 896               		.loc 2 171 21 view .LVU251
 897 00c6 9093 0000 		sts mcp23018_status+1,r25
 898 00ca 8093 0000 		sts mcp23018_status,r24
 899               		.loc 2 171 77 is_stmt 1 view .LVU252
 900               		.loc 2 171 80 is_stmt 0 view .LVU253
 901 00ce 892B      		or r24,r25
 902 00d0 01F4      		brne .L26
 172:keyboards/ergodox_ez/ergodox_ez.c ****     mcp23018_status = i2c_write(0b00111111, ERGODOX_EZ_I2C_TIMEOUT);        if (mcp23018_status) go
 903               		.loc 2 172 5 is_stmt 1 view .LVU254
 904               		.loc 2 172 23 is_stmt 0 view .LVU255
 905 00d2 64E6      		ldi r22,lo8(100)
 906 00d4 70E0      		ldi r23,0
 907 00d6 8FE3      		ldi r24,lo8(63)
 908 00d8 0E94 0000 		call i2c_write
 909               	.LVL50:
 910               		.loc 2 172 21 view .LVU256
 911 00dc 9093 0000 		sts mcp23018_status+1,r25
 912 00e0 8093 0000 		sts mcp23018_status,r24
 913               		.loc 2 172 77 is_stmt 1 view .LVU257
 914               	.L26:
 173:keyboards/ergodox_ez/ergodox_ez.c **** 
 174:keyboards/ergodox_ez/ergodox_ez.c **** out:
 175:keyboards/ergodox_ez/ergodox_ez.c ****     i2c_stop();
 915               		.loc 2 175 5 view .LVU258
 916 00e4 0E94 0000 		call i2c_stop
 917               	.LVL51:
 176:keyboards/ergodox_ez/ergodox_ez.c **** 
 177:keyboards/ergodox_ez/ergodox_ez.c **** #ifdef LEFT_LEDS
 178:keyboards/ergodox_ez/ergodox_ez.c ****     if (!mcp23018_status) mcp23018_status = ergodox_left_leds_update();
 179:keyboards/ergodox_ez/ergodox_ez.c **** #endif // LEFT_LEDS
 180:keyboards/ergodox_ez/ergodox_ez.c **** 
 181:keyboards/ergodox_ez/ergodox_ez.c ****     // SREG=sreg_prev;
 182:keyboards/ergodox_ez/ergodox_ez.c **** 
 183:keyboards/ergodox_ez/ergodox_ez.c ****     return mcp23018_status;
 918               		.loc 2 183 5 view .LVU259
 184:keyboards/ergodox_ez/ergodox_ez.c **** }
 919               		.loc 2 184 1 is_stmt 0 view .LVU260
 920 00e8 8091 0000 		lds r24,mcp23018_status
 921               	/* epilogue start */
 922 00ec 0895      		ret
 923               		.cfi_endproc
 924               	.LFE131:
 926               		.section	.text.eeconfig_init_kb,"ax",@progbits
 927               	.global	eeconfig_init_kb
 929               	eeconfig_init_kb:
 930               	.LFB132:
 185:keyboards/ergodox_ez/ergodox_ez.c **** 
 186:keyboards/ergodox_ez/ergodox_ez.c **** #ifdef LEFT_LEDS
 187:keyboards/ergodox_ez/ergodox_ez.c **** uint8_t ergodox_left_leds_update(void) {
 188:keyboards/ergodox_ez/ergodox_ez.c ****     if (mcp23018_status) { // if there was an error
 189:keyboards/ergodox_ez/ergodox_ez.c ****         return mcp23018_status;
 190:keyboards/ergodox_ez/ergodox_ez.c ****     }
 191:keyboards/ergodox_ez/ergodox_ez.c **** #define LEFT_LED_1_SHIFT        7       // in MCP23018 port B
 192:keyboards/ergodox_ez/ergodox_ez.c **** #define LEFT_LED_2_SHIFT        6       // in MCP23018 port B
 193:keyboards/ergodox_ez/ergodox_ez.c **** #define LEFT_LED_3_SHIFT        7       // in MCP23018 port A
 194:keyboards/ergodox_ez/ergodox_ez.c **** 
 195:keyboards/ergodox_ez/ergodox_ez.c ****     // set logical value (doesn't matter on inputs)
 196:keyboards/ergodox_ez/ergodox_ez.c ****     // - unused  : hi-Z : 1
 197:keyboards/ergodox_ez/ergodox_ez.c ****     // - input   : hi-Z : 1
 198:keyboards/ergodox_ez/ergodox_ez.c ****     // - driving : hi-Z : 1
 199:keyboards/ergodox_ez/ergodox_ez.c ****     mcp23018_status = i2c_start(I2C_ADDR_WRITE, ERGODOX_EZ_I2C_TIMEOUT);
 200:keyboards/ergodox_ez/ergodox_ez.c ****     if (mcp23018_status) goto out;
 201:keyboards/ergodox_ez/ergodox_ez.c ****     mcp23018_status = i2c_write(OLATA, ERGODOX_EZ_I2C_TIMEOUT);
 202:keyboards/ergodox_ez/ergodox_ez.c ****     if (mcp23018_status) goto out;
 203:keyboards/ergodox_ez/ergodox_ez.c ****     mcp23018_status = i2c_write(0b11111111
 204:keyboards/ergodox_ez/ergodox_ez.c ****                                 & ~(ergodox_left_led_3<<LEFT_LED_3_SHIFT),
 205:keyboards/ergodox_ez/ergodox_ez.c ****                                 ERGODOX_EZ_I2C_TIMEOUT);
 206:keyboards/ergodox_ez/ergodox_ez.c ****     if (mcp23018_status) goto out;
 207:keyboards/ergodox_ez/ergodox_ez.c ****     mcp23018_status = i2c_write(0b11111111
 208:keyboards/ergodox_ez/ergodox_ez.c ****                                 & ~(ergodox_left_led_2<<LEFT_LED_2_SHIFT)
 209:keyboards/ergodox_ez/ergodox_ez.c ****                                 & ~(ergodox_left_led_1<<LEFT_LED_1_SHIFT),
 210:keyboards/ergodox_ez/ergodox_ez.c ****                                 ERGODOX_EZ_I2C_TIMEOUT);
 211:keyboards/ergodox_ez/ergodox_ez.c ****     if (mcp23018_status) goto out;
 212:keyboards/ergodox_ez/ergodox_ez.c **** 
 213:keyboards/ergodox_ez/ergodox_ez.c ****  out:
 214:keyboards/ergodox_ez/ergodox_ez.c ****     i2c_stop();
 215:keyboards/ergodox_ez/ergodox_ez.c ****     return mcp23018_status;
 216:keyboards/ergodox_ez/ergodox_ez.c **** }
 217:keyboards/ergodox_ez/ergodox_ez.c **** #endif
 218:keyboards/ergodox_ez/ergodox_ez.c **** 
 219:keyboards/ergodox_ez/ergodox_ez.c **** 
 220:keyboards/ergodox_ez/ergodox_ez.c **** #ifdef SWAP_HANDS_ENABLE
 221:keyboards/ergodox_ez/ergodox_ez.c **** __attribute__ ((weak))
 222:keyboards/ergodox_ez/ergodox_ez.c **** // swap-hands action needs a matrix to define the swap
 223:keyboards/ergodox_ez/ergodox_ez.c **** const keypos_t hand_swap_config[MATRIX_ROWS][MATRIX_COLS] = {
 224:keyboards/ergodox_ez/ergodox_ez.c ****     /* Left hand, matrix positions */
 225:keyboards/ergodox_ez/ergodox_ez.c ****     {{0,13}, {1,13}, {2,13}, {3,13}, {4,13}, {5,13}},
 226:keyboards/ergodox_ez/ergodox_ez.c ****     {{0,12}, {1,12}, {2,12}, {3,12}, {4,12}, {5,12}},
 227:keyboards/ergodox_ez/ergodox_ez.c ****     {{0,11}, {1,11}, {2,11}, {3,11}, {4,11}, {5,11}},
 228:keyboards/ergodox_ez/ergodox_ez.c ****     {{0,10}, {1,10}, {2,10}, {3,10}, {4,10}, {5,10}},
 229:keyboards/ergodox_ez/ergodox_ez.c ****     {{0,9}, {1,9}, {2,9}, {3,9}, {4,9}, {5,9}},
 230:keyboards/ergodox_ez/ergodox_ez.c ****     {{0,8}, {1,8}, {2,8}, {3,8}, {4,8}, {5,8}},
 231:keyboards/ergodox_ez/ergodox_ez.c ****     {{0,7}, {1,7}, {2,7}, {3,7}, {4,7}, {5,7}},
 232:keyboards/ergodox_ez/ergodox_ez.c ****     /* Right hand, matrix positions */
 233:keyboards/ergodox_ez/ergodox_ez.c ****     {{0,6}, {1,6}, {2,6}, {3,6}, {4,6}, {5,6}},
 234:keyboards/ergodox_ez/ergodox_ez.c ****     {{0,5}, {1,5}, {2,5}, {3,5}, {4,5}, {5,5}},
 235:keyboards/ergodox_ez/ergodox_ez.c ****     {{0,4}, {1,4}, {2,4}, {3,4}, {4,4}, {5,4}},
 236:keyboards/ergodox_ez/ergodox_ez.c ****     {{0,3}, {1,3}, {2,3}, {3,3}, {4,3}, {5,3}},
 237:keyboards/ergodox_ez/ergodox_ez.c ****     {{0,2}, {1,2}, {2,2}, {3,2}, {4,2}, {5,2}},
 238:keyboards/ergodox_ez/ergodox_ez.c ****     {{0,1}, {1,1}, {2,1}, {3,1}, {4,1}, {5,1}},
 239:keyboards/ergodox_ez/ergodox_ez.c ****     {{0,0}, {1,0}, {2,0}, {3,0}, {4,0}, {5,0}},
 240:keyboards/ergodox_ez/ergodox_ez.c **** };
 241:keyboards/ergodox_ez/ergodox_ez.c **** #endif
 242:keyboards/ergodox_ez/ergodox_ez.c **** 
 243:keyboards/ergodox_ez/ergodox_ez.c **** #ifdef RGB_MATRIX_ENABLE
 244:keyboards/ergodox_ez/ergodox_ez.c **** const is31_led g_is31_leds[DRIVER_LED_TOTAL] = {
 245:keyboards/ergodox_ez/ergodox_ez.c **** /*   driver
 246:keyboards/ergodox_ez/ergodox_ez.c ****  *   |  R location
 247:keyboards/ergodox_ez/ergodox_ez.c ****  *   |  |      G location
 248:keyboards/ergodox_ez/ergodox_ez.c ****  *   |  |      |      B location
 249:keyboards/ergodox_ez/ergodox_ez.c ****  *   |  |      |      | */
 250:keyboards/ergodox_ez/ergodox_ez.c ****     {0, C3_1,  C2_1,  C4_1}, // LED1 on right
 251:keyboards/ergodox_ez/ergodox_ez.c ****     {0, C6_1,  C5_1,  C7_1}, // LED2
 252:keyboards/ergodox_ez/ergodox_ez.c ****     {0, C4_2,  C3_2,  C5_2}, // LED3
 253:keyboards/ergodox_ez/ergodox_ez.c ****     {0, C7_2,  C6_2,  C8_2}, // LED4
 254:keyboards/ergodox_ez/ergodox_ez.c ****     {0, C2_3,  C1_3,  C3_3}, // LED5
 255:keyboards/ergodox_ez/ergodox_ez.c ****     {0, C5_3,  C4_3,  C6_3}, // LED6
 256:keyboards/ergodox_ez/ergodox_ez.c ****     {0, C8_3,  C7_3,  C9_3}, // LED7
 257:keyboards/ergodox_ez/ergodox_ez.c ****     {0, C2_4,  C1_4,  C3_4}, // LED8
 258:keyboards/ergodox_ez/ergodox_ez.c ****     {0, C6_4,  C5_4,  C7_4}, // LED9
 259:keyboards/ergodox_ez/ergodox_ez.c ****     {0, C2_5,  C1_5,  C3_5}, // LED10
 260:keyboards/ergodox_ez/ergodox_ez.c ****     {0, C7_5,  C6_5,  C8_5}, // LED11
 261:keyboards/ergodox_ez/ergodox_ez.c ****     {0, C2_6,  C1_6,  C3_6}, // LED12
 262:keyboards/ergodox_ez/ergodox_ez.c ****     {0, C5_6,  C4_6,  C6_6}, // LED13
 263:keyboards/ergodox_ez/ergodox_ez.c ****     {0, C8_6,  C7_6,  C9_6}, // LED14
 264:keyboards/ergodox_ez/ergodox_ez.c ****     {0, C2_7,  C1_7,  C3_7}, // LED15
 265:keyboards/ergodox_ez/ergodox_ez.c ****     {0, C5_7,  C4_7,  C6_7}, // LED16
 266:keyboards/ergodox_ez/ergodox_ez.c ****     {0, C2_8,  C1_8,  C3_8}, // LED17
 267:keyboards/ergodox_ez/ergodox_ez.c ****     {0, C5_8,  C4_8,  C6_8}, // LED18
 268:keyboards/ergodox_ez/ergodox_ez.c **** 
 269:keyboards/ergodox_ez/ergodox_ez.c ****     {0, C3_9,  C2_9,  C4_9}, // LED19
 270:keyboards/ergodox_ez/ergodox_ez.c ****     {0, C6_9,  C5_9,  C7_9}, // LED20
 271:keyboards/ergodox_ez/ergodox_ez.c ****     {0, C4_10, C3_10, C5_10}, // LED21
 272:keyboards/ergodox_ez/ergodox_ez.c ****     {0, C7_10, C6_10, C8_10}, // LED22
 273:keyboards/ergodox_ez/ergodox_ez.c ****     {0, C2_11, C1_11, C3_11}, // LED23
 274:keyboards/ergodox_ez/ergodox_ez.c ****     {0, C5_11, C4_11, C6_11}, // LED24
 275:keyboards/ergodox_ez/ergodox_ez.c **** 
 276:keyboards/ergodox_ez/ergodox_ez.c ****     {1, C3_1,  C2_1,  C4_1}, // LED1 on left
 277:keyboards/ergodox_ez/ergodox_ez.c ****     {1, C6_1,  C5_1,  C7_1}, // LED2
 278:keyboards/ergodox_ez/ergodox_ez.c ****     {1, C4_2,  C3_2,  C5_2}, // LED3
 279:keyboards/ergodox_ez/ergodox_ez.c ****     {1, C7_2,  C6_2,  C8_2}, // LED4
 280:keyboards/ergodox_ez/ergodox_ez.c ****     {1, C2_3,  C1_3,  C3_3}, // LED5
 281:keyboards/ergodox_ez/ergodox_ez.c ****     {1, C5_3,  C4_3,  C6_3}, // LED6
 282:keyboards/ergodox_ez/ergodox_ez.c ****     {1, C8_3,  C7_3,  C9_3}, // LED7
 283:keyboards/ergodox_ez/ergodox_ez.c ****     {1, C2_4,  C1_4,  C3_4}, // LED8
 284:keyboards/ergodox_ez/ergodox_ez.c ****     {1, C6_4,  C5_4,  C7_4}, // LED9
 285:keyboards/ergodox_ez/ergodox_ez.c ****     {1, C2_5,  C1_5,  C3_5}, // LED10
 286:keyboards/ergodox_ez/ergodox_ez.c ****     {1, C7_5,  C6_5,  C8_5}, // LED11
 287:keyboards/ergodox_ez/ergodox_ez.c ****     {1, C2_6,  C1_6,  C3_6}, // LED12
 288:keyboards/ergodox_ez/ergodox_ez.c ****     {1, C5_6,  C4_6,  C6_6}, // LED13
 289:keyboards/ergodox_ez/ergodox_ez.c ****     {1, C8_6,  C7_6,  C9_6}, // LED14
 290:keyboards/ergodox_ez/ergodox_ez.c ****     {1, C2_7,  C1_7,  C3_7}, // LED15
 291:keyboards/ergodox_ez/ergodox_ez.c ****     {1, C5_7,  C4_7,  C6_7}, // LED16
 292:keyboards/ergodox_ez/ergodox_ez.c ****     {1, C2_8,  C1_8,  C3_8}, // LED17
 293:keyboards/ergodox_ez/ergodox_ez.c ****     {1, C5_8,  C4_8,  C6_8}, // LED18
 294:keyboards/ergodox_ez/ergodox_ez.c **** 
 295:keyboards/ergodox_ez/ergodox_ez.c ****     {1, C3_9,  C2_9,  C4_9}, // LED19
 296:keyboards/ergodox_ez/ergodox_ez.c ****     {1, C6_9,  C5_9,  C7_9}, // LED20
 297:keyboards/ergodox_ez/ergodox_ez.c ****     {1, C4_10, C3_10, C5_10}, // LED21
 298:keyboards/ergodox_ez/ergodox_ez.c ****     {1, C7_10, C6_10, C8_10}, // LED22
 299:keyboards/ergodox_ez/ergodox_ez.c ****     {1, C2_11, C1_11, C3_11}, // LED23
 300:keyboards/ergodox_ez/ergodox_ez.c ****     {1, C5_11, C4_11, C6_11} // LED24
 301:keyboards/ergodox_ez/ergodox_ez.c **** };
 302:keyboards/ergodox_ez/ergodox_ez.c **** 
 303:keyboards/ergodox_ez/ergodox_ez.c **** 
 304:keyboards/ergodox_ez/ergodox_ez.c **** led_config_t g_led_config = { {
 305:keyboards/ergodox_ez/ergodox_ez.c ****     { NO_LED, NO_LED, NO_LED, NO_LED, NO_LED, NO_LED },
 306:keyboards/ergodox_ez/ergodox_ez.c ****     {  28,  33,  38,  43,  47, NO_LED },
 307:keyboards/ergodox_ez/ergodox_ez.c ****     {  27,  32,  37,  42,  46, NO_LED },
 308:keyboards/ergodox_ez/ergodox_ez.c ****     {  26,  31,  36,  41,  45, NO_LED },
 309:keyboards/ergodox_ez/ergodox_ez.c ****     {  25,  30,  35,  40,  44, NO_LED },
 310:keyboards/ergodox_ez/ergodox_ez.c ****     {  24,  29,  34,  39, NO_LED, NO_LED },
 311:keyboards/ergodox_ez/ergodox_ez.c ****     { NO_LED, NO_LED, NO_LED, NO_LED, NO_LED, NO_LED },
 312:keyboards/ergodox_ez/ergodox_ez.c ****     { NO_LED, NO_LED, NO_LED, NO_LED, NO_LED, NO_LED },
 313:keyboards/ergodox_ez/ergodox_ez.c ****     {   0,   5,  10,  15, NO_LED, NO_LED },
 314:keyboards/ergodox_ez/ergodox_ez.c ****     {   1,   6,  11,  16,  20, NO_LED },
 315:keyboards/ergodox_ez/ergodox_ez.c ****     {   2,   7,  12,  17,  21, NO_LED },
 316:keyboards/ergodox_ez/ergodox_ez.c ****     {   3,   8,  13,  18,  22, NO_LED },
 317:keyboards/ergodox_ez/ergodox_ez.c ****     {   4,   9,  14,  19,  23, NO_LED },
 318:keyboards/ergodox_ez/ergodox_ez.c ****     { NO_LED, NO_LED, NO_LED, NO_LED, NO_LED, NO_LED }
 319:keyboards/ergodox_ez/ergodox_ez.c **** }, {
 320:keyboards/ergodox_ez/ergodox_ez.c ****     { 137,   0 }, { 154,   0 }, { 172,   0 }, { 189,   0 }, { 206,   0 }, { 137,  12 },
 321:keyboards/ergodox_ez/ergodox_ez.c ****     { 154,  12 }, { 172,  12 }, { 189,  12 }, { 206,  12 }, { 137,  25 }, { 154,  25 },
 322:keyboards/ergodox_ez/ergodox_ez.c ****     { 172,  25 }, { 189,  25 }, { 206,  25 }, { 137,  38 }, { 154,  38 }, { 172,  38 },
 323:keyboards/ergodox_ez/ergodox_ez.c ****     { 189,  38 }, { 206,  38 }, { 154,  51 }, { 172,  51 }, { 189,  51 }, { 206,  51 },
 324:keyboards/ergodox_ez/ergodox_ez.c ****     {  86,   0 }, {  68,   0 }, {  51,   0 }, {  34,   0 }, {  17,   0 }, {  86,  12 },
 325:keyboards/ergodox_ez/ergodox_ez.c ****     {  68,  12 }, {  51,  12 }, {  34,  12 }, {  17,  12 }, {  86,  25 }, {  68,  25 },
 326:keyboards/ergodox_ez/ergodox_ez.c ****     {  51,  25 }, {  34,  25 }, {  17,  25 }, {  86,  38 }, {  68,  38 }, {  51,  38 },
 327:keyboards/ergodox_ez/ergodox_ez.c ****     {  34,  38 }, {  17,  38 }, {  68,  51 }, {  51,  51 }, {  34,  51 }, {  17,  51 }
 328:keyboards/ergodox_ez/ergodox_ez.c **** }, {
 329:keyboards/ergodox_ez/ergodox_ez.c ****     4, 4, 4, 4, 4, 4,
 330:keyboards/ergodox_ez/ergodox_ez.c ****     4, 4, 4, 4, 4, 4,
 331:keyboards/ergodox_ez/ergodox_ez.c ****     4, 4, 4, 4, 4, 4,
 332:keyboards/ergodox_ez/ergodox_ez.c ****     4, 4, 1, 1, 1, 1,
 333:keyboards/ergodox_ez/ergodox_ez.c ****     4, 4, 4, 4, 4, 4,
 334:keyboards/ergodox_ez/ergodox_ez.c ****     4, 4, 4, 4, 4, 4,
 335:keyboards/ergodox_ez/ergodox_ez.c ****     4, 4, 4, 4, 4, 4,
 336:keyboards/ergodox_ez/ergodox_ez.c ****     4, 4, 1, 1, 1, 1
 337:keyboards/ergodox_ez/ergodox_ez.c **** } };
 338:keyboards/ergodox_ez/ergodox_ez.c **** 
 339:keyboards/ergodox_ez/ergodox_ez.c **** void suspend_power_down_kb(void) {
 340:keyboards/ergodox_ez/ergodox_ez.c ****     rgb_matrix_set_color_all(0, 0, 0);
 341:keyboards/ergodox_ez/ergodox_ez.c ****     rgb_matrix_set_suspend_state(true);
 342:keyboards/ergodox_ez/ergodox_ez.c ****     suspend_power_down_user();
 343:keyboards/ergodox_ez/ergodox_ez.c **** }
 344:keyboards/ergodox_ez/ergodox_ez.c **** 
 345:keyboards/ergodox_ez/ergodox_ez.c ****  void suspend_wakeup_init_kb(void) {
 346:keyboards/ergodox_ez/ergodox_ez.c ****     rgb_matrix_set_suspend_state(false);
 347:keyboards/ergodox_ez/ergodox_ez.c ****     suspend_wakeup_init_user();
 348:keyboards/ergodox_ez/ergodox_ez.c **** }
 349:keyboards/ergodox_ez/ergodox_ez.c **** 
 350:keyboards/ergodox_ez/ergodox_ez.c **** #ifdef ORYX_CONFIGURATOR
 351:keyboards/ergodox_ez/ergodox_ez.c **** void keyboard_post_init_kb(void) {
 352:keyboards/ergodox_ez/ergodox_ez.c ****     rgb_matrix_enable_noeeprom();
 353:keyboards/ergodox_ez/ergodox_ez.c ****     keyboard_post_init_user();
 354:keyboards/ergodox_ez/ergodox_ez.c **** }
 355:keyboards/ergodox_ez/ergodox_ez.c **** #endif
 356:keyboards/ergodox_ez/ergodox_ez.c **** #endif
 357:keyboards/ergodox_ez/ergodox_ez.c **** 
 358:keyboards/ergodox_ez/ergodox_ez.c **** #ifdef ORYX_CONFIGURATOR
 359:keyboards/ergodox_ez/ergodox_ez.c **** bool process_record_kb(uint16_t keycode, keyrecord_t *record) {
 360:keyboards/ergodox_ez/ergodox_ez.c ****     switch (keycode) {
 361:keyboards/ergodox_ez/ergodox_ez.c ****         case LED_LEVEL:
 362:keyboards/ergodox_ez/ergodox_ez.c ****             if (record->event.pressed) {
 363:keyboards/ergodox_ez/ergodox_ez.c ****                  keyboard_config.led_level++;
 364:keyboards/ergodox_ez/ergodox_ez.c ****                  if (keyboard_config.led_level > 4) {
 365:keyboards/ergodox_ez/ergodox_ez.c ****                     keyboard_config.led_level = 0;
 366:keyboards/ergodox_ez/ergodox_ez.c ****                  }
 367:keyboards/ergodox_ez/ergodox_ez.c ****                  ergodox_led_all_set((uint8_t)keyboard_config.led_level * 255 / 4 );
 368:keyboards/ergodox_ez/ergodox_ez.c ****                  eeconfig_update_kb(keyboard_config.raw);
 369:keyboards/ergodox_ez/ergodox_ez.c ****                  layer_state_set_kb(layer_state);
 370:keyboards/ergodox_ez/ergodox_ez.c ****             }
 371:keyboards/ergodox_ez/ergodox_ez.c ****             break;
 372:keyboards/ergodox_ez/ergodox_ez.c **** #ifdef RGB_MATRIX_ENABLE
 373:keyboards/ergodox_ez/ergodox_ez.c ****         case TOGGLE_LAYER_COLOR:
 374:keyboards/ergodox_ez/ergodox_ez.c ****             if (record->event.pressed) {
 375:keyboards/ergodox_ez/ergodox_ez.c ****                 keyboard_config.disable_layer_led ^= 1;
 376:keyboards/ergodox_ez/ergodox_ez.c ****                 if (keyboard_config.disable_layer_led)
 377:keyboards/ergodox_ez/ergodox_ez.c ****                     rgb_matrix_set_color_all(0, 0, 0);
 378:keyboards/ergodox_ez/ergodox_ez.c ****                 eeconfig_update_kb(keyboard_config.raw);
 379:keyboards/ergodox_ez/ergodox_ez.c ****             }
 380:keyboards/ergodox_ez/ergodox_ez.c ****             break;
 381:keyboards/ergodox_ez/ergodox_ez.c ****         case RGB_TOG:
 382:keyboards/ergodox_ez/ergodox_ez.c ****             if (record->event.pressed) {
 383:keyboards/ergodox_ez/ergodox_ez.c ****               switch (rgb_matrix_get_flags()) {
 384:keyboards/ergodox_ez/ergodox_ez.c ****                 case LED_FLAG_ALL: {
 385:keyboards/ergodox_ez/ergodox_ez.c ****                     rgb_matrix_set_flags(LED_FLAG_NONE);
 386:keyboards/ergodox_ez/ergodox_ez.c ****                     keyboard_config.rgb_matrix_enable = false;
 387:keyboards/ergodox_ez/ergodox_ez.c ****                     rgb_matrix_set_color_all(0, 0, 0);
 388:keyboards/ergodox_ez/ergodox_ez.c ****                   }
 389:keyboards/ergodox_ez/ergodox_ez.c ****                   break;
 390:keyboards/ergodox_ez/ergodox_ez.c ****                 default: {
 391:keyboards/ergodox_ez/ergodox_ez.c ****                     rgb_matrix_set_flags(LED_FLAG_ALL);
 392:keyboards/ergodox_ez/ergodox_ez.c ****                     keyboard_config.rgb_matrix_enable = true;
 393:keyboards/ergodox_ez/ergodox_ez.c ****                   }
 394:keyboards/ergodox_ez/ergodox_ez.c ****                   break;
 395:keyboards/ergodox_ez/ergodox_ez.c ****               }
 396:keyboards/ergodox_ez/ergodox_ez.c ****               eeconfig_update_kb(keyboard_config.raw);
 397:keyboards/ergodox_ez/ergodox_ez.c ****             }
 398:keyboards/ergodox_ez/ergodox_ez.c ****             return false;
 399:keyboards/ergodox_ez/ergodox_ez.c **** #endif
 400:keyboards/ergodox_ez/ergodox_ez.c ****     }
 401:keyboards/ergodox_ez/ergodox_ez.c ****     return process_record_user(keycode, record);
 402:keyboards/ergodox_ez/ergodox_ez.c **** }
 403:keyboards/ergodox_ez/ergodox_ez.c **** #endif
 404:keyboards/ergodox_ez/ergodox_ez.c **** 
 405:keyboards/ergodox_ez/ergodox_ez.c **** void eeconfig_init_kb(void) {  // EEPROM is getting reset!
 931               		.loc 2 405 29 is_stmt 1 view -0
 932               		.cfi_startproc
 933               	/* prologue: function */
 934               	/* frame size = 0 */
 935               	/* stack size = 0 */
 936               	.L__stack_usage = 0
 406:keyboards/ergodox_ez/ergodox_ez.c ****     keyboard_config.raw = 0;
 937               		.loc 2 406 5 view .LVU262
 938               		.loc 2 406 25 is_stmt 0 view .LVU263
 939 0000 1092 0000 		sts keyboard_config,__zero_reg__
 940 0004 1092 0000 		sts keyboard_config+1,__zero_reg__
 941 0008 1092 0000 		sts keyboard_config+2,__zero_reg__
 942 000c 1092 0000 		sts keyboard_config+3,__zero_reg__
 407:keyboards/ergodox_ez/ergodox_ez.c ****     keyboard_config.led_level = 4;
 943               		.loc 2 407 5 is_stmt 1 view .LVU264
 408:keyboards/ergodox_ez/ergodox_ez.c ****     keyboard_config.rgb_matrix_enable = true;
 944               		.loc 2 408 5 view .LVU265
 945               		.loc 2 408 39 is_stmt 0 view .LVU266
 946 0010 84E0      		ldi r24,lo8(4)
 947 0012 8061      		ori r24,lo8(1<<4)
 948 0014 8093 0000 		sts keyboard_config,r24
 409:keyboards/ergodox_ez/ergodox_ez.c ****     eeconfig_update_kb(keyboard_config.raw);
 949               		.loc 2 409 5 is_stmt 1 view .LVU267
 950 0018 6091 0000 		lds r22,keyboard_config
 951 001c 7091 0000 		lds r23,keyboard_config+1
 952 0020 8091 0000 		lds r24,keyboard_config+2
 953 0024 9091 0000 		lds r25,keyboard_config+3
 954 0028 0E94 0000 		call eeconfig_update_kb
 955               	.LVL52:
 410:keyboards/ergodox_ez/ergodox_ez.c ****     eeconfig_init_user();
 956               		.loc 2 410 5 view .LVU268
 957 002c 0C94 0000 		jmp eeconfig_init_user
 958               	.LVL53:
 959               		.cfi_endproc
 960               	.LFE132:
 962               		.weak	hand_swap_config
 963               		.section	.rodata.hand_swap_config,"a"
 966               	hand_swap_config:
 967 0000 00        		.byte	0
 968 0001 0D        		.byte	13
 969 0002 01        		.byte	1
 970 0003 0D        		.byte	13
 971 0004 02        		.byte	2
 972 0005 0D        		.byte	13
 973 0006 03        		.byte	3
 974 0007 0D        		.byte	13
 975 0008 04        		.byte	4
 976 0009 0D        		.byte	13
 977 000a 05        		.byte	5
 978 000b 0D        		.byte	13
 979 000c 00        		.byte	0
 980 000d 0C        		.byte	12
 981 000e 01        		.byte	1
 982 000f 0C        		.byte	12
 983 0010 02        		.byte	2
 984 0011 0C        		.byte	12
 985 0012 03        		.byte	3
 986 0013 0C        		.byte	12
 987 0014 04        		.byte	4
 988 0015 0C        		.byte	12
 989 0016 05        		.byte	5
 990 0017 0C        		.byte	12
 991 0018 00        		.byte	0
 992 0019 0B        		.byte	11
 993 001a 01        		.byte	1
 994 001b 0B        		.byte	11
 995 001c 02        		.byte	2
 996 001d 0B        		.byte	11
 997 001e 03        		.byte	3
 998 001f 0B        		.byte	11
 999 0020 04        		.byte	4
 1000 0021 0B        		.byte	11
 1001 0022 05        		.byte	5
 1002 0023 0B        		.byte	11
 1003 0024 00        		.byte	0
 1004 0025 0A        		.byte	10
 1005 0026 01        		.byte	1
 1006 0027 0A        		.byte	10
 1007 0028 02        		.byte	2
 1008 0029 0A        		.byte	10
 1009 002a 03        		.byte	3
 1010 002b 0A        		.byte	10
 1011 002c 04        		.byte	4
 1012 002d 0A        		.byte	10
 1013 002e 05        		.byte	5
 1014 002f 0A        		.byte	10
 1015 0030 00        		.byte	0
 1016 0031 09        		.byte	9
 1017 0032 01        		.byte	1
 1018 0033 09        		.byte	9
 1019 0034 02        		.byte	2
 1020 0035 09        		.byte	9
 1021 0036 03        		.byte	3
 1022 0037 09        		.byte	9
 1023 0038 04        		.byte	4
 1024 0039 09        		.byte	9
 1025 003a 05        		.byte	5
 1026 003b 09        		.byte	9
 1027 003c 00        		.byte	0
 1028 003d 08        		.byte	8
 1029 003e 01        		.byte	1
 1030 003f 08        		.byte	8
 1031 0040 02        		.byte	2
 1032 0041 08        		.byte	8
 1033 0042 03        		.byte	3
 1034 0043 08        		.byte	8
 1035 0044 04        		.byte	4
 1036 0045 08        		.byte	8
 1037 0046 05        		.byte	5
 1038 0047 08        		.byte	8
 1039 0048 00        		.byte	0
 1040 0049 07        		.byte	7
 1041 004a 01        		.byte	1
 1042 004b 07        		.byte	7
 1043 004c 02        		.byte	2
 1044 004d 07        		.byte	7
 1045 004e 03        		.byte	3
 1046 004f 07        		.byte	7
 1047 0050 04        		.byte	4
 1048 0051 07        		.byte	7
 1049 0052 05        		.byte	5
 1050 0053 07        		.byte	7
 1051 0054 00        		.byte	0
 1052 0055 06        		.byte	6
 1053 0056 01        		.byte	1
 1054 0057 06        		.byte	6
 1055 0058 02        		.byte	2
 1056 0059 06        		.byte	6
 1057 005a 03        		.byte	3
 1058 005b 06        		.byte	6
 1059 005c 04        		.byte	4
 1060 005d 06        		.byte	6
 1061 005e 05        		.byte	5
 1062 005f 06        		.byte	6
 1063 0060 00        		.byte	0
 1064 0061 05        		.byte	5
 1065 0062 01        		.byte	1
 1066 0063 05        		.byte	5
 1067 0064 02        		.byte	2
 1068 0065 05        		.byte	5
 1069 0066 03        		.byte	3
 1070 0067 05        		.byte	5
 1071 0068 04        		.byte	4
 1072 0069 05        		.byte	5
 1073 006a 05        		.byte	5
 1074 006b 05        		.byte	5
 1075 006c 00        		.byte	0
 1076 006d 04        		.byte	4
 1077 006e 01        		.byte	1
 1078 006f 04        		.byte	4
 1079 0070 02        		.byte	2
 1080 0071 04        		.byte	4
 1081 0072 03        		.byte	3
 1082 0073 04        		.byte	4
 1083 0074 04        		.byte	4
 1084 0075 04        		.byte	4
 1085 0076 05        		.byte	5
 1086 0077 04        		.byte	4
 1087 0078 00        		.byte	0
 1088 0079 03        		.byte	3
 1089 007a 01        		.byte	1
 1090 007b 03        		.byte	3
 1091 007c 02        		.byte	2
 1092 007d 03        		.byte	3
 1093 007e 03        		.byte	3
 1094 007f 03        		.byte	3
 1095 0080 04        		.byte	4
 1096 0081 03        		.byte	3
 1097 0082 05        		.byte	5
 1098 0083 03        		.byte	3
 1099 0084 00        		.byte	0
 1100 0085 02        		.byte	2
 1101 0086 01        		.byte	1
 1102 0087 02        		.byte	2
 1103 0088 02        		.byte	2
 1104 0089 02        		.byte	2
 1105 008a 03        		.byte	3
 1106 008b 02        		.byte	2
 1107 008c 04        		.byte	4
 1108 008d 02        		.byte	2
 1109 008e 05        		.byte	5
 1110 008f 02        		.byte	2
 1111 0090 00        		.byte	0
 1112 0091 01        		.byte	1
 1113 0092 01        		.byte	1
 1114 0093 01        		.byte	1
 1115 0094 02        		.byte	2
 1116 0095 01        		.byte	1
 1117 0096 03        		.byte	3
 1118 0097 01        		.byte	1
 1119 0098 04        		.byte	4
 1120 0099 01        		.byte	1
 1121 009a 05        		.byte	5
 1122 009b 01        		.byte	1
 1123 009c 00        		.byte	0
 1124 009d 00        		.byte	0
 1125 009e 01        		.byte	1
 1126 009f 00        		.byte	0
 1127 00a0 02        		.byte	2
 1128 00a1 00        		.byte	0
 1129 00a2 03        		.byte	3
 1130 00a3 00        		.byte	0
 1131 00a4 04        		.byte	4
 1132 00a5 00        		.byte	0
 1133 00a6 05        		.byte	5
 1134 00a7 00        		.byte	0
 1135               	.global	mcp23018_status
 1136               		.section	.data.mcp23018_status,"aw"
 1139               	mcp23018_status:
 1140 0000 2000      		.word	32
 1141               	.global	i2c_initialized
 1142               		.section	.bss.i2c_initialized,"aw",@nobits
 1145               	i2c_initialized:
 1146 0000 00        		.zero	1
 1147               		.comm	keyboard_config,4,1
 1148               		.text
 1149               	.Letext0:
 1150               		.file 4 "/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/stdint.h"
 1151               		.file 5 "/usr/local/Cellar/avr-gcc@8/8.4.0/lib/avr-gcc/8/gcc/avr/8.4.0/include/stddef.h"
 1152               		.file 6 "tmk_core/common/keyboard.h"
 1153               		.file 7 "tmk_core/common/action.h"
 1154               		.file 8 "lib/lufa/LUFA/Drivers/USB/Core/AVR8/../StdRequestType.h"
 1155               		.file 9 "lib/lufa/LUFA/Drivers/USB/Core/AVR8/../DeviceStandardReq.h"
 1156               		.file 10 "lib/lufa/LUFA/Drivers/USB/Core/USBTask.h"
 1157               		.file 11 "lib/lufa/LUFA/Drivers/USB/Core/HostStandardReq.h"
 1158               		.file 12 "/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/stdio.h"
 1159               		.file 13 "tmk_core/common/report.h"
 1160               		.file 14 "tmk_core/common/host.h"
 1161               		.file 15 "tmk_core/common/debug.h"
 1162               		.file 16 "quantum/keycode_config.h"
 1163               		.file 17 "quantum/keymap.h"
 1164               		.file 18 "tmk_core/common/action_layer.h"
 1165               		.file 19 "tmk_core/common/timer.h"
 1166               		.file 20 "tmk_core/common/action_util.h"
 1167               		.file 21 "/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/stdlib.h"
 1168               		.file 22 "quantum/process_keycode/process_unicode_common.h"
 1169               		.file 23 "quantum/quantum.h"
 1170               		.file 24 "drivers/avr/i2c_master.h"
 1171               		.file 25 "tmk_core/common/eeconfig.h"
 1172               		.file 26 "quantum/quantum_keycodes.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 ergodox_ez.c
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccn3l2UI.s:2      *ABS*:000000000000003e __SP_H__
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccn3l2UI.s:3      *ABS*:000000000000003d __SP_L__
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccn3l2UI.s:4      *ABS*:000000000000003f __SREG__
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccn3l2UI.s:5      *ABS*:0000000000000000 __tmp_reg__
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccn3l2UI.s:6      *ABS*:0000000000000001 __zero_reg__
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccn3l2UI.s:13     .text.ergodox_board_led_on:0000000000000000 ergodox_board_led_on
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccn3l2UI.s:37     .text.ergodox_right_led_1_on:0000000000000000 ergodox_right_led_1_on
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccn3l2UI.s:60     .text.ergodox_right_led_2_on:0000000000000000 ergodox_right_led_2_on
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccn3l2UI.s:83     .text.ergodox_right_led_3_on:0000000000000000 ergodox_right_led_3_on
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccn3l2UI.s:106    .text.ergodox_right_led_on:0000000000000000 ergodox_right_led_on
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccn3l2UI.s:149    .text.ergodox_board_led_off:0000000000000000 ergodox_board_led_off
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccn3l2UI.s:172    .text.ergodox_right_led_1_off:0000000000000000 ergodox_right_led_1_off
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccn3l2UI.s:195    .text.ergodox_right_led_2_off:0000000000000000 ergodox_right_led_2_off
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccn3l2UI.s:218    .text.ergodox_right_led_3_off:0000000000000000 ergodox_right_led_3_off
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccn3l2UI.s:241    .text.ergodox_right_led_off:0000000000000000 ergodox_right_led_off
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccn3l2UI.s:285    .text.ergodox_led_all_on:0000000000000000 ergodox_led_all_on
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccn3l2UI.s:311    .text.ergodox_led_all_off:0000000000000000 ergodox_led_all_off
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccn3l2UI.s:337    .text.ergodox_right_led_1_set:0000000000000000 ergodox_right_led_1_set
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccn3l2UI.s:360    .text.ergodox_right_led_2_set:0000000000000000 ergodox_right_led_2_set
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccn3l2UI.s:383    .text.ergodox_right_led_3_set:0000000000000000 ergodox_right_led_3_set
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccn3l2UI.s:406    .text.ergodox_right_led_set:0000000000000000 ergodox_right_led_set
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccn3l2UI.s:445    .text.ergodox_led_all_set:0000000000000000 ergodox_led_all_set
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccn3l2UI.s:503    .text.ergodox_blink_all_leds:0000000000000000 ergodox_blink_all_leds
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccn3l2UI.s:667    .text.matrix_init_kb:0000000000000000 matrix_init_kb
                            *COM*:0000000000000004 keyboard_config
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccn3l2UI.s:748    .text.init_mcp23018:0000000000000000 init_mcp23018
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccn3l2UI.s:1139   .data.mcp23018_status:0000000000000000 mcp23018_status
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccn3l2UI.s:1145   .bss.i2c_initialized:0000000000000000 i2c_initialized
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccn3l2UI.s:929    .text.eeconfig_init_kb:0000000000000000 eeconfig_init_kb
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccn3l2UI.s:966    .rodata.hand_swap_config:0000000000000000 hand_swap_config

UNDEFINED SYMBOLS
eeconfig_read_kb
matrix_init_user
i2c_init
i2c_start
i2c_write
i2c_stop
eeconfig_update_kb
eeconfig_init_user
__do_copy_data
__do_clear_bss
