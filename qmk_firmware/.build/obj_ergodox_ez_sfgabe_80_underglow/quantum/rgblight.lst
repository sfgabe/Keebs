   1               		.file	"rgblight.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.rgblight_effect_dummy,"ax",@progbits
  12               	rgblight_effect_dummy:
  13               	.LVL0:
  14               	.LFB170:
  15               		.file 1 "quantum/rgblight.c"
   1:quantum/rgblight.c **** /* Copyright 2016-2017 Yang Liu
   2:quantum/rgblight.c ****  *
   3:quantum/rgblight.c ****  * This program is free software: you can redistribute it and/or modify
   4:quantum/rgblight.c ****  * it under the terms of the GNU General Public License as published by
   5:quantum/rgblight.c ****  * the Free Software Foundation, either version 2 of the License, or
   6:quantum/rgblight.c ****  * (at your option) any later version.
   7:quantum/rgblight.c ****  *
   8:quantum/rgblight.c ****  * This program is distributed in the hope that it will be useful,
   9:quantum/rgblight.c ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  10:quantum/rgblight.c ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  11:quantum/rgblight.c ****  * GNU General Public License for more details.
  12:quantum/rgblight.c ****  *
  13:quantum/rgblight.c ****  * You should have received a copy of the GNU General Public License
  14:quantum/rgblight.c ****  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  15:quantum/rgblight.c ****  */
  16:quantum/rgblight.c **** #include <math.h>
  17:quantum/rgblight.c **** #include <string.h>
  18:quantum/rgblight.c **** #include <stdlib.h>
  19:quantum/rgblight.c **** #ifdef __AVR__
  20:quantum/rgblight.c **** #    include <avr/eeprom.h>
  21:quantum/rgblight.c **** #    include <avr/interrupt.h>
  22:quantum/rgblight.c **** #endif
  23:quantum/rgblight.c **** #ifdef EEPROM_ENABLE
  24:quantum/rgblight.c **** #    include "eeprom.h"
  25:quantum/rgblight.c **** #endif
  26:quantum/rgblight.c **** #ifdef STM32_EEPROM_ENABLE
  27:quantum/rgblight.c **** #    include "hal.h"
  28:quantum/rgblight.c **** #    include "eeprom_stm32.h"
  29:quantum/rgblight.c **** #endif
  30:quantum/rgblight.c **** #include "wait.h"
  31:quantum/rgblight.c **** #include "progmem.h"
  32:quantum/rgblight.c **** #include "timer.h"
  33:quantum/rgblight.c **** #include "rgblight.h"
  34:quantum/rgblight.c **** #include "color.h"
  35:quantum/rgblight.c **** #include "debug.h"
  36:quantum/rgblight.c **** #include "led_tables.h"
  37:quantum/rgblight.c **** #include "lib/lib8tion/lib8tion.h"
  38:quantum/rgblight.c **** #ifdef VELOCIKEY_ENABLE
  39:quantum/rgblight.c **** #    include "velocikey.h"
  40:quantum/rgblight.c **** #endif
  41:quantum/rgblight.c **** 
  42:quantum/rgblight.c **** #ifndef MIN
  43:quantum/rgblight.c **** #    define MIN(a, b) (((a) < (b)) ? (a) : (b))
  44:quantum/rgblight.c **** #endif
  45:quantum/rgblight.c **** 
  46:quantum/rgblight.c **** #ifdef RGBLIGHT_SPLIT
  47:quantum/rgblight.c **** /* for split keyboard */
  48:quantum/rgblight.c **** #    define RGBLIGHT_SPLIT_SET_CHANGE_MODE rgblight_status.change_flags |= RGBLIGHT_STATUS_CHANGE_M
  49:quantum/rgblight.c **** #    define RGBLIGHT_SPLIT_SET_CHANGE_HSVS rgblight_status.change_flags |= RGBLIGHT_STATUS_CHANGE_H
  50:quantum/rgblight.c **** #    define RGBLIGHT_SPLIT_SET_CHANGE_MODEHSVS rgblight_status.change_flags |= (RGBLIGHT_STATUS_CHA
  51:quantum/rgblight.c **** #    define RGBLIGHT_SPLIT_SET_CHANGE_LAYERS rgblight_status.change_flags |= RGBLIGHT_STATUS_CHANGE
  52:quantum/rgblight.c **** #    define RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE rgblight_status.change_flags |= RGBLIGHT_STATUS_
  53:quantum/rgblight.c **** #    define RGBLIGHT_SPLIT_ANIMATION_TICK rgblight_status.change_flags |= RGBLIGHT_STATUS_ANIMATION
  54:quantum/rgblight.c **** #else
  55:quantum/rgblight.c **** #    define RGBLIGHT_SPLIT_SET_CHANGE_MODE
  56:quantum/rgblight.c **** #    define RGBLIGHT_SPLIT_SET_CHANGE_HSVS
  57:quantum/rgblight.c **** #    define RGBLIGHT_SPLIT_SET_CHANGE_MODEHSVS
  58:quantum/rgblight.c **** #    define RGBLIGHT_SPLIT_SET_CHANGE_LAYERS
  59:quantum/rgblight.c **** #    define RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE
  60:quantum/rgblight.c **** #    define RGBLIGHT_SPLIT_ANIMATION_TICK
  61:quantum/rgblight.c **** #endif
  62:quantum/rgblight.c **** 
  63:quantum/rgblight.c **** #define _RGBM_SINGLE_STATIC(sym) RGBLIGHT_MODE_##sym,
  64:quantum/rgblight.c **** #define _RGBM_SINGLE_DYNAMIC(sym)
  65:quantum/rgblight.c **** #define _RGBM_MULTI_STATIC(sym) RGBLIGHT_MODE_##sym,
  66:quantum/rgblight.c **** #define _RGBM_MULTI_DYNAMIC(sym)
  67:quantum/rgblight.c **** #define _RGBM_TMP_STATIC(sym, msym) RGBLIGHT_MODE_##sym,
  68:quantum/rgblight.c **** #define _RGBM_TMP_DYNAMIC(sym, msym)
  69:quantum/rgblight.c **** static uint8_t static_effect_table[] = {
  70:quantum/rgblight.c **** #include "rgblight_modes.h"
  71:quantum/rgblight.c **** };
  72:quantum/rgblight.c **** 
  73:quantum/rgblight.c **** #define _RGBM_SINGLE_STATIC(sym) RGBLIGHT_MODE_##sym,
  74:quantum/rgblight.c **** #define _RGBM_SINGLE_DYNAMIC(sym) RGBLIGHT_MODE_##sym,
  75:quantum/rgblight.c **** #define _RGBM_MULTI_STATIC(sym) RGBLIGHT_MODE_##sym,
  76:quantum/rgblight.c **** #define _RGBM_MULTI_DYNAMIC(sym) RGBLIGHT_MODE_##sym,
  77:quantum/rgblight.c **** #define _RGBM_TMP_STATIC(sym, msym) RGBLIGHT_MODE_##msym,
  78:quantum/rgblight.c **** #define _RGBM_TMP_DYNAMIC(sym, msym) RGBLIGHT_MODE_##msym,
  79:quantum/rgblight.c **** static uint8_t mode_base_table[] = {
  80:quantum/rgblight.c ****     0,  // RGBLIGHT_MODE_zero
  81:quantum/rgblight.c **** #include "rgblight_modes.h"
  82:quantum/rgblight.c **** };
  83:quantum/rgblight.c **** 
  84:quantum/rgblight.c **** static inline int is_static_effect(uint8_t mode) { return memchr(static_effect_table, mode, sizeof(
  85:quantum/rgblight.c **** 
  86:quantum/rgblight.c **** #ifdef RGBLIGHT_LED_MAP
  87:quantum/rgblight.c **** const uint8_t led_map[] PROGMEM = RGBLIGHT_LED_MAP;
  88:quantum/rgblight.c **** #endif
  89:quantum/rgblight.c **** 
  90:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_STATIC_GRADIENT
  91:quantum/rgblight.c **** __attribute__((weak)) const uint8_t RGBLED_GRADIENT_RANGES[] PROGMEM = {255, 170, 127, 85, 64};
  92:quantum/rgblight.c **** #endif
  93:quantum/rgblight.c **** 
  94:quantum/rgblight.c **** rgblight_config_t rgblight_config;
  95:quantum/rgblight.c **** rgblight_status_t rgblight_status         = {.timer_enabled = false};
  96:quantum/rgblight.c **** bool              is_rgblight_initialized = false;
  97:quantum/rgblight.c **** 
  98:quantum/rgblight.c **** #ifdef RGBLIGHT_USE_TIMER
  99:quantum/rgblight.c **** animation_status_t animation_status = {};
 100:quantum/rgblight.c **** #endif
 101:quantum/rgblight.c **** 
 102:quantum/rgblight.c **** #ifndef LED_ARRAY
 103:quantum/rgblight.c **** LED_TYPE led[RGBLED_NUM];
 104:quantum/rgblight.c **** #    define LED_ARRAY led
 105:quantum/rgblight.c **** #endif
 106:quantum/rgblight.c **** 
 107:quantum/rgblight.c **** #ifdef RGBLIGHT_LAYERS
 108:quantum/rgblight.c **** rgblight_segment_t const *const *rgblight_layers = NULL;
 109:quantum/rgblight.c **** #endif
 110:quantum/rgblight.c **** 
 111:quantum/rgblight.c **** rgblight_ranges_t rgblight_ranges = {0, RGBLED_NUM, 0, RGBLED_NUM, RGBLED_NUM};
 112:quantum/rgblight.c **** 
 113:quantum/rgblight.c **** void rgblight_set_clipping_range(uint8_t start_pos, uint8_t num_leds) {
 114:quantum/rgblight.c ****     rgblight_ranges.clipping_start_pos = start_pos;
 115:quantum/rgblight.c ****     rgblight_ranges.clipping_num_leds  = num_leds;
 116:quantum/rgblight.c **** }
 117:quantum/rgblight.c **** 
 118:quantum/rgblight.c **** void rgblight_set_effect_range(uint8_t start_pos, uint8_t num_leds) {
 119:quantum/rgblight.c ****     if (start_pos >= RGBLED_NUM) return;
 120:quantum/rgblight.c ****     if (start_pos + num_leds > RGBLED_NUM) return;
 121:quantum/rgblight.c ****     rgblight_ranges.effect_start_pos = start_pos;
 122:quantum/rgblight.c ****     rgblight_ranges.effect_end_pos   = start_pos + num_leds;
 123:quantum/rgblight.c ****     rgblight_ranges.effect_num_leds  = num_leds;
 124:quantum/rgblight.c **** }
 125:quantum/rgblight.c **** 
 126:quantum/rgblight.c **** void sethsv_raw(uint8_t hue, uint8_t sat, uint8_t val, LED_TYPE *led1) {
 127:quantum/rgblight.c ****     HSV hsv = {hue, sat, val};
 128:quantum/rgblight.c ****     RGB rgb = hsv_to_rgb(hsv);
 129:quantum/rgblight.c ****     setrgb(rgb.r, rgb.g, rgb.b, led1);
 130:quantum/rgblight.c **** }
 131:quantum/rgblight.c **** 
 132:quantum/rgblight.c **** void sethsv(uint8_t hue, uint8_t sat, uint8_t val, LED_TYPE *led1) { sethsv_raw(hue, sat, val > RGB
 133:quantum/rgblight.c **** 
 134:quantum/rgblight.c **** void setrgb(uint8_t r, uint8_t g, uint8_t b, LED_TYPE *led1) {
 135:quantum/rgblight.c ****     led1->r = r;
 136:quantum/rgblight.c ****     led1->g = g;
 137:quantum/rgblight.c ****     led1->b = b;
 138:quantum/rgblight.c **** #ifdef RGBW
 139:quantum/rgblight.c ****     led1->w = 0;
 140:quantum/rgblight.c **** #endif
 141:quantum/rgblight.c **** }
 142:quantum/rgblight.c **** 
 143:quantum/rgblight.c **** void rgblight_check_config(void) {
 144:quantum/rgblight.c ****     /* Add some out of bound checks for RGB light config */
 145:quantum/rgblight.c **** 
 146:quantum/rgblight.c ****     if (rgblight_config.mode < RGBLIGHT_MODE_STATIC_LIGHT) {
 147:quantum/rgblight.c ****         rgblight_config.mode = RGBLIGHT_MODE_STATIC_LIGHT;
 148:quantum/rgblight.c ****     } else if (rgblight_config.mode > RGBLIGHT_MODES) {
 149:quantum/rgblight.c ****         rgblight_config.mode = RGBLIGHT_MODES;
 150:quantum/rgblight.c ****     }
 151:quantum/rgblight.c **** 
 152:quantum/rgblight.c ****     if (rgblight_config.val > RGBLIGHT_LIMIT_VAL) {
 153:quantum/rgblight.c ****         rgblight_config.val = RGBLIGHT_LIMIT_VAL;
 154:quantum/rgblight.c ****     }
 155:quantum/rgblight.c **** }
 156:quantum/rgblight.c **** 
 157:quantum/rgblight.c **** uint32_t eeconfig_read_rgblight(void) {
 158:quantum/rgblight.c **** #ifdef EEPROM_ENABLE
 159:quantum/rgblight.c ****     return eeprom_read_dword(EECONFIG_RGBLIGHT);
 160:quantum/rgblight.c **** #else
 161:quantum/rgblight.c ****     return 0;
 162:quantum/rgblight.c **** #endif
 163:quantum/rgblight.c **** }
 164:quantum/rgblight.c **** 
 165:quantum/rgblight.c **** void eeconfig_update_rgblight(uint32_t val) {
 166:quantum/rgblight.c **** #ifdef EEPROM_ENABLE
 167:quantum/rgblight.c ****     rgblight_check_config();
 168:quantum/rgblight.c ****     eeprom_update_dword(EECONFIG_RGBLIGHT, val);
 169:quantum/rgblight.c **** #endif
 170:quantum/rgblight.c **** }
 171:quantum/rgblight.c **** 
 172:quantum/rgblight.c **** void eeconfig_update_rgblight_current(void) { eeconfig_update_rgblight(rgblight_config.raw); }
 173:quantum/rgblight.c **** 
 174:quantum/rgblight.c **** void eeconfig_update_rgblight_default(void) {
 175:quantum/rgblight.c ****     rgblight_config.enable = 1;
 176:quantum/rgblight.c ****     rgblight_config.mode   = RGBLIGHT_MODE_STATIC_LIGHT;
 177:quantum/rgblight.c ****     rgblight_config.hue    = 0;
 178:quantum/rgblight.c ****     rgblight_config.sat    = UINT8_MAX;
 179:quantum/rgblight.c ****     rgblight_config.val    = RGBLIGHT_LIMIT_VAL;
 180:quantum/rgblight.c ****     rgblight_config.speed  = 0;
 181:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_MODEHSVS;
 182:quantum/rgblight.c ****     eeconfig_update_rgblight(rgblight_config.raw);
 183:quantum/rgblight.c **** }
 184:quantum/rgblight.c **** 
 185:quantum/rgblight.c **** void eeconfig_debug_rgblight(void) {
 186:quantum/rgblight.c ****     dprintf("rgblight_config EEPROM:\n");
 187:quantum/rgblight.c ****     dprintf("rgblight_config.enable = %d\n", rgblight_config.enable);
 188:quantum/rgblight.c ****     dprintf("rghlight_config.mode = %d\n", rgblight_config.mode);
 189:quantum/rgblight.c ****     dprintf("rgblight_config.hue = %d\n", rgblight_config.hue);
 190:quantum/rgblight.c ****     dprintf("rgblight_config.sat = %d\n", rgblight_config.sat);
 191:quantum/rgblight.c ****     dprintf("rgblight_config.val = %d\n", rgblight_config.val);
 192:quantum/rgblight.c ****     dprintf("rgblight_config.speed = %d\n", rgblight_config.speed);
 193:quantum/rgblight.c **** }
 194:quantum/rgblight.c **** 
 195:quantum/rgblight.c **** void rgblight_init(void) {
 196:quantum/rgblight.c ****     /* if already initialized, don't do it again.
 197:quantum/rgblight.c ****        If you must do it again, extern this and set to false, first.
 198:quantum/rgblight.c ****        This is a dirty, dirty hack until proper hooks can be added for keyboard startup. */
 199:quantum/rgblight.c ****     if (is_rgblight_initialized) {
 200:quantum/rgblight.c ****         return;
 201:quantum/rgblight.c ****     }
 202:quantum/rgblight.c **** 
 203:quantum/rgblight.c ****     dprintf("rgblight_init called.\n");
 204:quantum/rgblight.c ****     dprintf("rgblight_init start!\n");
 205:quantum/rgblight.c ****     if (!eeconfig_is_enabled()) {
 206:quantum/rgblight.c ****         dprintf("rgblight_init eeconfig is not enabled.\n");
 207:quantum/rgblight.c ****         eeconfig_init();
 208:quantum/rgblight.c ****         eeconfig_update_rgblight_default();
 209:quantum/rgblight.c ****     }
 210:quantum/rgblight.c ****     rgblight_config.raw = eeconfig_read_rgblight();
 211:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_MODEHSVS;
 212:quantum/rgblight.c ****     if (!rgblight_config.mode) {
 213:quantum/rgblight.c ****         dprintf("rgblight_init rgblight_config.mode = 0. Write default values to EEPROM.\n");
 214:quantum/rgblight.c ****         eeconfig_update_rgblight_default();
 215:quantum/rgblight.c ****         rgblight_config.raw = eeconfig_read_rgblight();
 216:quantum/rgblight.c ****     }
 217:quantum/rgblight.c ****     rgblight_check_config();
 218:quantum/rgblight.c **** 
 219:quantum/rgblight.c ****     eeconfig_debug_rgblight();  // display current eeprom values
 220:quantum/rgblight.c **** 
 221:quantum/rgblight.c ****     rgblight_timer_init();  // setup the timer
 222:quantum/rgblight.c **** 
 223:quantum/rgblight.c ****     if (rgblight_config.enable) {
 224:quantum/rgblight.c ****         rgblight_mode_noeeprom(rgblight_config.mode);
 225:quantum/rgblight.c ****     }
 226:quantum/rgblight.c **** 
 227:quantum/rgblight.c ****     is_rgblight_initialized = true;
 228:quantum/rgblight.c **** }
 229:quantum/rgblight.c **** 
 230:quantum/rgblight.c **** uint32_t rgblight_read_dword(void) { return rgblight_config.raw; }
 231:quantum/rgblight.c **** 
 232:quantum/rgblight.c **** void rgblight_update_dword(uint32_t dword) {
 233:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_MODEHSVS;
 234:quantum/rgblight.c ****     rgblight_config.raw = dword;
 235:quantum/rgblight.c ****     if (rgblight_config.enable)
 236:quantum/rgblight.c ****         rgblight_mode_noeeprom(rgblight_config.mode);
 237:quantum/rgblight.c ****     else {
 238:quantum/rgblight.c ****         rgblight_timer_disable();
 239:quantum/rgblight.c ****         rgblight_set();
 240:quantum/rgblight.c ****     }
 241:quantum/rgblight.c **** }
 242:quantum/rgblight.c **** 
 243:quantum/rgblight.c **** void rgblight_increase(void) {
 244:quantum/rgblight.c ****     uint8_t mode = 0;
 245:quantum/rgblight.c ****     if (rgblight_config.mode < RGBLIGHT_MODES) {
 246:quantum/rgblight.c ****         mode = rgblight_config.mode + 1;
 247:quantum/rgblight.c ****     }
 248:quantum/rgblight.c ****     rgblight_mode(mode);
 249:quantum/rgblight.c **** }
 250:quantum/rgblight.c **** void rgblight_decrease(void) {
 251:quantum/rgblight.c ****     uint8_t mode = 0;
 252:quantum/rgblight.c ****     // Mode will never be < 1. If it ever is, eeprom needs to be initialized.
 253:quantum/rgblight.c ****     if (rgblight_config.mode > RGBLIGHT_MODE_STATIC_LIGHT) {
 254:quantum/rgblight.c ****         mode = rgblight_config.mode - 1;
 255:quantum/rgblight.c ****     }
 256:quantum/rgblight.c ****     rgblight_mode(mode);
 257:quantum/rgblight.c **** }
 258:quantum/rgblight.c **** void rgblight_step_helper(bool write_to_eeprom) {
 259:quantum/rgblight.c ****     uint8_t mode = 0;
 260:quantum/rgblight.c ****     mode         = rgblight_config.mode + 1;
 261:quantum/rgblight.c ****     if (mode > RGBLIGHT_MODES) {
 262:quantum/rgblight.c ****         mode = 1;
 263:quantum/rgblight.c ****     }
 264:quantum/rgblight.c ****     rgblight_mode_eeprom_helper(mode, write_to_eeprom);
 265:quantum/rgblight.c **** }
 266:quantum/rgblight.c **** void rgblight_step_noeeprom(void) { rgblight_step_helper(false); }
 267:quantum/rgblight.c **** void rgblight_step(void) { rgblight_step_helper(true); }
 268:quantum/rgblight.c **** void rgblight_step_reverse_helper(bool write_to_eeprom) {
 269:quantum/rgblight.c ****     uint8_t mode = 0;
 270:quantum/rgblight.c ****     mode         = rgblight_config.mode - 1;
 271:quantum/rgblight.c ****     if (mode < 1) {
 272:quantum/rgblight.c ****         mode = RGBLIGHT_MODES;
 273:quantum/rgblight.c ****     }
 274:quantum/rgblight.c ****     rgblight_mode_eeprom_helper(mode, write_to_eeprom);
 275:quantum/rgblight.c **** }
 276:quantum/rgblight.c **** void rgblight_step_reverse_noeeprom(void) { rgblight_step_reverse_helper(false); }
 277:quantum/rgblight.c **** void rgblight_step_reverse(void) { rgblight_step_reverse_helper(true); }
 278:quantum/rgblight.c **** 
 279:quantum/rgblight.c **** uint8_t rgblight_get_mode(void) {
 280:quantum/rgblight.c ****     if (!rgblight_config.enable) {
 281:quantum/rgblight.c ****         return false;
 282:quantum/rgblight.c ****     }
 283:quantum/rgblight.c **** 
 284:quantum/rgblight.c ****     return rgblight_config.mode;
 285:quantum/rgblight.c **** }
 286:quantum/rgblight.c **** 
 287:quantum/rgblight.c **** void rgblight_mode_eeprom_helper(uint8_t mode, bool write_to_eeprom) {
 288:quantum/rgblight.c ****     if (!rgblight_config.enable) {
 289:quantum/rgblight.c ****         return;
 290:quantum/rgblight.c ****     }
 291:quantum/rgblight.c ****     if (mode < RGBLIGHT_MODE_STATIC_LIGHT) {
 292:quantum/rgblight.c ****         rgblight_config.mode = RGBLIGHT_MODE_STATIC_LIGHT;
 293:quantum/rgblight.c ****     } else if (mode > RGBLIGHT_MODES) {
 294:quantum/rgblight.c ****         rgblight_config.mode = RGBLIGHT_MODES;
 295:quantum/rgblight.c ****     } else {
 296:quantum/rgblight.c ****         rgblight_config.mode = mode;
 297:quantum/rgblight.c ****     }
 298:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_MODE;
 299:quantum/rgblight.c ****     if (write_to_eeprom) {
 300:quantum/rgblight.c ****         eeconfig_update_rgblight(rgblight_config.raw);
 301:quantum/rgblight.c ****         dprintf("rgblight mode [EEPROM]: %u\n", rgblight_config.mode);
 302:quantum/rgblight.c ****     } else {
 303:quantum/rgblight.c ****         dprintf("rgblight mode [NOEEPROM]: %u\n", rgblight_config.mode);
 304:quantum/rgblight.c ****     }
 305:quantum/rgblight.c ****     if (is_static_effect(rgblight_config.mode)) {
 306:quantum/rgblight.c ****         rgblight_timer_disable();
 307:quantum/rgblight.c ****     } else {
 308:quantum/rgblight.c ****         rgblight_timer_enable();
 309:quantum/rgblight.c ****     }
 310:quantum/rgblight.c **** #ifdef RGBLIGHT_USE_TIMER
 311:quantum/rgblight.c ****     animation_status.restart = true;
 312:quantum/rgblight.c **** #endif
 313:quantum/rgblight.c ****     rgblight_sethsv_noeeprom(rgblight_config.hue, rgblight_config.sat, rgblight_config.val);
 314:quantum/rgblight.c **** }
 315:quantum/rgblight.c **** 
 316:quantum/rgblight.c **** void rgblight_mode(uint8_t mode) { rgblight_mode_eeprom_helper(mode, true); }
 317:quantum/rgblight.c **** 
 318:quantum/rgblight.c **** void rgblight_mode_noeeprom(uint8_t mode) { rgblight_mode_eeprom_helper(mode, false); }
 319:quantum/rgblight.c **** 
 320:quantum/rgblight.c **** void rgblight_toggle(void) {
 321:quantum/rgblight.c ****     dprintf("rgblight toggle [EEPROM]: rgblight_config.enable = %u\n", !rgblight_config.enable);
 322:quantum/rgblight.c ****     if (rgblight_config.enable) {
 323:quantum/rgblight.c ****         rgblight_disable();
 324:quantum/rgblight.c ****     } else {
 325:quantum/rgblight.c ****         rgblight_enable();
 326:quantum/rgblight.c ****     }
 327:quantum/rgblight.c **** }
 328:quantum/rgblight.c **** 
 329:quantum/rgblight.c **** void rgblight_toggle_noeeprom(void) {
 330:quantum/rgblight.c ****     dprintf("rgblight toggle [NOEEPROM]: rgblight_config.enable = %u\n", !rgblight_config.enable);
 331:quantum/rgblight.c ****     if (rgblight_config.enable) {
 332:quantum/rgblight.c ****         rgblight_disable_noeeprom();
 333:quantum/rgblight.c ****     } else {
 334:quantum/rgblight.c ****         rgblight_enable_noeeprom();
 335:quantum/rgblight.c ****     }
 336:quantum/rgblight.c **** }
 337:quantum/rgblight.c **** 
 338:quantum/rgblight.c **** void rgblight_enable(void) {
 339:quantum/rgblight.c ****     rgblight_config.enable = 1;
 340:quantum/rgblight.c ****     // No need to update EEPROM here. rgblight_mode() will do that, actually
 341:quantum/rgblight.c ****     // eeconfig_update_rgblight(rgblight_config.raw);
 342:quantum/rgblight.c ****     dprintf("rgblight enable [EEPROM]: rgblight_config.enable = %u\n", rgblight_config.enable);
 343:quantum/rgblight.c ****     rgblight_mode(rgblight_config.mode);
 344:quantum/rgblight.c **** }
 345:quantum/rgblight.c **** 
 346:quantum/rgblight.c **** void rgblight_enable_noeeprom(void) {
 347:quantum/rgblight.c ****     rgblight_config.enable = 1;
 348:quantum/rgblight.c ****     dprintf("rgblight enable [NOEEPROM]: rgblight_config.enable = %u\n", rgblight_config.enable);
 349:quantum/rgblight.c ****     rgblight_mode_noeeprom(rgblight_config.mode);
 350:quantum/rgblight.c **** }
 351:quantum/rgblight.c **** 
 352:quantum/rgblight.c **** void rgblight_disable(void) {
 353:quantum/rgblight.c ****     rgblight_config.enable = 0;
 354:quantum/rgblight.c ****     eeconfig_update_rgblight(rgblight_config.raw);
 355:quantum/rgblight.c ****     dprintf("rgblight disable [EEPROM]: rgblight_config.enable = %u\n", rgblight_config.enable);
 356:quantum/rgblight.c ****     rgblight_timer_disable();
 357:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_MODE;
 358:quantum/rgblight.c ****     wait_ms(50);
 359:quantum/rgblight.c ****     rgblight_set();
 360:quantum/rgblight.c **** }
 361:quantum/rgblight.c **** 
 362:quantum/rgblight.c **** void rgblight_disable_noeeprom(void) {
 363:quantum/rgblight.c ****     rgblight_config.enable = 0;
 364:quantum/rgblight.c ****     dprintf("rgblight disable [NOEEPROM]: rgblight_config.enable = %u\n", rgblight_config.enable);
 365:quantum/rgblight.c ****     rgblight_timer_disable();
 366:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_MODE;
 367:quantum/rgblight.c ****     wait_ms(50);
 368:quantum/rgblight.c ****     rgblight_set();
 369:quantum/rgblight.c **** }
 370:quantum/rgblight.c **** 
 371:quantum/rgblight.c **** bool rgblight_is_enabled(void) { return rgblight_config.enable; }
 372:quantum/rgblight.c **** 
 373:quantum/rgblight.c **** void rgblight_increase_hue_helper(bool write_to_eeprom) {
 374:quantum/rgblight.c ****     uint8_t hue = rgblight_config.hue + RGBLIGHT_HUE_STEP;
 375:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(hue, rgblight_config.sat, rgblight_config.val, write_to_eeprom);
 376:quantum/rgblight.c **** }
 377:quantum/rgblight.c **** void rgblight_increase_hue_noeeprom(void) { rgblight_increase_hue_helper(false); }
 378:quantum/rgblight.c **** void rgblight_increase_hue(void) { rgblight_increase_hue_helper(true); }
 379:quantum/rgblight.c **** void rgblight_decrease_hue_helper(bool write_to_eeprom) {
 380:quantum/rgblight.c ****     uint8_t hue = rgblight_config.hue - RGBLIGHT_HUE_STEP;
 381:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(hue, rgblight_config.sat, rgblight_config.val, write_to_eeprom);
 382:quantum/rgblight.c **** }
 383:quantum/rgblight.c **** void rgblight_decrease_hue_noeeprom(void) { rgblight_decrease_hue_helper(false); }
 384:quantum/rgblight.c **** void rgblight_decrease_hue(void) { rgblight_decrease_hue_helper(true); }
 385:quantum/rgblight.c **** void rgblight_increase_sat_helper(bool write_to_eeprom) {
 386:quantum/rgblight.c ****     uint8_t sat = qadd8(rgblight_config.sat, RGBLIGHT_SAT_STEP);
 387:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(rgblight_config.hue, sat, rgblight_config.val, write_to_eeprom);
 388:quantum/rgblight.c **** }
 389:quantum/rgblight.c **** void rgblight_increase_sat_noeeprom(void) { rgblight_increase_sat_helper(false); }
 390:quantum/rgblight.c **** void rgblight_increase_sat(void) { rgblight_increase_sat_helper(true); }
 391:quantum/rgblight.c **** void rgblight_decrease_sat_helper(bool write_to_eeprom) {
 392:quantum/rgblight.c ****     uint8_t sat = qsub8(rgblight_config.sat, RGBLIGHT_SAT_STEP);
 393:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(rgblight_config.hue, sat, rgblight_config.val, write_to_eeprom);
 394:quantum/rgblight.c **** }
 395:quantum/rgblight.c **** void rgblight_decrease_sat_noeeprom(void) { rgblight_decrease_sat_helper(false); }
 396:quantum/rgblight.c **** void rgblight_decrease_sat(void) { rgblight_decrease_sat_helper(true); }
 397:quantum/rgblight.c **** void rgblight_increase_val_helper(bool write_to_eeprom) {
 398:quantum/rgblight.c ****     uint8_t val = qadd8(rgblight_config.val, RGBLIGHT_VAL_STEP);
 399:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(rgblight_config.hue, rgblight_config.sat, val, write_to_eeprom);
 400:quantum/rgblight.c **** }
 401:quantum/rgblight.c **** void rgblight_increase_val_noeeprom(void) { rgblight_increase_val_helper(false); }
 402:quantum/rgblight.c **** void rgblight_increase_val(void) { rgblight_increase_val_helper(true); }
 403:quantum/rgblight.c **** void rgblight_decrease_val_helper(bool write_to_eeprom) {
 404:quantum/rgblight.c ****     uint8_t val = qsub8(rgblight_config.val, RGBLIGHT_VAL_STEP);
 405:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(rgblight_config.hue, rgblight_config.sat, val, write_to_eeprom);
 406:quantum/rgblight.c **** }
 407:quantum/rgblight.c **** void rgblight_decrease_val_noeeprom(void) { rgblight_decrease_val_helper(false); }
 408:quantum/rgblight.c **** void rgblight_decrease_val(void) { rgblight_decrease_val_helper(true); }
 409:quantum/rgblight.c **** 
 410:quantum/rgblight.c **** void rgblight_increase_speed_helper(bool write_to_eeprom) {
 411:quantum/rgblight.c ****     if (rgblight_config.speed < 3) rgblight_config.speed++;
 412:quantum/rgblight.c ****     // RGBLIGHT_SPLIT_SET_CHANGE_HSVS; // NEED?
 413:quantum/rgblight.c ****     if (write_to_eeprom) {
 414:quantum/rgblight.c ****         eeconfig_update_rgblight(rgblight_config.raw);  // EECONFIG needs to be increased to suppor
 415:quantum/rgblight.c ****     }
 416:quantum/rgblight.c **** }
 417:quantum/rgblight.c **** void rgblight_increase_speed(void) { rgblight_increase_speed_helper(true); }
 418:quantum/rgblight.c **** void rgblight_increase_speed_noeeprom(void) { rgblight_increase_speed_helper(false); }
 419:quantum/rgblight.c **** 
 420:quantum/rgblight.c **** void rgblight_decrease_speed_helper(bool write_to_eeprom) {
 421:quantum/rgblight.c ****     if (rgblight_config.speed > 0) rgblight_config.speed--;
 422:quantum/rgblight.c ****     // RGBLIGHT_SPLIT_SET_CHANGE_HSVS; // NEED??
 423:quantum/rgblight.c ****     if (write_to_eeprom) {
 424:quantum/rgblight.c ****         eeconfig_update_rgblight(rgblight_config.raw);  // EECONFIG needs to be increased to suppor
 425:quantum/rgblight.c ****     }
 426:quantum/rgblight.c **** }
 427:quantum/rgblight.c **** void rgblight_decrease_speed(void) { rgblight_decrease_speed_helper(true); }
 428:quantum/rgblight.c **** void rgblight_decrease_speed_noeeprom(void) { rgblight_decrease_speed_helper(false); }
 429:quantum/rgblight.c **** 
 430:quantum/rgblight.c **** void rgblight_sethsv_noeeprom_old(uint8_t hue, uint8_t sat, uint8_t val) {
 431:quantum/rgblight.c ****     if (rgblight_config.enable) {
 432:quantum/rgblight.c ****         LED_TYPE tmp_led;
 433:quantum/rgblight.c ****         sethsv(hue, sat, val, &tmp_led);
 434:quantum/rgblight.c ****         rgblight_setrgb(tmp_led.r, tmp_led.g, tmp_led.b);
 435:quantum/rgblight.c ****     }
 436:quantum/rgblight.c **** }
 437:quantum/rgblight.c **** 
 438:quantum/rgblight.c **** void rgblight_sethsv_eeprom_helper(uint8_t hue, uint8_t sat, uint8_t val, bool write_to_eeprom) {
 439:quantum/rgblight.c ****     if (rgblight_config.enable) {
 440:quantum/rgblight.c ****         rgblight_status.base_mode = mode_base_table[rgblight_config.mode];
 441:quantum/rgblight.c ****         if (rgblight_config.mode == RGBLIGHT_MODE_STATIC_LIGHT) {
 442:quantum/rgblight.c ****             // same static color
 443:quantum/rgblight.c ****             LED_TYPE tmp_led;
 444:quantum/rgblight.c ****             sethsv(hue, sat, val, &tmp_led);
 445:quantum/rgblight.c ****             rgblight_setrgb(tmp_led.r, tmp_led.g, tmp_led.b);
 446:quantum/rgblight.c ****         } else {
 447:quantum/rgblight.c ****             // all LEDs in same color
 448:quantum/rgblight.c ****             if (1 == 0) {  // dummy
 449:quantum/rgblight.c ****             }
 450:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_BREATHING
 451:quantum/rgblight.c ****             else if (rgblight_status.base_mode == RGBLIGHT_MODE_BREATHING) {
 452:quantum/rgblight.c ****                 // breathing mode, ignore the change of val, use in memory value instead
 453:quantum/rgblight.c ****                 val = rgblight_config.val;
 454:quantum/rgblight.c ****             }
 455:quantum/rgblight.c **** #endif
 456:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_RAINBOW_MOOD
 457:quantum/rgblight.c ****             else if (rgblight_status.base_mode == RGBLIGHT_MODE_RAINBOW_MOOD) {
 458:quantum/rgblight.c ****                 // rainbow mood, ignore the change of hue
 459:quantum/rgblight.c ****                 hue = rgblight_config.hue;
 460:quantum/rgblight.c ****             }
 461:quantum/rgblight.c **** #endif
 462:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_RAINBOW_SWIRL
 463:quantum/rgblight.c ****             else if (rgblight_status.base_mode == RGBLIGHT_MODE_RAINBOW_SWIRL) {
 464:quantum/rgblight.c ****                 // rainbow swirl, ignore the change of hue
 465:quantum/rgblight.c ****                 hue = rgblight_config.hue;
 466:quantum/rgblight.c ****             }
 467:quantum/rgblight.c **** #endif
 468:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_STATIC_GRADIENT
 469:quantum/rgblight.c ****             else if (rgblight_status.base_mode == RGBLIGHT_MODE_STATIC_GRADIENT) {
 470:quantum/rgblight.c ****                 // static gradient
 471:quantum/rgblight.c ****                 uint8_t delta     = rgblight_config.mode - rgblight_status.base_mode;
 472:quantum/rgblight.c ****                 bool    direction = (delta % 2) == 0;
 473:quantum/rgblight.c **** #    ifdef __AVR__
 474:quantum/rgblight.c ****                 // probably due to how pgm_read_word is defined for ARM, but the ARM compiler reall
 475:quantum/rgblight.c ****                 uint8_t range = pgm_read_word(&RGBLED_GRADIENT_RANGES[delta / 2]);
 476:quantum/rgblight.c **** #    else
 477:quantum/rgblight.c ****                 uint8_t range = RGBLED_GRADIENT_RANGES[delta / 2];
 478:quantum/rgblight.c **** #    endif
 479:quantum/rgblight.c ****                 for (uint8_t i = 0; i < rgblight_ranges.effect_num_leds; i++) {
 480:quantum/rgblight.c ****                     uint8_t _hue = ((uint16_t)i * (uint16_t)range) / rgblight_ranges.effect_num_led
 481:quantum/rgblight.c ****                     if (direction) {
 482:quantum/rgblight.c ****                         _hue = hue + _hue;
 483:quantum/rgblight.c ****                     } else {
 484:quantum/rgblight.c ****                         _hue = hue - _hue;
 485:quantum/rgblight.c ****                     }
 486:quantum/rgblight.c ****                     dprintf("rgblight rainbow set hsv: %d,%d,%d,%u\n", i, _hue, direction, range);
 487:quantum/rgblight.c ****                     sethsv(_hue, sat, val, (LED_TYPE *)&led[i + rgblight_ranges.effect_start_pos]);
 488:quantum/rgblight.c ****                 }
 489:quantum/rgblight.c ****                 rgblight_set();
 490:quantum/rgblight.c ****             }
 491:quantum/rgblight.c **** #endif
 492:quantum/rgblight.c ****         }
 493:quantum/rgblight.c **** #ifdef RGBLIGHT_SPLIT
 494:quantum/rgblight.c ****         if (rgblight_config.hue != hue || rgblight_config.sat != sat || rgblight_config.val != val)
 495:quantum/rgblight.c ****             RGBLIGHT_SPLIT_SET_CHANGE_HSVS;
 496:quantum/rgblight.c ****         }
 497:quantum/rgblight.c **** #endif
 498:quantum/rgblight.c ****         rgblight_config.hue = hue;
 499:quantum/rgblight.c ****         rgblight_config.sat = sat;
 500:quantum/rgblight.c ****         rgblight_config.val = val;
 501:quantum/rgblight.c ****         if (write_to_eeprom) {
 502:quantum/rgblight.c ****             eeconfig_update_rgblight(rgblight_config.raw);
 503:quantum/rgblight.c ****             dprintf("rgblight set hsv [EEPROM]: %u,%u,%u\n", rgblight_config.hue, rgblight_config.s
 504:quantum/rgblight.c ****         } else {
 505:quantum/rgblight.c ****             dprintf("rgblight set hsv [NOEEPROM]: %u,%u,%u\n", rgblight_config.hue, rgblight_config
 506:quantum/rgblight.c ****         }
 507:quantum/rgblight.c ****     }
 508:quantum/rgblight.c **** }
 509:quantum/rgblight.c **** 
 510:quantum/rgblight.c **** void rgblight_sethsv(uint8_t hue, uint8_t sat, uint8_t val) { rgblight_sethsv_eeprom_helper(hue, sa
 511:quantum/rgblight.c **** 
 512:quantum/rgblight.c **** void rgblight_sethsv_noeeprom(uint8_t hue, uint8_t sat, uint8_t val) { rgblight_sethsv_eeprom_helpe
 513:quantum/rgblight.c **** 
 514:quantum/rgblight.c **** uint8_t rgblight_get_speed(void) { return rgblight_config.speed; }
 515:quantum/rgblight.c **** 
 516:quantum/rgblight.c **** void rgblight_set_speed_eeprom_helper(uint8_t speed, bool write_to_eeprom) {
 517:quantum/rgblight.c ****     rgblight_config.speed = speed;
 518:quantum/rgblight.c ****     if (write_to_eeprom) {
 519:quantum/rgblight.c ****         eeconfig_update_rgblight(rgblight_config.raw);  // EECONFIG needs to be increased to suppor
 520:quantum/rgblight.c ****         dprintf("rgblight set speed [EEPROM]: %u\n", rgblight_config.speed);
 521:quantum/rgblight.c ****     } else {
 522:quantum/rgblight.c ****         dprintf("rgblight set speed [NOEEPROM]: %u\n", rgblight_config.speed);
 523:quantum/rgblight.c ****     }
 524:quantum/rgblight.c **** }
 525:quantum/rgblight.c **** 
 526:quantum/rgblight.c **** void rgblight_set_speed(uint8_t speed) { rgblight_set_speed_eeprom_helper(speed, true); }
 527:quantum/rgblight.c **** 
 528:quantum/rgblight.c **** void rgblight_set_speed_noeeprom(uint8_t speed) { rgblight_set_speed_eeprom_helper(speed, false); }
 529:quantum/rgblight.c **** 
 530:quantum/rgblight.c **** uint8_t rgblight_get_hue(void) { return rgblight_config.hue; }
 531:quantum/rgblight.c **** 
 532:quantum/rgblight.c **** uint8_t rgblight_get_sat(void) { return rgblight_config.sat; }
 533:quantum/rgblight.c **** 
 534:quantum/rgblight.c **** uint8_t rgblight_get_val(void) { return rgblight_config.val; }
 535:quantum/rgblight.c **** 
 536:quantum/rgblight.c **** HSV rgblight_get_hsv(void) { return (HSV){rgblight_config.hue, rgblight_config.sat, rgblight_config
 537:quantum/rgblight.c **** 
 538:quantum/rgblight.c **** void rgblight_setrgb(uint8_t r, uint8_t g, uint8_t b) {
 539:quantum/rgblight.c ****     if (!rgblight_config.enable) {
 540:quantum/rgblight.c ****         return;
 541:quantum/rgblight.c ****     }
 542:quantum/rgblight.c **** 
 543:quantum/rgblight.c ****     for (uint8_t i = rgblight_ranges.effect_start_pos; i < rgblight_ranges.effect_end_pos; i++) {
 544:quantum/rgblight.c ****         led[i].r = r;
 545:quantum/rgblight.c ****         led[i].g = g;
 546:quantum/rgblight.c ****         led[i].b = b;
 547:quantum/rgblight.c **** #ifdef RGBW
 548:quantum/rgblight.c ****         led[i].w = 0;
 549:quantum/rgblight.c **** #endif
 550:quantum/rgblight.c ****     }
 551:quantum/rgblight.c ****     rgblight_set();
 552:quantum/rgblight.c **** }
 553:quantum/rgblight.c **** 
 554:quantum/rgblight.c **** void rgblight_setrgb_at(uint8_t r, uint8_t g, uint8_t b, uint8_t index) {
 555:quantum/rgblight.c ****     if (!rgblight_config.enable || index >= RGBLED_NUM) {
 556:quantum/rgblight.c ****         return;
 557:quantum/rgblight.c ****     }
 558:quantum/rgblight.c **** 
 559:quantum/rgblight.c ****     led[index].r = r;
 560:quantum/rgblight.c ****     led[index].g = g;
 561:quantum/rgblight.c ****     led[index].b = b;
 562:quantum/rgblight.c **** #ifdef RGBW
 563:quantum/rgblight.c ****     led[index].w = 0;
 564:quantum/rgblight.c **** #endif
 565:quantum/rgblight.c ****     rgblight_set();
 566:quantum/rgblight.c **** }
 567:quantum/rgblight.c **** 
 568:quantum/rgblight.c **** void rgblight_sethsv_at(uint8_t hue, uint8_t sat, uint8_t val, uint8_t index) {
 569:quantum/rgblight.c ****     if (!rgblight_config.enable) {
 570:quantum/rgblight.c ****         return;
 571:quantum/rgblight.c ****     }
 572:quantum/rgblight.c **** 
 573:quantum/rgblight.c ****     LED_TYPE tmp_led;
 574:quantum/rgblight.c ****     sethsv(hue, sat, val, &tmp_led);
 575:quantum/rgblight.c ****     rgblight_setrgb_at(tmp_led.r, tmp_led.g, tmp_led.b, index);
 576:quantum/rgblight.c **** }
 577:quantum/rgblight.c **** 
 578:quantum/rgblight.c **** #if defined(RGBLIGHT_EFFECT_BREATHING) || defined(RGBLIGHT_EFFECT_RAINBOW_MOOD) || defined(RGBLIGHT
 579:quantum/rgblight.c **** 
 580:quantum/rgblight.c **** static uint8_t get_interval_time(const uint8_t *default_interval_address, uint8_t velocikey_min, ui
 581:quantum/rgblight.c ****     return
 582:quantum/rgblight.c **** #    ifdef VELOCIKEY_ENABLE
 583:quantum/rgblight.c ****         velocikey_enabled() ? velocikey_match_speed(velocikey_min, velocikey_max) :
 584:quantum/rgblight.c **** #    endif
 585:quantum/rgblight.c ****                             pgm_read_byte(default_interval_address);
 586:quantum/rgblight.c **** }
 587:quantum/rgblight.c **** 
 588:quantum/rgblight.c **** #endif
 589:quantum/rgblight.c **** 
 590:quantum/rgblight.c **** void rgblight_setrgb_range(uint8_t r, uint8_t g, uint8_t b, uint8_t start, uint8_t end) {
 591:quantum/rgblight.c ****     if (!rgblight_config.enable || start < 0 || start >= end || end > RGBLED_NUM) {
 592:quantum/rgblight.c ****         return;
 593:quantum/rgblight.c ****     }
 594:quantum/rgblight.c **** 
 595:quantum/rgblight.c ****     for (uint8_t i = start; i < end; i++) {
 596:quantum/rgblight.c ****         led[i].r = r;
 597:quantum/rgblight.c ****         led[i].g = g;
 598:quantum/rgblight.c ****         led[i].b = b;
 599:quantum/rgblight.c **** #ifdef RGBW
 600:quantum/rgblight.c ****         led[i].w = 0;
 601:quantum/rgblight.c **** #endif
 602:quantum/rgblight.c ****     }
 603:quantum/rgblight.c ****     rgblight_set();
 604:quantum/rgblight.c ****     wait_ms(1);
 605:quantum/rgblight.c **** }
 606:quantum/rgblight.c **** 
 607:quantum/rgblight.c **** void rgblight_sethsv_range(uint8_t hue, uint8_t sat, uint8_t val, uint8_t start, uint8_t end) {
 608:quantum/rgblight.c ****     if (!rgblight_config.enable) {
 609:quantum/rgblight.c ****         return;
 610:quantum/rgblight.c ****     }
 611:quantum/rgblight.c **** 
 612:quantum/rgblight.c ****     LED_TYPE tmp_led;
 613:quantum/rgblight.c ****     sethsv(hue, sat, val, &tmp_led);
 614:quantum/rgblight.c ****     rgblight_setrgb_range(tmp_led.r, tmp_led.g, tmp_led.b, start, end);
 615:quantum/rgblight.c **** }
 616:quantum/rgblight.c **** 
 617:quantum/rgblight.c **** #ifndef RGBLIGHT_SPLIT
 618:quantum/rgblight.c **** void rgblight_setrgb_master(uint8_t r, uint8_t g, uint8_t b) { rgblight_setrgb_range(r, g, b, 0, (u
 619:quantum/rgblight.c **** 
 620:quantum/rgblight.c **** void rgblight_setrgb_slave(uint8_t r, uint8_t g, uint8_t b) { rgblight_setrgb_range(r, g, b, (uint8
 621:quantum/rgblight.c **** 
 622:quantum/rgblight.c **** void rgblight_sethsv_master(uint8_t hue, uint8_t sat, uint8_t val) { rgblight_sethsv_range(hue, sat
 623:quantum/rgblight.c **** 
 624:quantum/rgblight.c **** void rgblight_sethsv_slave(uint8_t hue, uint8_t sat, uint8_t val) { rgblight_sethsv_range(hue, sat,
 625:quantum/rgblight.c **** #endif  // ifndef RGBLIGHT_SPLIT
 626:quantum/rgblight.c **** 
 627:quantum/rgblight.c **** #ifdef RGBLIGHT_LAYERS
 628:quantum/rgblight.c **** void rgblight_set_layer_state(uint8_t layer, bool enabled) {
 629:quantum/rgblight.c ****     rgblight_layer_mask_t mask = 1 << layer;
 630:quantum/rgblight.c ****     if (enabled) {
 631:quantum/rgblight.c ****         rgblight_status.enabled_layer_mask |= mask;
 632:quantum/rgblight.c ****     } else {
 633:quantum/rgblight.c ****         rgblight_status.enabled_layer_mask &= ~mask;
 634:quantum/rgblight.c ****     }
 635:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_LAYERS;
 636:quantum/rgblight.c ****     // Static modes don't have a ticker running to update the LEDs
 637:quantum/rgblight.c ****     if (rgblight_status.timer_enabled == false) {
 638:quantum/rgblight.c ****         rgblight_mode_noeeprom(rgblight_config.mode);
 639:quantum/rgblight.c ****     }
 640:quantum/rgblight.c **** 
 641:quantum/rgblight.c **** #    ifdef RGBLIGHT_LAYERS_OVERRIDE_RGB_OFF
 642:quantum/rgblight.c ****     // If not enabled, then nothing else will actually set the LEDs...
 643:quantum/rgblight.c ****     if (!rgblight_config.enable) {
 644:quantum/rgblight.c ****         rgblight_set();
 645:quantum/rgblight.c ****     }
 646:quantum/rgblight.c **** #    endif
 647:quantum/rgblight.c **** }
 648:quantum/rgblight.c **** 
 649:quantum/rgblight.c **** bool rgblight_get_layer_state(uint8_t layer) {
 650:quantum/rgblight.c ****     rgblight_layer_mask_t mask = 1 << layer;
 651:quantum/rgblight.c ****     return (rgblight_status.enabled_layer_mask & mask) != 0;
 652:quantum/rgblight.c **** }
 653:quantum/rgblight.c **** 
 654:quantum/rgblight.c **** // Write any enabled LED layers into the buffer
 655:quantum/rgblight.c **** static void rgblight_layers_write(void) {
 656:quantum/rgblight.c ****     uint8_t i = 0;
 657:quantum/rgblight.c ****     // For each layer
 658:quantum/rgblight.c ****     for (const rgblight_segment_t *const *layer_ptr = rgblight_layers; i < RGBLIGHT_MAX_LAYERS; lay
 659:quantum/rgblight.c ****         if (!rgblight_get_layer_state(i)) {
 660:quantum/rgblight.c ****             continue;  // Layer is disabled
 661:quantum/rgblight.c ****         }
 662:quantum/rgblight.c ****         const rgblight_segment_t *segment_ptr = pgm_read_ptr(layer_ptr);
 663:quantum/rgblight.c ****         if (segment_ptr == NULL) {
 664:quantum/rgblight.c ****             break;  // No more layers
 665:quantum/rgblight.c ****         }
 666:quantum/rgblight.c ****         // For each segment
 667:quantum/rgblight.c ****         while (1) {
 668:quantum/rgblight.c ****             rgblight_segment_t segment;
 669:quantum/rgblight.c ****             memcpy_P(&segment, segment_ptr, sizeof(rgblight_segment_t));
 670:quantum/rgblight.c ****             if (segment.index == RGBLIGHT_END_SEGMENT_INDEX) {
 671:quantum/rgblight.c ****                 break;  // No more segments
 672:quantum/rgblight.c ****             }
 673:quantum/rgblight.c ****             // Write segment.count LEDs
 674:quantum/rgblight.c ****             LED_TYPE *const limit = &led[MIN(segment.index + segment.count, RGBLED_NUM)];
 675:quantum/rgblight.c ****             for (LED_TYPE *led_ptr = &led[segment.index]; led_ptr < limit; led_ptr++) {
 676:quantum/rgblight.c ****                 sethsv(segment.hue, segment.sat, segment.val, led_ptr);
 677:quantum/rgblight.c ****             }
 678:quantum/rgblight.c ****             segment_ptr++;
 679:quantum/rgblight.c ****         }
 680:quantum/rgblight.c ****     }
 681:quantum/rgblight.c **** }
 682:quantum/rgblight.c **** 
 683:quantum/rgblight.c **** #    ifdef RGBLIGHT_LAYER_BLINK
 684:quantum/rgblight.c **** rgblight_layer_mask_t _blinked_layer_mask = 0;
 685:quantum/rgblight.c **** uint16_t              _blink_duration     = 0;
 686:quantum/rgblight.c **** static uint16_t       _blink_timer;
 687:quantum/rgblight.c **** 
 688:quantum/rgblight.c **** void rgblight_blink_layer(uint8_t layer, uint16_t duration_ms) {
 689:quantum/rgblight.c ****     rgblight_set_layer_state(layer, true);
 690:quantum/rgblight.c ****     _blinked_layer_mask |= 1 << layer;
 691:quantum/rgblight.c ****     _blink_timer    = timer_read();
 692:quantum/rgblight.c ****     _blink_duration = duration_ms;
 693:quantum/rgblight.c **** }
 694:quantum/rgblight.c **** 
 695:quantum/rgblight.c **** void rgblight_unblink_layers(void) {
 696:quantum/rgblight.c ****     if (_blinked_layer_mask != 0 && timer_elapsed(_blink_timer) > _blink_duration) {
 697:quantum/rgblight.c ****         for (uint8_t layer = 0; layer < RGBLIGHT_MAX_LAYERS; layer++) {
 698:quantum/rgblight.c ****             if ((_blinked_layer_mask & 1 << layer) != 0) {
 699:quantum/rgblight.c ****                 rgblight_set_layer_state(layer, false);
 700:quantum/rgblight.c ****             }
 701:quantum/rgblight.c ****         }
 702:quantum/rgblight.c ****         _blinked_layer_mask = 0;
 703:quantum/rgblight.c ****     }
 704:quantum/rgblight.c **** }
 705:quantum/rgblight.c **** #    endif
 706:quantum/rgblight.c **** 
 707:quantum/rgblight.c **** #endif
 708:quantum/rgblight.c **** 
 709:quantum/rgblight.c **** __attribute__((weak)) void rgblight_call_driver(LED_TYPE *start_led, uint8_t num_leds) { ws2812_set
 710:quantum/rgblight.c **** 
 711:quantum/rgblight.c **** #ifndef RGBLIGHT_CUSTOM_DRIVER
 712:quantum/rgblight.c **** 
 713:quantum/rgblight.c **** void rgblight_set(void) {
 714:quantum/rgblight.c ****     LED_TYPE *start_led;
 715:quantum/rgblight.c ****     uint8_t   num_leds = rgblight_ranges.clipping_num_leds;
 716:quantum/rgblight.c **** 
 717:quantum/rgblight.c ****     if (!rgblight_config.enable) {
 718:quantum/rgblight.c ****         for (uint8_t i = rgblight_ranges.effect_start_pos; i < rgblight_ranges.effect_end_pos; i++)
 719:quantum/rgblight.c ****             led[i].r = 0;
 720:quantum/rgblight.c ****             led[i].g = 0;
 721:quantum/rgblight.c ****             led[i].b = 0;
 722:quantum/rgblight.c **** #    ifdef RGBW
 723:quantum/rgblight.c ****             led[i].w = 0;
 724:quantum/rgblight.c **** #    endif
 725:quantum/rgblight.c ****         }
 726:quantum/rgblight.c ****     }
 727:quantum/rgblight.c **** 
 728:quantum/rgblight.c **** #    ifdef RGBLIGHT_LAYERS
 729:quantum/rgblight.c ****     if (rgblight_layers != NULL
 730:quantum/rgblight.c **** #        ifndef RGBLIGHT_LAYERS_OVERRIDE_RGB_OFF
 731:quantum/rgblight.c ****         && rgblight_config.enable
 732:quantum/rgblight.c **** #        endif
 733:quantum/rgblight.c ****     ) {
 734:quantum/rgblight.c ****         rgblight_layers_write();
 735:quantum/rgblight.c ****     }
 736:quantum/rgblight.c **** #    endif
 737:quantum/rgblight.c **** 
 738:quantum/rgblight.c **** #    ifdef RGBLIGHT_LED_MAP
 739:quantum/rgblight.c ****     LED_TYPE led0[RGBLED_NUM];
 740:quantum/rgblight.c ****     for (uint8_t i = 0; i < RGBLED_NUM; i++) {
 741:quantum/rgblight.c ****         led0[i] = led[pgm_read_byte(&led_map[i])];
 742:quantum/rgblight.c ****     }
 743:quantum/rgblight.c ****     start_led = led0 + rgblight_ranges.clipping_start_pos;
 744:quantum/rgblight.c **** #    else
 745:quantum/rgblight.c ****     start_led = led + rgblight_ranges.clipping_start_pos;
 746:quantum/rgblight.c **** #    endif
 747:quantum/rgblight.c **** 
 748:quantum/rgblight.c **** #    ifdef RGBW
 749:quantum/rgblight.c ****     for (uint8_t i = 0; i < num_leds; i++) {
 750:quantum/rgblight.c ****         convert_rgb_to_rgbw(&start_led[i]);
 751:quantum/rgblight.c ****     }
 752:quantum/rgblight.c **** #    endif
 753:quantum/rgblight.c ****     rgblight_call_driver(start_led, num_leds);
 754:quantum/rgblight.c **** }
 755:quantum/rgblight.c **** #endif
 756:quantum/rgblight.c **** 
 757:quantum/rgblight.c **** #ifdef RGBLIGHT_SPLIT
 758:quantum/rgblight.c **** /* for split keyboard master side */
 759:quantum/rgblight.c **** uint8_t rgblight_get_change_flags(void) { return rgblight_status.change_flags; }
 760:quantum/rgblight.c **** 
 761:quantum/rgblight.c **** void rgblight_clear_change_flags(void) { rgblight_status.change_flags = 0; }
 762:quantum/rgblight.c **** 
 763:quantum/rgblight.c **** void rgblight_get_syncinfo(rgblight_syncinfo_t *syncinfo) {
 764:quantum/rgblight.c ****     syncinfo->config = rgblight_config;
 765:quantum/rgblight.c ****     syncinfo->status = rgblight_status;
 766:quantum/rgblight.c **** }
 767:quantum/rgblight.c **** 
 768:quantum/rgblight.c **** /* for split keyboard slave side */
 769:quantum/rgblight.c **** void rgblight_update_sync(rgblight_syncinfo_t *syncinfo, bool write_to_eeprom) {
 770:quantum/rgblight.c **** #    ifdef RGBLIGHT_LAYERS
 771:quantum/rgblight.c ****     if (syncinfo->status.change_flags & RGBLIGHT_STATUS_CHANGE_LAYERS) {
 772:quantum/rgblight.c ****         rgblight_status.enabled_layer_mask = syncinfo->status.enabled_layer_mask;
 773:quantum/rgblight.c ****     }
 774:quantum/rgblight.c **** #    endif
 775:quantum/rgblight.c ****     if (syncinfo->status.change_flags & RGBLIGHT_STATUS_CHANGE_MODE) {
 776:quantum/rgblight.c ****         if (syncinfo->config.enable) {
 777:quantum/rgblight.c ****             rgblight_config.enable = 1;  // == rgblight_enable_noeeprom();
 778:quantum/rgblight.c ****             rgblight_mode_eeprom_helper(syncinfo->config.mode, write_to_eeprom);
 779:quantum/rgblight.c ****         } else {
 780:quantum/rgblight.c ****             rgblight_disable_noeeprom();
 781:quantum/rgblight.c ****         }
 782:quantum/rgblight.c ****     }
 783:quantum/rgblight.c ****     if (syncinfo->status.change_flags & RGBLIGHT_STATUS_CHANGE_HSVS) {
 784:quantum/rgblight.c ****         rgblight_sethsv_eeprom_helper(syncinfo->config.hue, syncinfo->config.sat, syncinfo->config.
 785:quantum/rgblight.c ****         // rgblight_config.speed = config->speed; // NEED???
 786:quantum/rgblight.c ****     }
 787:quantum/rgblight.c **** #    ifdef RGBLIGHT_USE_TIMER
 788:quantum/rgblight.c ****     if (syncinfo->status.change_flags & RGBLIGHT_STATUS_CHANGE_TIMER) {
 789:quantum/rgblight.c ****         if (syncinfo->status.timer_enabled) {
 790:quantum/rgblight.c ****             rgblight_timer_enable();
 791:quantum/rgblight.c ****         } else {
 792:quantum/rgblight.c ****             rgblight_timer_disable();
 793:quantum/rgblight.c ****         }
 794:quantum/rgblight.c ****     }
 795:quantum/rgblight.c **** #        ifndef RGBLIGHT_SPLIT_NO_ANIMATION_SYNC
 796:quantum/rgblight.c ****     if (syncinfo->status.change_flags & RGBLIGHT_STATUS_ANIMATION_TICK) {
 797:quantum/rgblight.c ****         animation_status.restart = true;
 798:quantum/rgblight.c ****     }
 799:quantum/rgblight.c **** #        endif /* RGBLIGHT_SPLIT_NO_ANIMATION_SYNC */
 800:quantum/rgblight.c **** #    endif     /* RGBLIGHT_USE_TIMER */
 801:quantum/rgblight.c **** }
 802:quantum/rgblight.c **** #endif /* RGBLIGHT_SPLIT */
 803:quantum/rgblight.c **** 
 804:quantum/rgblight.c **** #ifdef RGBLIGHT_USE_TIMER
 805:quantum/rgblight.c **** 
 806:quantum/rgblight.c **** typedef void (*effect_func_t)(animation_status_t *anim);
 807:quantum/rgblight.c **** 
 808:quantum/rgblight.c **** // Animation timer -- use system timer (AVR Timer0)
 809:quantum/rgblight.c **** void rgblight_timer_init(void) {
 810:quantum/rgblight.c ****     // OLD!!!! Animation timer -- AVR Timer3
 811:quantum/rgblight.c ****     // static uint8_t rgblight_timer_is_init = 0;
 812:quantum/rgblight.c ****     // if (rgblight_timer_is_init) {
 813:quantum/rgblight.c ****     //   return;
 814:quantum/rgblight.c ****     // }
 815:quantum/rgblight.c ****     // rgblight_timer_is_init = 1;
 816:quantum/rgblight.c ****     // /* Timer 3 setup */
 817:quantum/rgblight.c ****     // TCCR3B = _BV(WGM32) // CTC mode OCR3A as TOP
 818:quantum/rgblight.c ****     //       | _BV(CS30); // Clock selelct: clk/1
 819:quantum/rgblight.c ****     // /* Set TOP value */
 820:quantum/rgblight.c ****     // uint8_t sreg = SREG;
 821:quantum/rgblight.c ****     // cli();
 822:quantum/rgblight.c ****     // OCR3AH = (RGBLED_TIMER_TOP >> 8) & 0xff;
 823:quantum/rgblight.c ****     // OCR3AL = RGBLED_TIMER_TOP & 0xff;
 824:quantum/rgblight.c ****     // SREG = sreg;
 825:quantum/rgblight.c **** 
 826:quantum/rgblight.c ****     rgblight_status.timer_enabled = false;
 827:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 828:quantum/rgblight.c **** }
 829:quantum/rgblight.c **** void rgblight_timer_enable(void) {
 830:quantum/rgblight.c ****     if (!is_static_effect(rgblight_config.mode)) {
 831:quantum/rgblight.c ****         rgblight_status.timer_enabled = true;
 832:quantum/rgblight.c ****     }
 833:quantum/rgblight.c ****     animation_status.last_timer = timer_read();
 834:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 835:quantum/rgblight.c ****     dprintf("rgblight timer enabled.\n");
 836:quantum/rgblight.c **** }
 837:quantum/rgblight.c **** void rgblight_timer_disable(void) {
 838:quantum/rgblight.c ****     rgblight_status.timer_enabled = false;
 839:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 840:quantum/rgblight.c ****     dprintf("rgblight timer disable.\n");
 841:quantum/rgblight.c **** }
 842:quantum/rgblight.c **** void rgblight_timer_toggle(void) {
 843:quantum/rgblight.c ****     dprintf("rgblight timer toggle.\n");
 844:quantum/rgblight.c ****     if (rgblight_status.timer_enabled) {
 845:quantum/rgblight.c ****         rgblight_timer_disable();
 846:quantum/rgblight.c ****     } else {
 847:quantum/rgblight.c ****         rgblight_timer_enable();
 848:quantum/rgblight.c ****     }
 849:quantum/rgblight.c **** }
 850:quantum/rgblight.c **** 
 851:quantum/rgblight.c **** void rgblight_show_solid_color(uint8_t r, uint8_t g, uint8_t b) {
 852:quantum/rgblight.c ****     rgblight_enable();
 853:quantum/rgblight.c ****     rgblight_mode(RGBLIGHT_MODE_STATIC_LIGHT);
 854:quantum/rgblight.c ****     rgblight_setrgb(r, g, b);
 855:quantum/rgblight.c **** }
 856:quantum/rgblight.c **** 
 857:quantum/rgblight.c **** static void rgblight_effect_dummy(animation_status_t *anim) {
  16               		.loc 1 857 61 view -0
  17               		.cfi_startproc
  18               	/* prologue: function */
  19               	/* frame size = 0 */
  20               	/* stack size = 0 */
  21               	.L__stack_usage = 0
 858:quantum/rgblight.c ****     // do nothing
 859:quantum/rgblight.c ****     /********
 860:quantum/rgblight.c ****     dprintf("rgblight_task() what happened?\n");
 861:quantum/rgblight.c ****     dprintf("is_static_effect %d\n", is_static_effect(rgblight_config.mode));
 862:quantum/rgblight.c ****     dprintf("mode = %d, base_mode = %d, timer_enabled %d, ",
 863:quantum/rgblight.c ****             rgblight_config.mode, rgblight_status.base_mode,
 864:quantum/rgblight.c ****             rgblight_status.timer_enabled);
 865:quantum/rgblight.c ****     dprintf("last_timer = %d\n",anim->last_timer);
 866:quantum/rgblight.c ****     **/
 867:quantum/rgblight.c **** }
  22               		.loc 1 867 1 view .LVU1
  23               	/* epilogue start */
  24 0000 0895      		ret
  25               		.cfi_endproc
  26               	.LFE170:
  28               		.section	.text.rgblight_set_clipping_range,"ax",@progbits
  29               	.global	rgblight_set_clipping_range
  31               	rgblight_set_clipping_range:
  32               	.LVL1:
  33               	.LFB84:
 113:quantum/rgblight.c ****     rgblight_ranges.clipping_start_pos = start_pos;
  34               		.loc 1 113 71 view -0
  35               		.cfi_startproc
  36               	/* prologue: function */
  37               	/* frame size = 0 */
  38               	/* stack size = 0 */
  39               	.L__stack_usage = 0
 114:quantum/rgblight.c ****     rgblight_ranges.clipping_num_leds  = num_leds;
  40               		.loc 1 114 5 view .LVU3
 114:quantum/rgblight.c ****     rgblight_ranges.clipping_num_leds  = num_leds;
  41               		.loc 1 114 40 is_stmt 0 view .LVU4
  42 0000 E0E0      		ldi r30,lo8(rgblight_ranges)
  43 0002 F0E0      		ldi r31,hi8(rgblight_ranges)
  44 0004 8083      		st Z,r24
 115:quantum/rgblight.c **** }
  45               		.loc 1 115 5 is_stmt 1 view .LVU5
 115:quantum/rgblight.c **** }
  46               		.loc 1 115 40 is_stmt 0 view .LVU6
  47 0006 6183      		std Z+1,r22
  48               	/* epilogue start */
 116:quantum/rgblight.c **** 
  49               		.loc 1 116 1 view .LVU7
  50 0008 0895      		ret
  51               		.cfi_endproc
  52               	.LFE84:
  54               		.section	.text.rgblight_set_effect_range,"ax",@progbits
  55               	.global	rgblight_set_effect_range
  57               	rgblight_set_effect_range:
  58               	.LVL2:
  59               	.LFB85:
 118:quantum/rgblight.c ****     if (start_pos >= RGBLED_NUM) return;
  60               		.loc 1 118 69 is_stmt 1 view -0
  61               		.cfi_startproc
  62               	/* prologue: function */
  63               	/* frame size = 0 */
  64               	/* stack size = 0 */
  65               	.L__stack_usage = 0
 119:quantum/rgblight.c ****     if (start_pos + num_leds > RGBLED_NUM) return;
  66               		.loc 1 119 5 view .LVU9
 119:quantum/rgblight.c ****     if (start_pos + num_leds > RGBLED_NUM) return;
  67               		.loc 1 119 8 is_stmt 0 view .LVU10
  68 0000 8E31      		cpi r24,lo8(30)
  69 0002 00F4      		brsh .L3
 120:quantum/rgblight.c ****     rgblight_ranges.effect_start_pos = start_pos;
  70               		.loc 1 120 5 is_stmt 1 view .LVU11
 120:quantum/rgblight.c ****     rgblight_ranges.effect_start_pos = start_pos;
  71               		.loc 1 120 19 is_stmt 0 view .LVU12
  72 0004 482F      		mov r20,r24
  73 0006 460F      		add r20,r22
  74 0008 5527      		clr r21
  75 000a 551F      		rol r21
 120:quantum/rgblight.c ****     rgblight_ranges.effect_start_pos = start_pos;
  76               		.loc 1 120 8 view .LVU13
  77 000c 4F31      		cpi r20,31
  78 000e 5105      		cpc r21,__zero_reg__
  79 0010 04F4      		brge .L3
 121:quantum/rgblight.c ****     rgblight_ranges.effect_end_pos   = start_pos + num_leds;
  80               		.loc 1 121 5 is_stmt 1 view .LVU14
 121:quantum/rgblight.c ****     rgblight_ranges.effect_end_pos   = start_pos + num_leds;
  81               		.loc 1 121 38 is_stmt 0 view .LVU15
  82 0012 8093 0000 		sts rgblight_ranges+2,r24
 122:quantum/rgblight.c ****     rgblight_ranges.effect_num_leds  = num_leds;
  83               		.loc 1 122 5 is_stmt 1 view .LVU16
 122:quantum/rgblight.c ****     rgblight_ranges.effect_num_leds  = num_leds;
  84               		.loc 1 122 50 is_stmt 0 view .LVU17
  85 0016 860F      		add r24,r22
  86               	.LVL3:
 122:quantum/rgblight.c ****     rgblight_ranges.effect_num_leds  = num_leds;
  87               		.loc 1 122 38 view .LVU18
  88 0018 8093 0000 		sts rgblight_ranges+3,r24
 123:quantum/rgblight.c **** }
  89               		.loc 1 123 5 is_stmt 1 view .LVU19
 123:quantum/rgblight.c **** }
  90               		.loc 1 123 38 is_stmt 0 view .LVU20
  91 001c 6093 0000 		sts rgblight_ranges+4,r22
  92               	.LVL4:
  93               	.L3:
  94               	/* epilogue start */
 124:quantum/rgblight.c **** 
  95               		.loc 1 124 1 view .LVU21
  96 0020 0895      		ret
  97               		.cfi_endproc
  98               	.LFE85:
 100               		.section	.text.sethsv_raw,"ax",@progbits
 101               	.global	sethsv_raw
 103               	sethsv_raw:
 104               	.LVL5:
 105               	.LFB86:
 126:quantum/rgblight.c ****     HSV hsv = {hue, sat, val};
 106               		.loc 1 126 72 is_stmt 1 view -0
 107               		.cfi_startproc
 126:quantum/rgblight.c ****     HSV hsv = {hue, sat, val};
 108               		.loc 1 126 72 is_stmt 0 view .LVU23
 109 0000 CF93      		push r28
 110               	.LCFI0:
 111               		.cfi_def_cfa_offset 3
 112               		.cfi_offset 28, -2
 113 0002 DF93      		push r29
 114               	.LCFI1:
 115               		.cfi_def_cfa_offset 4
 116               		.cfi_offset 29, -3
 117               	/* prologue: function */
 118               	/* frame size = 0 */
 119               	/* stack size = 2 */
 120               	.L__stack_usage = 2
 121 0004 762F      		mov r23,r22
 122 0006 E901      		movw r28,r18
 127:quantum/rgblight.c ****     RGB rgb = hsv_to_rgb(hsv);
 123               		.loc 1 127 5 is_stmt 1 view .LVU24
 128:quantum/rgblight.c ****     setrgb(rgb.r, rgb.g, rgb.b, led1);
 124               		.loc 1 128 5 view .LVU25
 128:quantum/rgblight.c ****     setrgb(rgb.r, rgb.g, rgb.b, led1);
 125               		.loc 1 128 15 is_stmt 0 view .LVU26
 126 0008 682F      		mov r22,r24
 127               	.LVL6:
 128:quantum/rgblight.c ****     setrgb(rgb.r, rgb.g, rgb.b, led1);
 128               		.loc 1 128 15 view .LVU27
 129 000a 842F      		mov r24,r20
 130               	.LVL7:
 128:quantum/rgblight.c ****     setrgb(rgb.r, rgb.g, rgb.b, led1);
 131               		.loc 1 128 15 view .LVU28
 132 000c 0E94 0000 		call hsv_to_rgb
 133               	.LVL8:
 129:quantum/rgblight.c **** }
 134               		.loc 1 129 5 is_stmt 1 view .LVU29
 135               	.LBB20:
 136               	.LBI20:
 134:quantum/rgblight.c ****     led1->r = r;
 137               		.loc 1 134 6 view .LVU30
 138               	.LBB21:
 135:quantum/rgblight.c ****     led1->g = g;
 139               		.loc 1 135 5 view .LVU31
 135:quantum/rgblight.c ****     led1->g = g;
 140               		.loc 1 135 13 is_stmt 0 view .LVU32
 141 0010 7983      		std Y+1,r23
 136:quantum/rgblight.c ****     led1->b = b;
 142               		.loc 1 136 5 is_stmt 1 view .LVU33
 136:quantum/rgblight.c ****     led1->b = b;
 143               		.loc 1 136 13 is_stmt 0 view .LVU34
 144 0012 6883      		st Y,r22
 137:quantum/rgblight.c **** #ifdef RGBW
 145               		.loc 1 137 5 is_stmt 1 view .LVU35
 137:quantum/rgblight.c **** #ifdef RGBW
 146               		.loc 1 137 13 is_stmt 0 view .LVU36
 147 0014 8A83      		std Y+2,r24
 148               	.LVL9:
 149               	/* epilogue start */
 137:quantum/rgblight.c **** #ifdef RGBW
 150               		.loc 1 137 13 view .LVU37
 151               	.LBE21:
 152               	.LBE20:
 130:quantum/rgblight.c **** 
 153               		.loc 1 130 1 view .LVU38
 154 0016 DF91      		pop r29
 155 0018 CF91      		pop r28
 156               	.LVL10:
 130:quantum/rgblight.c **** 
 157               		.loc 1 130 1 view .LVU39
 158 001a 0895      		ret
 159               		.cfi_endproc
 160               	.LFE86:
 162               		.section	.text.sethsv,"ax",@progbits
 163               	.global	sethsv
 165               	sethsv:
 166               	.LVL11:
 167               	.LFB87:
 132:quantum/rgblight.c **** 
 168               		.loc 1 132 68 is_stmt 1 view -0
 169               		.cfi_startproc
 170               	/* prologue: function */
 171               	/* frame size = 0 */
 172               	/* stack size = 0 */
 173               	.L__stack_usage = 0
 132:quantum/rgblight.c **** 
 174               		.loc 1 132 70 view .LVU41
 175 0000 0C94 0000 		jmp sethsv_raw
 176               	.LVL12:
 132:quantum/rgblight.c **** 
 177               		.loc 1 132 70 is_stmt 0 view .LVU42
 178               		.cfi_endproc
 179               	.LFE87:
 181               		.section	.text.setrgb,"ax",@progbits
 182               	.global	setrgb
 184               	setrgb:
 185               	.LVL13:
 186               	.LFB88:
 134:quantum/rgblight.c ****     led1->r = r;
 187               		.loc 1 134 62 is_stmt 1 view -0
 188               		.cfi_startproc
 189               	/* prologue: function */
 190               	/* frame size = 0 */
 191               	/* stack size = 0 */
 192               	.L__stack_usage = 0
 134:quantum/rgblight.c ****     led1->r = r;
 193               		.loc 1 134 62 is_stmt 0 view .LVU44
 194 0000 F901      		movw r30,r18
 135:quantum/rgblight.c ****     led1->g = g;
 195               		.loc 1 135 5 is_stmt 1 view .LVU45
 135:quantum/rgblight.c ****     led1->g = g;
 196               		.loc 1 135 13 is_stmt 0 view .LVU46
 197 0002 8183      		std Z+1,r24
 136:quantum/rgblight.c ****     led1->b = b;
 198               		.loc 1 136 5 is_stmt 1 view .LVU47
 136:quantum/rgblight.c ****     led1->b = b;
 199               		.loc 1 136 13 is_stmt 0 view .LVU48
 200 0004 6083      		st Z,r22
 137:quantum/rgblight.c **** #ifdef RGBW
 201               		.loc 1 137 5 is_stmt 1 view .LVU49
 137:quantum/rgblight.c **** #ifdef RGBW
 202               		.loc 1 137 13 is_stmt 0 view .LVU50
 203 0006 4283      		std Z+2,r20
 204               	/* epilogue start */
 141:quantum/rgblight.c **** 
 205               		.loc 1 141 1 view .LVU51
 206 0008 0895      		ret
 207               		.cfi_endproc
 208               	.LFE88:
 210               		.section	.text.rgblight_check_config,"ax",@progbits
 211               	.global	rgblight_check_config
 213               	rgblight_check_config:
 214               	.LFB89:
 143:quantum/rgblight.c ****     /* Add some out of bound checks for RGB light config */
 215               		.loc 1 143 34 is_stmt 1 view -0
 216               		.cfi_startproc
 217               	/* prologue: function */
 218               	/* frame size = 0 */
 219               	/* stack size = 0 */
 220               	.L__stack_usage = 0
 146:quantum/rgblight.c ****         rgblight_config.mode = RGBLIGHT_MODE_STATIC_LIGHT;
 221               		.loc 1 146 5 view .LVU53
 146:quantum/rgblight.c ****         rgblight_config.mode = RGBLIGHT_MODE_STATIC_LIGHT;
 222               		.loc 1 146 30 is_stmt 0 view .LVU54
 223 0000 8091 0000 		lds r24,rgblight_config
 224 0004 982F      		mov r25,r24
 225 0006 9E7F      		andi r25,lo8(-2)
 146:quantum/rgblight.c ****         rgblight_config.mode = RGBLIGHT_MODE_STATIC_LIGHT;
 226               		.loc 1 146 8 view .LVU55
 227 0008 01F4      		brne .L9
 147:quantum/rgblight.c ****     } else if (rgblight_config.mode > RGBLIGHT_MODES) {
 228               		.loc 1 147 9 is_stmt 1 view .LVU56
 147:quantum/rgblight.c ****     } else if (rgblight_config.mode > RGBLIGHT_MODES) {
 229               		.loc 1 147 30 is_stmt 0 view .LVU57
 230 000a 8170      		andi r24,lo8(1)
 231 000c 8260      		ori r24,lo8(2)
 232               	.L11:
 149:quantum/rgblight.c ****     }
 233               		.loc 1 149 30 view .LVU58
 234 000e 8093 0000 		sts rgblight_config,r24
 152:quantum/rgblight.c ****         rgblight_config.val = RGBLIGHT_LIMIT_VAL;
 235               		.loc 1 152 5 is_stmt 1 view .LVU59
 236               	.L8:
 237               	/* epilogue start */
 155:quantum/rgblight.c **** 
 238               		.loc 1 155 1 is_stmt 0 view .LVU60
 239 0012 0895      		ret
 240               	.L9:
 148:quantum/rgblight.c ****         rgblight_config.mode = RGBLIGHT_MODES;
 241               		.loc 1 148 12 is_stmt 1 view .LVU61
 148:quantum/rgblight.c ****         rgblight_config.mode = RGBLIGHT_MODES;
 242               		.loc 1 148 15 is_stmt 0 view .LVU62
 243 0014 8635      		cpi r24,lo8(86)
 244 0016 00F0      		brlo .L8
 149:quantum/rgblight.c ****     }
 245               		.loc 1 149 9 is_stmt 1 view .LVU63
 149:quantum/rgblight.c ****     }
 246               		.loc 1 149 30 is_stmt 0 view .LVU64
 247 0018 8170      		andi r24,lo8(1)
 248 001a 8465      		ori r24,lo8(84)
 249 001c 00C0      		rjmp .L11
 250               		.cfi_endproc
 251               	.LFE89:
 253               		.section	.text.eeconfig_read_rgblight,"ax",@progbits
 254               	.global	eeconfig_read_rgblight
 256               	eeconfig_read_rgblight:
 257               	.LFB90:
 157:quantum/rgblight.c **** #ifdef EEPROM_ENABLE
 258               		.loc 1 157 39 is_stmt 1 view -0
 259               		.cfi_startproc
 260               	/* prologue: function */
 261               	/* frame size = 0 */
 262               	/* stack size = 0 */
 263               	.L__stack_usage = 0
 159:quantum/rgblight.c **** #else
 264               		.loc 1 159 5 view .LVU66
 159:quantum/rgblight.c **** #else
 265               		.loc 1 159 12 is_stmt 0 view .LVU67
 266 0000 88E0      		ldi r24,lo8(8)
 267 0002 90E0      		ldi r25,0
 268 0004 0C94 0000 		jmp eeprom_read_dword
 269               	.LVL14:
 270               		.cfi_endproc
 271               	.LFE90:
 273               		.section	.text.eeconfig_update_rgblight,"ax",@progbits
 274               	.global	eeconfig_update_rgblight
 276               	eeconfig_update_rgblight:
 277               	.LVL15:
 278               	.LFB91:
 165:quantum/rgblight.c **** #ifdef EEPROM_ENABLE
 279               		.loc 1 165 45 is_stmt 1 view -0
 280               		.cfi_startproc
 165:quantum/rgblight.c **** #ifdef EEPROM_ENABLE
 281               		.loc 1 165 45 is_stmt 0 view .LVU69
 282 0000 CF92      		push r12
 283               	.LCFI2:
 284               		.cfi_def_cfa_offset 3
 285               		.cfi_offset 12, -2
 286 0002 DF92      		push r13
 287               	.LCFI3:
 288               		.cfi_def_cfa_offset 4
 289               		.cfi_offset 13, -3
 290 0004 EF92      		push r14
 291               	.LCFI4:
 292               		.cfi_def_cfa_offset 5
 293               		.cfi_offset 14, -4
 294 0006 FF92      		push r15
 295               	.LCFI5:
 296               		.cfi_def_cfa_offset 6
 297               		.cfi_offset 15, -5
 298               	/* prologue: function */
 299               	/* frame size = 0 */
 300               	/* stack size = 4 */
 301               	.L__stack_usage = 4
 302 0008 6B01      		movw r12,r22
 303 000a 7C01      		movw r14,r24
 167:quantum/rgblight.c ****     eeprom_update_dword(EECONFIG_RGBLIGHT, val);
 304               		.loc 1 167 5 is_stmt 1 view .LVU70
 305 000c 0E94 0000 		call rgblight_check_config
 306               	.LVL16:
 168:quantum/rgblight.c **** #endif
 307               		.loc 1 168 5 view .LVU71
 308 0010 B701      		movw r22,r14
 309 0012 A601      		movw r20,r12
 310 0014 88E0      		ldi r24,lo8(8)
 311 0016 90E0      		ldi r25,0
 312               	/* epilogue start */
 170:quantum/rgblight.c **** 
 313               		.loc 1 170 1 is_stmt 0 view .LVU72
 314 0018 FF90      		pop r15
 315 001a EF90      		pop r14
 316 001c DF90      		pop r13
 317 001e CF90      		pop r12
 168:quantum/rgblight.c **** #endif
 318               		.loc 1 168 5 view .LVU73
 319 0020 0C94 0000 		jmp eeprom_update_dword
 320               	.LVL17:
 321               		.cfi_endproc
 322               	.LFE91:
 324               		.section	.text.eeconfig_update_rgblight_current,"ax",@progbits
 325               	.global	eeconfig_update_rgblight_current
 327               	eeconfig_update_rgblight_current:
 328               	.LFB92:
 172:quantum/rgblight.c **** 
 329               		.loc 1 172 45 is_stmt 1 view -0
 330               		.cfi_startproc
 331               	/* prologue: function */
 332               	/* frame size = 0 */
 333               	/* stack size = 0 */
 334               	.L__stack_usage = 0
 172:quantum/rgblight.c **** 
 335               		.loc 1 172 47 view .LVU75
 336 0000 6091 0000 		lds r22,rgblight_config
 337 0004 7091 0000 		lds r23,rgblight_config+1
 338 0008 8091 0000 		lds r24,rgblight_config+2
 339 000c 9091 0000 		lds r25,rgblight_config+3
 340 0010 0C94 0000 		jmp eeconfig_update_rgblight
 341               	.LVL18:
 342               		.cfi_endproc
 343               	.LFE92:
 345               		.section	.text.eeconfig_update_rgblight_default,"ax",@progbits
 346               	.global	eeconfig_update_rgblight_default
 348               	eeconfig_update_rgblight_default:
 349               	.LFB93:
 174:quantum/rgblight.c ****     rgblight_config.enable = 1;
 350               		.loc 1 174 45 view -0
 351               		.cfi_startproc
 352               	/* prologue: function */
 353               	/* frame size = 0 */
 354               	/* stack size = 0 */
 355               	.L__stack_usage = 0
 175:quantum/rgblight.c ****     rgblight_config.mode   = RGBLIGHT_MODE_STATIC_LIGHT;
 356               		.loc 1 175 5 view .LVU77
 176:quantum/rgblight.c ****     rgblight_config.hue    = 0;
 357               		.loc 1 176 5 view .LVU78
 177:quantum/rgblight.c ****     rgblight_config.sat    = UINT8_MAX;
 358               		.loc 1 177 5 view .LVU79
 178:quantum/rgblight.c ****     rgblight_config.val    = RGBLIGHT_LIMIT_VAL;
 359               		.loc 1 178 5 view .LVU80
 179:quantum/rgblight.c ****     rgblight_config.speed  = 0;
 360               		.loc 1 179 5 view .LVU81
 180:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_MODEHSVS;
 361               		.loc 1 180 5 view .LVU82
 175:quantum/rgblight.c ****     rgblight_config.mode   = RGBLIGHT_MODE_STATIC_LIGHT;
 362               		.loc 1 175 28 is_stmt 0 view .LVU83
 363 0000 E0E0      		ldi r30,lo8(rgblight_config)
 364 0002 F0E0      		ldi r31,hi8(rgblight_config)
 365 0004 83E0      		ldi r24,lo8(3)
 366 0006 8083      		st Z,r24
 177:quantum/rgblight.c ****     rgblight_config.sat    = UINT8_MAX;
 367               		.loc 1 177 28 view .LVU84
 368 0008 1182      		std Z+1,__zero_reg__
 178:quantum/rgblight.c ****     rgblight_config.val    = RGBLIGHT_LIMIT_VAL;
 369               		.loc 1 178 28 view .LVU85
 370 000a 8FEF      		ldi r24,lo8(-1)
 371 000c 8283      		std Z+2,r24
 179:quantum/rgblight.c ****     rgblight_config.speed  = 0;
 372               		.loc 1 179 28 view .LVU86
 373 000e 8383      		std Z+3,r24
 180:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_MODEHSVS;
 374               		.loc 1 180 28 view .LVU87
 375 0010 1482      		std Z+4,__zero_reg__
 181:quantum/rgblight.c ****     eeconfig_update_rgblight(rgblight_config.raw);
 376               		.loc 1 181 39 is_stmt 1 view .LVU88
 182:quantum/rgblight.c **** }
 377               		.loc 1 182 5 view .LVU89
 378 0012 6081      		ld r22,Z
 379 0014 7181      		ldd r23,Z+1
 380 0016 8281      		ldd r24,Z+2
 381 0018 9381      		ldd r25,Z+3
 382 001a 0C94 0000 		jmp eeconfig_update_rgblight
 383               	.LVL19:
 384               		.cfi_endproc
 385               	.LFE93:
 387               		.section	.text.eeconfig_debug_rgblight,"ax",@progbits
 388               	.global	eeconfig_debug_rgblight
 390               	eeconfig_debug_rgblight:
 391               	.LFB94:
 185:quantum/rgblight.c ****     dprintf("rgblight_config EEPROM:\n");
 392               		.loc 1 185 36 view -0
 393               		.cfi_startproc
 394               	/* prologue: function */
 395               	/* frame size = 0 */
 396               	/* stack size = 0 */
 397               	.L__stack_usage = 0
 186:quantum/rgblight.c ****     dprintf("rgblight_config.enable = %d\n", rgblight_config.enable);
 398               		.loc 1 186 41 view .LVU91
 187:quantum/rgblight.c ****     dprintf("rghlight_config.mode = %d\n", rgblight_config.mode);
 399               		.loc 1 187 69 view .LVU92
 188:quantum/rgblight.c ****     dprintf("rgblight_config.hue = %d\n", rgblight_config.hue);
 400               		.loc 1 188 65 view .LVU93
 189:quantum/rgblight.c ****     dprintf("rgblight_config.sat = %d\n", rgblight_config.sat);
 401               		.loc 1 189 63 view .LVU94
 190:quantum/rgblight.c ****     dprintf("rgblight_config.val = %d\n", rgblight_config.val);
 402               		.loc 1 190 63 view .LVU95
 191:quantum/rgblight.c ****     dprintf("rgblight_config.speed = %d\n", rgblight_config.speed);
 403               		.loc 1 191 63 view .LVU96
 192:quantum/rgblight.c **** }
 404               		.loc 1 192 67 view .LVU97
 405               	/* epilogue start */
 193:quantum/rgblight.c **** 
 406               		.loc 1 193 1 is_stmt 0 view .LVU98
 407 0000 0895      		ret
 408               		.cfi_endproc
 409               	.LFE94:
 411               		.section	.text.rgblight_read_dword,"ax",@progbits
 412               	.global	rgblight_read_dword
 414               	rgblight_read_dword:
 415               	.LFB96:
 230:quantum/rgblight.c **** 
 416               		.loc 1 230 36 is_stmt 1 view -0
 417               		.cfi_startproc
 418               	/* prologue: function */
 419               	/* frame size = 0 */
 420               	/* stack size = 0 */
 421               	.L__stack_usage = 0
 230:quantum/rgblight.c **** 
 422               		.loc 1 230 38 view .LVU100
 230:quantum/rgblight.c **** 
 423               		.loc 1 230 60 is_stmt 0 view .LVU101
 424 0000 6091 0000 		lds r22,rgblight_config
 425 0004 7091 0000 		lds r23,rgblight_config+1
 426 0008 8091 0000 		lds r24,rgblight_config+2
 427 000c 9091 0000 		lds r25,rgblight_config+3
 428               	/* epilogue start */
 230:quantum/rgblight.c **** 
 429               		.loc 1 230 1 view .LVU102
 430 0010 0895      		ret
 431               		.cfi_endproc
 432               	.LFE96:
 434               		.section	.text.rgblight_get_mode,"ax",@progbits
 435               	.global	rgblight_get_mode
 437               	rgblight_get_mode:
 438               	.LFB106:
 279:quantum/rgblight.c ****     if (!rgblight_config.enable) {
 439               		.loc 1 279 33 is_stmt 1 view -0
 440               		.cfi_startproc
 441               	/* prologue: function */
 442               	/* frame size = 0 */
 443               	/* stack size = 0 */
 444               	.L__stack_usage = 0
 280:quantum/rgblight.c ****         return false;
 445               		.loc 1 280 5 view .LVU104
 280:quantum/rgblight.c ****         return false;
 446               		.loc 1 280 25 is_stmt 0 view .LVU105
 447 0000 8091 0000 		lds r24,rgblight_config
 280:quantum/rgblight.c ****         return false;
 448               		.loc 1 280 8 view .LVU106
 449 0004 80FF      		sbrs r24,0
 450 0006 00C0      		rjmp .L20
 284:quantum/rgblight.c **** }
 451               		.loc 1 284 5 is_stmt 1 view .LVU107
 284:quantum/rgblight.c **** }
 452               		.loc 1 284 27 is_stmt 0 view .LVU108
 453 0008 8695      		lsr r24
 454 000a 0895      		ret
 455               	.L20:
 281:quantum/rgblight.c ****     }
 456               		.loc 1 281 16 view .LVU109
 457 000c 80E0      		ldi r24,0
 458               	/* epilogue start */
 285:quantum/rgblight.c **** 
 459               		.loc 1 285 1 view .LVU110
 460 000e 0895      		ret
 461               		.cfi_endproc
 462               	.LFE106:
 464               		.section	.text.rgblight_is_enabled,"ax",@progbits
 465               	.global	rgblight_is_enabled
 467               	rgblight_is_enabled:
 468               	.LFB116:
 371:quantum/rgblight.c **** 
 469               		.loc 1 371 32 is_stmt 1 view -0
 470               		.cfi_startproc
 471               	/* prologue: function */
 472               	/* frame size = 0 */
 473               	/* stack size = 0 */
 474               	.L__stack_usage = 0
 371:quantum/rgblight.c **** 
 475               		.loc 1 371 34 view .LVU112
 371:quantum/rgblight.c **** 
 476               		.loc 1 371 56 is_stmt 0 view .LVU113
 477 0000 8091 0000 		lds r24,rgblight_config
 371:quantum/rgblight.c **** 
 478               		.loc 1 371 1 view .LVU114
 479 0004 8170      		andi r24,lo8(1)
 480               	/* epilogue start */
 481 0006 0895      		ret
 482               		.cfi_endproc
 483               	.LFE116:
 485               		.section	.text.rgblight_increase_speed_helper,"ax",@progbits
 486               	.global	rgblight_increase_speed_helper
 488               	rgblight_increase_speed_helper:
 489               	.LVL20:
 490               	.LFB135:
 410:quantum/rgblight.c ****     if (rgblight_config.speed < 3) rgblight_config.speed++;
 491               		.loc 1 410 59 is_stmt 1 view -0
 492               		.cfi_startproc
 493               	/* prologue: function */
 494               	/* frame size = 0 */
 495               	/* stack size = 0 */
 496               	.L__stack_usage = 0
 411:quantum/rgblight.c ****     // RGBLIGHT_SPLIT_SET_CHANGE_HSVS; // NEED?
 497               		.loc 1 411 5 view .LVU116
 411:quantum/rgblight.c ****     // RGBLIGHT_SPLIT_SET_CHANGE_HSVS; // NEED?
 498               		.loc 1 411 24 is_stmt 0 view .LVU117
 499 0000 9091 0000 		lds r25,rgblight_config+4
 411:quantum/rgblight.c ****     // RGBLIGHT_SPLIT_SET_CHANGE_HSVS; // NEED?
 500               		.loc 1 411 8 view .LVU118
 501 0004 9330      		cpi r25,lo8(3)
 502 0006 00F4      		brsh .L23
 411:quantum/rgblight.c ****     // RGBLIGHT_SPLIT_SET_CHANGE_HSVS; // NEED?
 503               		.loc 1 411 36 is_stmt 1 discriminator 1 view .LVU119
 411:quantum/rgblight.c ****     // RGBLIGHT_SPLIT_SET_CHANGE_HSVS; // NEED?
 504               		.loc 1 411 57 is_stmt 0 discriminator 1 view .LVU120
 505 0008 9F5F      		subi r25,lo8(-(1))
 506 000a 9093 0000 		sts rgblight_config+4,r25
 507               	.L23:
 413:quantum/rgblight.c ****         eeconfig_update_rgblight(rgblight_config.raw);  // EECONFIG needs to be increased to suppor
 508               		.loc 1 413 5 is_stmt 1 view .LVU121
 413:quantum/rgblight.c ****         eeconfig_update_rgblight(rgblight_config.raw);  // EECONFIG needs to be increased to suppor
 509               		.loc 1 413 8 is_stmt 0 view .LVU122
 510 000e 8823      		tst r24
 511 0010 01F0      		breq .L22
 414:quantum/rgblight.c ****     }
 512               		.loc 1 414 9 is_stmt 1 view .LVU123
 513 0012 6091 0000 		lds r22,rgblight_config
 514 0016 7091 0000 		lds r23,rgblight_config+1
 515 001a 8091 0000 		lds r24,rgblight_config+2
 516 001e 9091 0000 		lds r25,rgblight_config+3
 517 0022 0C94 0000 		jmp eeconfig_update_rgblight
 518               	.LVL21:
 519               	.L22:
 520               	/* epilogue start */
 416:quantum/rgblight.c **** void rgblight_increase_speed(void) { rgblight_increase_speed_helper(true); }
 521               		.loc 1 416 1 is_stmt 0 view .LVU124
 522 0026 0895      		ret
 523               		.cfi_endproc
 524               	.LFE135:
 526               		.section	.text.rgblight_increase_speed,"ax",@progbits
 527               	.global	rgblight_increase_speed
 529               	rgblight_increase_speed:
 530               	.LFB136:
 417:quantum/rgblight.c **** void rgblight_increase_speed_noeeprom(void) { rgblight_increase_speed_helper(false); }
 531               		.loc 1 417 36 is_stmt 1 view -0
 532               		.cfi_startproc
 533               	/* prologue: function */
 534               	/* frame size = 0 */
 535               	/* stack size = 0 */
 536               	.L__stack_usage = 0
 417:quantum/rgblight.c **** void rgblight_increase_speed_noeeprom(void) { rgblight_increase_speed_helper(false); }
 537               		.loc 1 417 38 view .LVU126
 538 0000 81E0      		ldi r24,lo8(1)
 539 0002 0C94 0000 		jmp rgblight_increase_speed_helper
 540               	.LVL22:
 541               		.cfi_endproc
 542               	.LFE136:
 544               		.section	.text.rgblight_increase_speed_noeeprom,"ax",@progbits
 545               	.global	rgblight_increase_speed_noeeprom
 547               	rgblight_increase_speed_noeeprom:
 548               	.LFB137:
 418:quantum/rgblight.c **** 
 549               		.loc 1 418 45 view -0
 550               		.cfi_startproc
 551               	/* prologue: function */
 552               	/* frame size = 0 */
 553               	/* stack size = 0 */
 554               	.L__stack_usage = 0
 418:quantum/rgblight.c **** 
 555               		.loc 1 418 47 view .LVU128
 556 0000 80E0      		ldi r24,0
 557 0002 0C94 0000 		jmp rgblight_increase_speed_helper
 558               	.LVL23:
 559               		.cfi_endproc
 560               	.LFE137:
 562               		.section	.text.rgblight_decrease_speed_helper,"ax",@progbits
 563               	.global	rgblight_decrease_speed_helper
 565               	rgblight_decrease_speed_helper:
 566               	.LVL24:
 567               	.LFB138:
 420:quantum/rgblight.c ****     if (rgblight_config.speed > 0) rgblight_config.speed--;
 568               		.loc 1 420 59 view -0
 569               		.cfi_startproc
 570               	/* prologue: function */
 571               	/* frame size = 0 */
 572               	/* stack size = 0 */
 573               	.L__stack_usage = 0
 421:quantum/rgblight.c ****     // RGBLIGHT_SPLIT_SET_CHANGE_HSVS; // NEED??
 574               		.loc 1 421 5 view .LVU130
 421:quantum/rgblight.c ****     // RGBLIGHT_SPLIT_SET_CHANGE_HSVS; // NEED??
 575               		.loc 1 421 24 is_stmt 0 view .LVU131
 576 0000 9091 0000 		lds r25,rgblight_config+4
 421:quantum/rgblight.c ****     // RGBLIGHT_SPLIT_SET_CHANGE_HSVS; // NEED??
 577               		.loc 1 421 8 view .LVU132
 578 0004 9923      		tst r25
 579 0006 01F0      		breq .L28
 421:quantum/rgblight.c ****     // RGBLIGHT_SPLIT_SET_CHANGE_HSVS; // NEED??
 580               		.loc 1 421 36 is_stmt 1 discriminator 1 view .LVU133
 421:quantum/rgblight.c ****     // RGBLIGHT_SPLIT_SET_CHANGE_HSVS; // NEED??
 581               		.loc 1 421 57 is_stmt 0 discriminator 1 view .LVU134
 582 0008 9150      		subi r25,lo8(-(-1))
 583 000a 9093 0000 		sts rgblight_config+4,r25
 584               	.L28:
 423:quantum/rgblight.c ****         eeconfig_update_rgblight(rgblight_config.raw);  // EECONFIG needs to be increased to suppor
 585               		.loc 1 423 5 is_stmt 1 view .LVU135
 423:quantum/rgblight.c ****         eeconfig_update_rgblight(rgblight_config.raw);  // EECONFIG needs to be increased to suppor
 586               		.loc 1 423 8 is_stmt 0 view .LVU136
 587 000e 8823      		tst r24
 588 0010 01F0      		breq .L27
 424:quantum/rgblight.c ****     }
 589               		.loc 1 424 9 is_stmt 1 view .LVU137
 590 0012 6091 0000 		lds r22,rgblight_config
 591 0016 7091 0000 		lds r23,rgblight_config+1
 592 001a 8091 0000 		lds r24,rgblight_config+2
 593 001e 9091 0000 		lds r25,rgblight_config+3
 594 0022 0C94 0000 		jmp eeconfig_update_rgblight
 595               	.LVL25:
 596               	.L27:
 597               	/* epilogue start */
 426:quantum/rgblight.c **** void rgblight_decrease_speed(void) { rgblight_decrease_speed_helper(true); }
 598               		.loc 1 426 1 is_stmt 0 view .LVU138
 599 0026 0895      		ret
 600               		.cfi_endproc
 601               	.LFE138:
 603               		.section	.text.rgblight_decrease_speed,"ax",@progbits
 604               	.global	rgblight_decrease_speed
 606               	rgblight_decrease_speed:
 607               	.LFB139:
 427:quantum/rgblight.c **** void rgblight_decrease_speed_noeeprom(void) { rgblight_decrease_speed_helper(false); }
 608               		.loc 1 427 36 is_stmt 1 view -0
 609               		.cfi_startproc
 610               	/* prologue: function */
 611               	/* frame size = 0 */
 612               	/* stack size = 0 */
 613               	.L__stack_usage = 0
 427:quantum/rgblight.c **** void rgblight_decrease_speed_noeeprom(void) { rgblight_decrease_speed_helper(false); }
 614               		.loc 1 427 38 view .LVU140
 615 0000 81E0      		ldi r24,lo8(1)
 616 0002 0C94 0000 		jmp rgblight_decrease_speed_helper
 617               	.LVL26:
 618               		.cfi_endproc
 619               	.LFE139:
 621               		.section	.text.rgblight_decrease_speed_noeeprom,"ax",@progbits
 622               	.global	rgblight_decrease_speed_noeeprom
 624               	rgblight_decrease_speed_noeeprom:
 625               	.LFB140:
 428:quantum/rgblight.c **** 
 626               		.loc 1 428 45 view -0
 627               		.cfi_startproc
 628               	/* prologue: function */
 629               	/* frame size = 0 */
 630               	/* stack size = 0 */
 631               	.L__stack_usage = 0
 428:quantum/rgblight.c **** 
 632               		.loc 1 428 47 view .LVU142
 633 0000 80E0      		ldi r24,0
 634 0002 0C94 0000 		jmp rgblight_decrease_speed_helper
 635               	.LVL27:
 636               		.cfi_endproc
 637               	.LFE140:
 639               		.section	.text.rgblight_get_speed,"ax",@progbits
 640               	.global	rgblight_get_speed
 642               	rgblight_get_speed:
 643               	.LFB145:
 514:quantum/rgblight.c **** 
 644               		.loc 1 514 34 view -0
 645               		.cfi_startproc
 646               	/* prologue: function */
 647               	/* frame size = 0 */
 648               	/* stack size = 0 */
 649               	.L__stack_usage = 0
 514:quantum/rgblight.c **** 
 650               		.loc 1 514 36 view .LVU144
 514:quantum/rgblight.c **** 
 651               		.loc 1 514 1 is_stmt 0 view .LVU145
 652 0000 8091 0000 		lds r24,rgblight_config+4
 653               	/* epilogue start */
 654 0004 0895      		ret
 655               		.cfi_endproc
 656               	.LFE145:
 658               		.section	.text.rgblight_set_speed_eeprom_helper,"ax",@progbits
 659               	.global	rgblight_set_speed_eeprom_helper
 661               	rgblight_set_speed_eeprom_helper:
 662               	.LVL28:
 663               	.LFB146:
 516:quantum/rgblight.c ****     rgblight_config.speed = speed;
 664               		.loc 1 516 76 is_stmt 1 view -0
 665               		.cfi_startproc
 666               	/* prologue: function */
 667               	/* frame size = 0 */
 668               	/* stack size = 0 */
 669               	.L__stack_usage = 0
 517:quantum/rgblight.c ****     if (write_to_eeprom) {
 670               		.loc 1 517 5 view .LVU147
 517:quantum/rgblight.c ****     if (write_to_eeprom) {
 671               		.loc 1 517 27 is_stmt 0 view .LVU148
 672 0000 8093 0000 		sts rgblight_config+4,r24
 518:quantum/rgblight.c ****         eeconfig_update_rgblight(rgblight_config.raw);  // EECONFIG needs to be increased to suppor
 673               		.loc 1 518 5 is_stmt 1 view .LVU149
 518:quantum/rgblight.c ****         eeconfig_update_rgblight(rgblight_config.raw);  // EECONFIG needs to be increased to suppor
 674               		.loc 1 518 8 is_stmt 0 view .LVU150
 675 0004 6623      		tst r22
 676 0006 01F0      		breq .L36
 519:quantum/rgblight.c ****         dprintf("rgblight set speed [EEPROM]: %u\n", rgblight_config.speed);
 677               		.loc 1 519 9 is_stmt 1 view .LVU151
 678 0008 6091 0000 		lds r22,rgblight_config
 679 000c 7091 0000 		lds r23,rgblight_config+1
 680 0010 8091 0000 		lds r24,rgblight_config+2
 681 0014 9091 0000 		lds r25,rgblight_config+3
 682               	.LVL29:
 519:quantum/rgblight.c ****         dprintf("rgblight set speed [EEPROM]: %u\n", rgblight_config.speed);
 683               		.loc 1 519 9 is_stmt 0 view .LVU152
 684 0018 0C94 0000 		jmp eeconfig_update_rgblight
 685               	.LVL30:
 686               	.L36:
 687               	/* epilogue start */
 524:quantum/rgblight.c **** 
 688               		.loc 1 524 1 view .LVU153
 689 001c 0895      		ret
 690               		.cfi_endproc
 691               	.LFE146:
 693               		.section	.text.rgblight_set_speed,"ax",@progbits
 694               	.global	rgblight_set_speed
 696               	rgblight_set_speed:
 697               	.LVL31:
 698               	.LFB147:
 526:quantum/rgblight.c **** 
 699               		.loc 1 526 40 is_stmt 1 view -0
 700               		.cfi_startproc
 701               	/* prologue: function */
 702               	/* frame size = 0 */
 703               	/* stack size = 0 */
 704               	.L__stack_usage = 0
 526:quantum/rgblight.c **** 
 705               		.loc 1 526 42 view .LVU155
 706 0000 61E0      		ldi r22,lo8(1)
 707 0002 0C94 0000 		jmp rgblight_set_speed_eeprom_helper
 708               	.LVL32:
 526:quantum/rgblight.c **** 
 709               		.loc 1 526 42 is_stmt 0 view .LVU156
 710               		.cfi_endproc
 711               	.LFE147:
 713               		.section	.text.rgblight_set_speed_noeeprom,"ax",@progbits
 714               	.global	rgblight_set_speed_noeeprom
 716               	rgblight_set_speed_noeeprom:
 717               	.LVL33:
 718               	.LFB148:
 528:quantum/rgblight.c **** 
 719               		.loc 1 528 49 is_stmt 1 view -0
 720               		.cfi_startproc
 721               	/* prologue: function */
 722               	/* frame size = 0 */
 723               	/* stack size = 0 */
 724               	.L__stack_usage = 0
 528:quantum/rgblight.c **** 
 725               		.loc 1 528 51 view .LVU158
 726 0000 60E0      		ldi r22,0
 727 0002 0C94 0000 		jmp rgblight_set_speed_eeprom_helper
 728               	.LVL34:
 528:quantum/rgblight.c **** 
 729               		.loc 1 528 51 is_stmt 0 view .LVU159
 730               		.cfi_endproc
 731               	.LFE148:
 733               		.section	.text.rgblight_get_hue,"ax",@progbits
 734               	.global	rgblight_get_hue
 736               	rgblight_get_hue:
 737               	.LFB149:
 530:quantum/rgblight.c **** 
 738               		.loc 1 530 32 is_stmt 1 view -0
 739               		.cfi_startproc
 740               	/* prologue: function */
 741               	/* frame size = 0 */
 742               	/* stack size = 0 */
 743               	.L__stack_usage = 0
 530:quantum/rgblight.c **** 
 744               		.loc 1 530 34 view .LVU161
 530:quantum/rgblight.c **** 
 745               		.loc 1 530 1 is_stmt 0 view .LVU162
 746 0000 8091 0000 		lds r24,rgblight_config+1
 747               	/* epilogue start */
 748 0004 0895      		ret
 749               		.cfi_endproc
 750               	.LFE149:
 752               		.section	.text.rgblight_get_sat,"ax",@progbits
 753               	.global	rgblight_get_sat
 755               	rgblight_get_sat:
 756               	.LFB150:
 532:quantum/rgblight.c **** 
 757               		.loc 1 532 32 is_stmt 1 view -0
 758               		.cfi_startproc
 759               	/* prologue: function */
 760               	/* frame size = 0 */
 761               	/* stack size = 0 */
 762               	.L__stack_usage = 0
 532:quantum/rgblight.c **** 
 763               		.loc 1 532 34 view .LVU164
 532:quantum/rgblight.c **** 
 764               		.loc 1 532 1 is_stmt 0 view .LVU165
 765 0000 8091 0000 		lds r24,rgblight_config+2
 766               	/* epilogue start */
 767 0004 0895      		ret
 768               		.cfi_endproc
 769               	.LFE150:
 771               		.section	.text.rgblight_get_val,"ax",@progbits
 772               	.global	rgblight_get_val
 774               	rgblight_get_val:
 775               	.LFB151:
 534:quantum/rgblight.c **** 
 776               		.loc 1 534 32 is_stmt 1 view -0
 777               		.cfi_startproc
 778               	/* prologue: function */
 779               	/* frame size = 0 */
 780               	/* stack size = 0 */
 781               	.L__stack_usage = 0
 534:quantum/rgblight.c **** 
 782               		.loc 1 534 34 view .LVU167
 534:quantum/rgblight.c **** 
 783               		.loc 1 534 1 is_stmt 0 view .LVU168
 784 0000 8091 0000 		lds r24,rgblight_config+3
 785               	/* epilogue start */
 786 0004 0895      		ret
 787               		.cfi_endproc
 788               	.LFE151:
 790               		.section	.text.rgblight_get_hsv,"ax",@progbits
 791               	.global	rgblight_get_hsv
 793               	rgblight_get_hsv:
 794               	.LFB152:
 536:quantum/rgblight.c **** 
 795               		.loc 1 536 28 is_stmt 1 view -0
 796               		.cfi_startproc
 797               	/* prologue: function */
 798               	/* frame size = 0 */
 799               	/* stack size = 0 */
 800               	.L__stack_usage = 0
 536:quantum/rgblight.c **** 
 801               		.loc 1 536 30 view .LVU170
 536:quantum/rgblight.c **** 
 802               		.loc 1 536 79 is_stmt 0 view .LVU171
 803 0000 E0E0      		ldi r30,lo8(rgblight_config)
 804 0002 F0E0      		ldi r31,hi8(rgblight_config)
 805 0004 7281      		ldd r23,Z+2
 536:quantum/rgblight.c **** 
 806               		.loc 1 536 37 view .LVU172
 807 0006 6181      		ldd r22,Z+1
 536:quantum/rgblight.c **** 
 808               		.loc 1 536 1 view .LVU173
 809 0008 8381      		ldd r24,Z+3
 810               	/* epilogue start */
 811 000a 0895      		ret
 812               		.cfi_endproc
 813               	.LFE152:
 815               		.section	.text.rgblight_call_driver,"ax",@progbits
 816               		.weak	rgblight_call_driver
 818               	rgblight_call_driver:
 819               	.LVL35:
 820               	.LFB163:
 709:quantum/rgblight.c **** 
 821               		.loc 1 709 88 is_stmt 1 view -0
 822               		.cfi_startproc
 823               	/* prologue: function */
 824               	/* frame size = 0 */
 825               	/* stack size = 0 */
 826               	.L__stack_usage = 0
 709:quantum/rgblight.c **** 
 827               		.loc 1 709 90 view .LVU175
 828 0000 70E0      		ldi r23,0
 829 0002 0C94 0000 		jmp ws2812_setleds
 830               	.LVL36:
 709:quantum/rgblight.c **** 
 831               		.loc 1 709 90 is_stmt 0 view .LVU176
 832               		.cfi_endproc
 833               	.LFE163:
 835               		.section	.text.rgblight_set,"ax",@progbits
 836               	.global	rgblight_set
 838               	rgblight_set:
 839               	.LFB164:
 713:quantum/rgblight.c ****     LED_TYPE *start_led;
 840               		.loc 1 713 25 is_stmt 1 view -0
 841               		.cfi_startproc
 842               	/* prologue: function */
 843               	/* frame size = 0 */
 844               	/* stack size = 0 */
 845               	.L__stack_usage = 0
 714:quantum/rgblight.c ****     uint8_t   num_leds = rgblight_ranges.clipping_num_leds;
 846               		.loc 1 714 5 view .LVU178
 715:quantum/rgblight.c **** 
 847               		.loc 1 715 5 view .LVU179
 715:quantum/rgblight.c **** 
 848               		.loc 1 715 15 is_stmt 0 view .LVU180
 849 0000 6091 0000 		lds r22,rgblight_ranges+1
 850               	.LVL37:
 717:quantum/rgblight.c ****         for (uint8_t i = rgblight_ranges.effect_start_pos; i < rgblight_ranges.effect_end_pos; i++)
 851               		.loc 1 717 5 is_stmt 1 view .LVU181
 717:quantum/rgblight.c ****         for (uint8_t i = rgblight_ranges.effect_start_pos; i < rgblight_ranges.effect_end_pos; i++)
 852               		.loc 1 717 25 is_stmt 0 view .LVU182
 853 0004 8091 0000 		lds r24,rgblight_config
 717:quantum/rgblight.c ****         for (uint8_t i = rgblight_ranges.effect_start_pos; i < rgblight_ranges.effect_end_pos; i++)
 854               		.loc 1 717 8 view .LVU183
 855 0008 80FF      		sbrs r24,0
 856 000a 00C0      		rjmp .L46
 857               	.L49:
 745:quantum/rgblight.c **** #    endif
 858               		.loc 1 745 5 is_stmt 1 view .LVU184
 859               	.LVL38:
 753:quantum/rgblight.c **** }
 860               		.loc 1 753 5 view .LVU185
 745:quantum/rgblight.c **** #    endif
 861               		.loc 1 745 21 is_stmt 0 view .LVU186
 862 000c 8091 0000 		lds r24,rgblight_ranges
 863 0010 23E0      		ldi r18,lo8(3)
 864 0012 829F      		mul r24,r18
 865 0014 C001      		movw r24,r0
 866 0016 1124      		clr __zero_reg__
 753:quantum/rgblight.c **** }
 867               		.loc 1 753 5 view .LVU187
 868 0018 8050      		subi r24,lo8(-(led))
 869 001a 9040      		sbci r25,hi8(-(led))
 870 001c 0C94 0000 		jmp rgblight_call_driver
 871               	.LVL39:
 872               	.L46:
 718:quantum/rgblight.c ****             led[i].r = 0;
 873               		.loc 1 718 9 is_stmt 1 view .LVU188
 874               	.LBB22:
 718:quantum/rgblight.c ****             led[i].r = 0;
 875               		.loc 1 718 14 view .LVU189
 718:quantum/rgblight.c ****             led[i].r = 0;
 876               		.loc 1 718 22 is_stmt 0 view .LVU190
 877 0020 8091 0000 		lds r24,rgblight_ranges+2
 878               	.LVL40:
 718:quantum/rgblight.c ****             led[i].r = 0;
 879               		.loc 1 718 79 view .LVU191
 880 0024 9091 0000 		lds r25,rgblight_ranges+3
 881 0028 23E0      		ldi r18,lo8(3)
 882 002a 829F      		mul r24,r18
 883 002c F001      		movw r30,r0
 884 002e 1124      		clr __zero_reg__
 885 0030 E050      		subi r30,lo8(-(led))
 886 0032 F040      		sbci r31,hi8(-(led))
 887               	.L47:
 718:quantum/rgblight.c ****             led[i].r = 0;
 888               		.loc 1 718 60 is_stmt 1 discriminator 1 view .LVU192
 718:quantum/rgblight.c ****             led[i].r = 0;
 889               		.loc 1 718 9 is_stmt 0 discriminator 1 view .LVU193
 890 0034 8917      		cp r24,r25
 891 0036 00F4      		brsh .L49
 719:quantum/rgblight.c ****             led[i].g = 0;
 892               		.loc 1 719 13 is_stmt 1 discriminator 3 view .LVU194
 719:quantum/rgblight.c ****             led[i].g = 0;
 893               		.loc 1 719 22 is_stmt 0 discriminator 3 view .LVU195
 894 0038 1182      		std Z+1,__zero_reg__
 720:quantum/rgblight.c ****             led[i].b = 0;
 895               		.loc 1 720 13 is_stmt 1 discriminator 3 view .LVU196
 720:quantum/rgblight.c ****             led[i].b = 0;
 896               		.loc 1 720 22 is_stmt 0 discriminator 3 view .LVU197
 897 003a 1082      		st Z,__zero_reg__
 721:quantum/rgblight.c **** #    ifdef RGBW
 898               		.loc 1 721 13 is_stmt 1 discriminator 3 view .LVU198
 721:quantum/rgblight.c **** #    ifdef RGBW
 899               		.loc 1 721 22 is_stmt 0 discriminator 3 view .LVU199
 900 003c 1282      		std Z+2,__zero_reg__
 718:quantum/rgblight.c ****             led[i].r = 0;
 901               		.loc 1 718 96 is_stmt 1 discriminator 3 view .LVU200
 718:quantum/rgblight.c ****             led[i].r = 0;
 902               		.loc 1 718 97 is_stmt 0 discriminator 3 view .LVU201
 903 003e 8F5F      		subi r24,lo8(-(1))
 904               	.LVL41:
 718:quantum/rgblight.c ****             led[i].r = 0;
 905               		.loc 1 718 97 discriminator 3 view .LVU202
 906 0040 3396      		adiw r30,3
 907 0042 00C0      		rjmp .L47
 908               	.LBE22:
 909               		.cfi_endproc
 910               	.LFE164:
 912               		.section	.text.rgblight_setrgb,"ax",@progbits
 913               	.global	rgblight_setrgb
 915               	rgblight_setrgb:
 916               	.LVL42:
 917               	.LFB153:
 538:quantum/rgblight.c ****     if (!rgblight_config.enable) {
 918               		.loc 1 538 55 is_stmt 1 view -0
 919               		.cfi_startproc
 920               	/* prologue: function */
 921               	/* frame size = 0 */
 922               	/* stack size = 0 */
 923               	.L__stack_usage = 0
 539:quantum/rgblight.c ****         return;
 924               		.loc 1 539 5 view .LVU204
 539:quantum/rgblight.c ****         return;
 925               		.loc 1 539 25 is_stmt 0 view .LVU205
 926 0000 9091 0000 		lds r25,rgblight_config
 539:quantum/rgblight.c ****         return;
 927               		.loc 1 539 8 view .LVU206
 928 0004 90FF      		sbrs r25,0
 929 0006 00C0      		rjmp .L50
 543:quantum/rgblight.c ****         led[i].r = r;
 930               		.loc 1 543 5 is_stmt 1 view .LVU207
 931               	.LBB23:
 543:quantum/rgblight.c ****         led[i].r = r;
 932               		.loc 1 543 10 view .LVU208
 543:quantum/rgblight.c ****         led[i].r = r;
 933               		.loc 1 543 18 is_stmt 0 view .LVU209
 934 0008 9091 0000 		lds r25,rgblight_ranges+2
 935               	.LVL43:
 543:quantum/rgblight.c ****         led[i].r = r;
 936               		.loc 1 543 75 view .LVU210
 937 000c 2091 0000 		lds r18,rgblight_ranges+3
 938 0010 33E0      		ldi r19,lo8(3)
 939 0012 939F      		mul r25,r19
 940 0014 F001      		movw r30,r0
 941 0016 1124      		clr __zero_reg__
 942 0018 E050      		subi r30,lo8(-(led))
 943 001a F040      		sbci r31,hi8(-(led))
 944               	.L52:
 543:quantum/rgblight.c ****         led[i].r = r;
 945               		.loc 1 543 56 is_stmt 1 discriminator 1 view .LVU211
 543:quantum/rgblight.c ****         led[i].r = r;
 946               		.loc 1 543 5 is_stmt 0 discriminator 1 view .LVU212
 947 001c 9217      		cp r25,r18
 948 001e 00F0      		brlo .L53
 543:quantum/rgblight.c ****         led[i].r = r;
 949               		.loc 1 543 5 discriminator 1 view .LVU213
 950               	.LBE23:
 551:quantum/rgblight.c **** }
 951               		.loc 1 551 5 is_stmt 1 view .LVU214
 952 0020 0C94 0000 		jmp rgblight_set
 953               	.LVL44:
 954               	.L53:
 955               	.LBB24:
 544:quantum/rgblight.c ****         led[i].g = g;
 956               		.loc 1 544 9 discriminator 3 view .LVU215
 544:quantum/rgblight.c ****         led[i].g = g;
 957               		.loc 1 544 18 is_stmt 0 discriminator 3 view .LVU216
 958 0024 8183      		std Z+1,r24
 545:quantum/rgblight.c ****         led[i].b = b;
 959               		.loc 1 545 9 is_stmt 1 discriminator 3 view .LVU217
 545:quantum/rgblight.c ****         led[i].b = b;
 960               		.loc 1 545 18 is_stmt 0 discriminator 3 view .LVU218
 961 0026 6083      		st Z,r22
 546:quantum/rgblight.c **** #ifdef RGBW
 962               		.loc 1 546 9 is_stmt 1 discriminator 3 view .LVU219
 546:quantum/rgblight.c **** #ifdef RGBW
 963               		.loc 1 546 18 is_stmt 0 discriminator 3 view .LVU220
 964 0028 4283      		std Z+2,r20
 543:quantum/rgblight.c ****         led[i].r = r;
 965               		.loc 1 543 92 is_stmt 1 discriminator 3 view .LVU221
 543:quantum/rgblight.c ****         led[i].r = r;
 966               		.loc 1 543 93 is_stmt 0 discriminator 3 view .LVU222
 967 002a 9F5F      		subi r25,lo8(-(1))
 968               	.LVL45:
 543:quantum/rgblight.c ****         led[i].r = r;
 969               		.loc 1 543 93 discriminator 3 view .LVU223
 970 002c 3396      		adiw r30,3
 971 002e 00C0      		rjmp .L52
 972               	.LVL46:
 973               	.L50:
 974               	/* epilogue start */
 543:quantum/rgblight.c ****         led[i].r = r;
 975               		.loc 1 543 93 discriminator 3 view .LVU224
 976               	.LBE24:
 552:quantum/rgblight.c **** 
 977               		.loc 1 552 1 view .LVU225
 978 0030 0895      		ret
 979               		.cfi_endproc
 980               	.LFE153:
 982               		.section	.text.rgblight_sethsv_noeeprom_old,"ax",@progbits
 983               	.global	rgblight_sethsv_noeeprom_old
 985               	rgblight_sethsv_noeeprom_old:
 986               	.LVL47:
 987               	.LFB141:
 430:quantum/rgblight.c ****     if (rgblight_config.enable) {
 988               		.loc 1 430 74 is_stmt 1 view -0
 989               		.cfi_startproc
 430:quantum/rgblight.c ****     if (rgblight_config.enable) {
 990               		.loc 1 430 74 is_stmt 0 view .LVU227
 991 0000 CF93      		push r28
 992               	.LCFI6:
 993               		.cfi_def_cfa_offset 3
 994               		.cfi_offset 28, -2
 995 0002 DF93      		push r29
 996               	.LCFI7:
 997               		.cfi_def_cfa_offset 4
 998               		.cfi_offset 29, -3
 999 0004 00D0      		rcall .
 1000 0006 0F92      		push __tmp_reg__
 1001               	.LCFI8:
 1002               		.cfi_def_cfa_offset 7
 1003 0008 CDB7      		in r28,__SP_L__
 1004 000a DEB7      		in r29,__SP_H__
 1005               	.LCFI9:
 1006               		.cfi_def_cfa_register 28
 1007               	/* prologue: function */
 1008               	/* frame size = 3 */
 1009               	/* stack size = 5 */
 1010               	.L__stack_usage = 5
 431:quantum/rgblight.c ****         LED_TYPE tmp_led;
 1011               		.loc 1 431 5 is_stmt 1 view .LVU228
 431:quantum/rgblight.c ****         LED_TYPE tmp_led;
 1012               		.loc 1 431 9 is_stmt 0 view .LVU229
 1013 000c 9091 0000 		lds r25,rgblight_config
 431:quantum/rgblight.c ****         LED_TYPE tmp_led;
 1014               		.loc 1 431 8 view .LVU230
 1015 0010 90FF      		sbrs r25,0
 1016 0012 00C0      		rjmp .L54
 1017               	.LBB28:
 432:quantum/rgblight.c ****         sethsv(hue, sat, val, &tmp_led);
 1018               		.loc 1 432 9 is_stmt 1 view .LVU231
 433:quantum/rgblight.c ****         rgblight_setrgb(tmp_led.r, tmp_led.g, tmp_led.b);
 1019               		.loc 1 433 9 view .LVU232
 1020               	.LVL48:
 1021               	.LBB29:
 1022               	.LBI29:
 132:quantum/rgblight.c **** 
 1023               		.loc 1 132 6 view .LVU233
 1024               	.LBB30:
 132:quantum/rgblight.c **** 
 1025               		.loc 1 132 70 view .LVU234
 1026 0014 9E01      		movw r18,r28
 1027 0016 2F5F      		subi r18,-1
 1028 0018 3F4F      		sbci r19,-1
 1029 001a 0E94 0000 		call sethsv_raw
 1030               	.LVL49:
 132:quantum/rgblight.c **** 
 1031               		.loc 1 132 70 is_stmt 0 view .LVU235
 1032               	.LBE30:
 1033               	.LBE29:
 434:quantum/rgblight.c ****     }
 1034               		.loc 1 434 9 is_stmt 1 view .LVU236
 1035 001e 4B81      		ldd r20,Y+3
 1036 0020 6981      		ldd r22,Y+1
 1037 0022 8A81      		ldd r24,Y+2
 1038 0024 0E94 0000 		call rgblight_setrgb
 1039               	.LVL50:
 1040               	.L54:
 1041               	/* epilogue start */
 1042               	.LBE28:
 436:quantum/rgblight.c **** 
 1043               		.loc 1 436 1 is_stmt 0 view .LVU237
 1044 0028 0F90      		pop __tmp_reg__
 1045 002a 0F90      		pop __tmp_reg__
 1046 002c 0F90      		pop __tmp_reg__
 1047 002e DF91      		pop r29
 1048 0030 CF91      		pop r28
 1049 0032 0895      		ret
 1050               		.cfi_endproc
 1051               	.LFE141:
 1053               		.section	.text.rgblight_effect_breathing,"ax",@progbits
 1054               	.global	rgblight_effect_breathing
 1056               	rgblight_effect_breathing:
 1057               	.LVL51:
 1058               	.LFB172:
 868:quantum/rgblight.c **** 
 869:quantum/rgblight.c **** void rgblight_task(void) {
 870:quantum/rgblight.c ****     if (rgblight_status.timer_enabled) {
 871:quantum/rgblight.c ****         effect_func_t effect_func   = rgblight_effect_dummy;
 872:quantum/rgblight.c ****         uint16_t      interval_time = 2000;  // dummy interval
 873:quantum/rgblight.c ****         uint8_t       delta         = rgblight_config.mode - rgblight_status.base_mode;
 874:quantum/rgblight.c ****         animation_status.delta      = delta;
 875:quantum/rgblight.c **** 
 876:quantum/rgblight.c ****         // static light mode, do nothing here
 877:quantum/rgblight.c ****         if (1 == 0) {  // dummy
 878:quantum/rgblight.c ****         }
 879:quantum/rgblight.c **** #    ifdef RGBLIGHT_EFFECT_BREATHING
 880:quantum/rgblight.c ****         else if (rgblight_status.base_mode == RGBLIGHT_MODE_BREATHING) {
 881:quantum/rgblight.c ****             // breathing mode
 882:quantum/rgblight.c ****             interval_time = get_interval_time(&RGBLED_BREATHING_INTERVALS[delta], 1, 100);
 883:quantum/rgblight.c ****             effect_func   = rgblight_effect_breathing;
 884:quantum/rgblight.c ****         }
 885:quantum/rgblight.c **** #    endif
 886:quantum/rgblight.c **** #    ifdef RGBLIGHT_EFFECT_RAINBOW_MOOD
 887:quantum/rgblight.c ****         else if (rgblight_status.base_mode == RGBLIGHT_MODE_RAINBOW_MOOD) {
 888:quantum/rgblight.c ****             // rainbow mood mode
 889:quantum/rgblight.c ****             interval_time = get_interval_time(&RGBLED_RAINBOW_MOOD_INTERVALS[delta], 5, 100);
 890:quantum/rgblight.c ****             effect_func   = rgblight_effect_rainbow_mood;
 891:quantum/rgblight.c ****         }
 892:quantum/rgblight.c **** #    endif
 893:quantum/rgblight.c **** #    ifdef RGBLIGHT_EFFECT_RAINBOW_SWIRL
 894:quantum/rgblight.c ****         else if (rgblight_status.base_mode == RGBLIGHT_MODE_RAINBOW_SWIRL) {
 895:quantum/rgblight.c ****             // rainbow swirl mode
 896:quantum/rgblight.c ****             interval_time = get_interval_time(&RGBLED_RAINBOW_SWIRL_INTERVALS[delta / 2], 1, 100);
 897:quantum/rgblight.c ****             effect_func   = rgblight_effect_rainbow_swirl;
 898:quantum/rgblight.c ****         }
 899:quantum/rgblight.c **** #    endif
 900:quantum/rgblight.c **** #    ifdef RGBLIGHT_EFFECT_SNAKE
 901:quantum/rgblight.c ****         else if (rgblight_status.base_mode == RGBLIGHT_MODE_SNAKE) {
 902:quantum/rgblight.c ****             // snake mode
 903:quantum/rgblight.c ****             interval_time = get_interval_time(&RGBLED_SNAKE_INTERVALS[delta / 2], 1, 200);
 904:quantum/rgblight.c ****             effect_func   = rgblight_effect_snake;
 905:quantum/rgblight.c ****         }
 906:quantum/rgblight.c **** #    endif
 907:quantum/rgblight.c **** #    ifdef RGBLIGHT_EFFECT_KNIGHT
 908:quantum/rgblight.c ****         else if (rgblight_status.base_mode == RGBLIGHT_MODE_KNIGHT) {
 909:quantum/rgblight.c ****             // knight mode
 910:quantum/rgblight.c ****             interval_time = get_interval_time(&RGBLED_KNIGHT_INTERVALS[delta], 5, 100);
 911:quantum/rgblight.c ****             effect_func   = rgblight_effect_knight;
 912:quantum/rgblight.c ****         }
 913:quantum/rgblight.c **** #    endif
 914:quantum/rgblight.c **** #    ifdef RGBLIGHT_EFFECT_CHRISTMAS
 915:quantum/rgblight.c ****         else if (rgblight_status.base_mode == RGBLIGHT_MODE_CHRISTMAS) {
 916:quantum/rgblight.c ****             // christmas mode
 917:quantum/rgblight.c ****             interval_time = RGBLIGHT_EFFECT_CHRISTMAS_INTERVAL;
 918:quantum/rgblight.c ****             effect_func   = (effect_func_t)rgblight_effect_christmas;
 919:quantum/rgblight.c ****         }
 920:quantum/rgblight.c **** #    endif
 921:quantum/rgblight.c **** #    ifdef RGBLIGHT_EFFECT_RGB_TEST
 922:quantum/rgblight.c ****         else if (rgblight_status.base_mode == RGBLIGHT_MODE_RGB_TEST) {
 923:quantum/rgblight.c ****             // RGB test mode
 924:quantum/rgblight.c ****             interval_time = pgm_read_word(&RGBLED_RGBTEST_INTERVALS[0]);
 925:quantum/rgblight.c ****             effect_func   = (effect_func_t)rgblight_effect_rgbtest;
 926:quantum/rgblight.c ****         }
 927:quantum/rgblight.c **** #    endif
 928:quantum/rgblight.c **** #    ifdef RGBLIGHT_EFFECT_ALTERNATING
 929:quantum/rgblight.c ****         else if (rgblight_status.base_mode == RGBLIGHT_MODE_ALTERNATING) {
 930:quantum/rgblight.c ****             interval_time = 500;
 931:quantum/rgblight.c ****             effect_func   = (effect_func_t)rgblight_effect_alternating;
 932:quantum/rgblight.c ****         }
 933:quantum/rgblight.c **** #    endif
 934:quantum/rgblight.c **** #    ifdef RGBLIGHT_EFFECT_TWINKLE
 935:quantum/rgblight.c ****         else if (rgblight_status.base_mode == RGBLIGHT_MODE_TWINKLE) {
 936:quantum/rgblight.c ****             interval_time = get_interval_time(&RGBLED_TWINKLE_INTERVALS[delta % 3], 5, 50);
 937:quantum/rgblight.c ****             effect_func   = (effect_func_t)rgblight_effect_twinkle;
 938:quantum/rgblight.c ****         }
 939:quantum/rgblight.c **** #    endif
 940:quantum/rgblight.c ****         if (animation_status.restart) {
 941:quantum/rgblight.c ****             animation_status.restart    = false;
 942:quantum/rgblight.c ****             animation_status.last_timer = timer_read() - interval_time - 1;
 943:quantum/rgblight.c ****             animation_status.pos16      = 0;  // restart signal to local each effect
 944:quantum/rgblight.c ****         }
 945:quantum/rgblight.c ****         if (timer_elapsed(animation_status.last_timer) >= interval_time) {
 946:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 947:quantum/rgblight.c ****             static uint16_t report_last_timer = 0;
 948:quantum/rgblight.c ****             static bool     tick_flag         = false;
 949:quantum/rgblight.c ****             uint16_t        oldpos16;
 950:quantum/rgblight.c ****             if (tick_flag) {
 951:quantum/rgblight.c ****                 tick_flag = false;
 952:quantum/rgblight.c ****                 if (timer_elapsed(report_last_timer) >= 30000) {
 953:quantum/rgblight.c ****                     report_last_timer = timer_read();
 954:quantum/rgblight.c ****                     dprintf("rgblight animation tick report to slave\n");
 955:quantum/rgblight.c ****                     RGBLIGHT_SPLIT_ANIMATION_TICK;
 956:quantum/rgblight.c ****                 }
 957:quantum/rgblight.c ****             }
 958:quantum/rgblight.c ****             oldpos16 = animation_status.pos16;
 959:quantum/rgblight.c **** #    endif
 960:quantum/rgblight.c ****             animation_status.last_timer += interval_time;
 961:quantum/rgblight.c ****             effect_func(&animation_status);
 962:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 963:quantum/rgblight.c ****             if (animation_status.pos16 == 0 && oldpos16 != 0) {
 964:quantum/rgblight.c ****                 tick_flag = true;
 965:quantum/rgblight.c ****             }
 966:quantum/rgblight.c **** #    endif
 967:quantum/rgblight.c ****         }
 968:quantum/rgblight.c ****     }
 969:quantum/rgblight.c **** 
 970:quantum/rgblight.c **** #    ifdef RGBLIGHT_LAYER_BLINK
 971:quantum/rgblight.c ****     rgblight_unblink_layers();
 972:quantum/rgblight.c **** #    endif
 973:quantum/rgblight.c **** }
 974:quantum/rgblight.c **** 
 975:quantum/rgblight.c **** #endif /* RGBLIGHT_USE_TIMER */
 976:quantum/rgblight.c **** 
 977:quantum/rgblight.c **** // Effects
 978:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_BREATHING
 979:quantum/rgblight.c **** 
 980:quantum/rgblight.c **** #    ifndef RGBLIGHT_EFFECT_BREATHE_CENTER
 981:quantum/rgblight.c **** #        ifndef RGBLIGHT_BREATHE_TABLE_SIZE
 982:quantum/rgblight.c **** #            define RGBLIGHT_BREATHE_TABLE_SIZE 256  // 256 or 128 or 64
 983:quantum/rgblight.c **** #        endif
 984:quantum/rgblight.c **** #        include <rgblight_breathe_table.h>
 985:quantum/rgblight.c **** #    endif
 986:quantum/rgblight.c **** 
 987:quantum/rgblight.c **** __attribute__((weak)) const uint8_t RGBLED_BREATHING_INTERVALS[] PROGMEM = {30, 20, 10, 5};
 988:quantum/rgblight.c **** 
 989:quantum/rgblight.c **** void rgblight_effect_breathing(animation_status_t *anim) {
 1059               		.loc 1 989 58 is_stmt 1 view -0
 1060               		.cfi_startproc
 1061               		.loc 1 989 58 is_stmt 0 view .LVU239
 1062 0000 CF93      		push r28
 1063               	.LCFI10:
 1064               		.cfi_def_cfa_offset 3
 1065               		.cfi_offset 28, -2
 1066 0002 DF93      		push r29
 1067               	.LCFI11:
 1068               		.cfi_def_cfa_offset 4
 1069               		.cfi_offset 29, -3
 1070               	/* prologue: function */
 1071               	/* frame size = 0 */
 1072               	/* stack size = 2 */
 1073               	.L__stack_usage = 2
 1074 0004 EC01      		movw r28,r24
 990:quantum/rgblight.c ****     float val;
 1075               		.loc 1 990 5 is_stmt 1 view .LVU240
 991:quantum/rgblight.c **** 
 992:quantum/rgblight.c ****     // http://sean.voisen.org/blog/2011/10/breathing-led-with-arduino/
 993:quantum/rgblight.c **** #    ifdef RGBLIGHT_EFFECT_BREATHE_TABLE
 994:quantum/rgblight.c ****     val = pgm_read_byte(&rgblight_effect_breathe_table[anim->pos / table_scale]);
 1076               		.loc 1 994 5 view .LVU241
 1077               	.LBB31:
 1078               		.loc 1 994 11 view .LVU242
 1079               	.LVL52:
 1080               		.loc 1 994 11 view .LVU243
 1081               		.loc 1 994 11 view .LVU244
 1082 0006 EC81      		ldd r30,Y+4
 1083 0008 F0E0      		ldi r31,0
 1084 000a E050      		subi r30,lo8(-(rgblight_effect_breathe_table))
 1085 000c F040      		sbci r31,hi8(-(rgblight_effect_breathe_table))
 1086               	/* #APP */
 1087               	 ;  994 "quantum/rgblight.c" 1
 1088 000e 4491      		lpm r20, Z
 1089               		
 1090               	 ;  0 "" 2
 1091               	.LVL53:
 1092               		.loc 1 994 11 view .LVU245
 1093               		.loc 1 994 11 is_stmt 0 view .LVU246
 1094               	/* #NOAPP */
 1095               	.LBE31:
 995:quantum/rgblight.c **** #    else
 996:quantum/rgblight.c ****     val = (exp(sin((anim->pos / 255.0) * M_PI)) - RGBLIGHT_EFFECT_BREATHE_CENTER / M_E) * (RGBLIGHT
 997:quantum/rgblight.c **** #    endif
 998:quantum/rgblight.c ****     rgblight_sethsv_noeeprom_old(rgblight_config.hue, rgblight_config.sat, val);
 1096               		.loc 1 998 5 is_stmt 1 view .LVU247
 1097 0010 E0E0      		ldi r30,lo8(rgblight_config)
 1098 0012 F0E0      		ldi r31,hi8(rgblight_config)
 1099 0014 6281      		ldd r22,Z+2
 1100 0016 8181      		ldd r24,Z+1
 1101               	.LVL54:
 1102               		.loc 1 998 5 is_stmt 0 view .LVU248
 1103 0018 0E94 0000 		call rgblight_sethsv_noeeprom_old
 1104               	.LVL55:
 999:quantum/rgblight.c ****     anim->pos = (anim->pos + 1);
 1105               		.loc 1 999 5 is_stmt 1 view .LVU249
 1106               		.loc 1 999 28 is_stmt 0 view .LVU250
 1107 001c 8C81      		ldd r24,Y+4
 1108 001e 8F5F      		subi r24,lo8(-(1))
 1109               		.loc 1 999 15 view .LVU251
 1110 0020 8C83      		std Y+4,r24
 1111               	/* epilogue start */
1000:quantum/rgblight.c **** }
 1112               		.loc 1 1000 1 view .LVU252
 1113 0022 DF91      		pop r29
 1114 0024 CF91      		pop r28
 1115               	.LVL56:
 1116               		.loc 1 1000 1 view .LVU253
 1117 0026 0895      		ret
 1118               		.cfi_endproc
 1119               	.LFE172:
 1121               		.section	.text.rgblight_effect_rainbow_mood,"ax",@progbits
 1122               	.global	rgblight_effect_rainbow_mood
 1124               	rgblight_effect_rainbow_mood:
 1125               	.LVL57:
 1126               	.LFB173:
1001:quantum/rgblight.c **** #endif
1002:quantum/rgblight.c **** 
1003:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_RAINBOW_MOOD
1004:quantum/rgblight.c **** __attribute__((weak)) const uint8_t RGBLED_RAINBOW_MOOD_INTERVALS[] PROGMEM = {120, 60, 30};
1005:quantum/rgblight.c **** 
1006:quantum/rgblight.c **** void rgblight_effect_rainbow_mood(animation_status_t *anim) {
 1127               		.loc 1 1006 61 is_stmt 1 view -0
 1128               		.cfi_startproc
 1129               		.loc 1 1006 61 is_stmt 0 view .LVU255
 1130 0000 CF93      		push r28
 1131               	.LCFI12:
 1132               		.cfi_def_cfa_offset 3
 1133               		.cfi_offset 28, -2
 1134 0002 DF93      		push r29
 1135               	.LCFI13:
 1136               		.cfi_def_cfa_offset 4
 1137               		.cfi_offset 29, -3
 1138               	/* prologue: function */
 1139               	/* frame size = 0 */
 1140               	/* stack size = 2 */
 1141               	.L__stack_usage = 2
 1142 0004 EC01      		movw r28,r24
1007:quantum/rgblight.c ****     rgblight_sethsv_noeeprom_old(anim->current_hue, rgblight_config.sat, rgblight_config.val);
 1143               		.loc 1 1007 5 is_stmt 1 view .LVU256
 1144 0006 E0E0      		ldi r30,lo8(rgblight_config)
 1145 0008 F0E0      		ldi r31,hi8(rgblight_config)
 1146 000a 4381      		ldd r20,Z+3
 1147 000c 6281      		ldd r22,Z+2
 1148 000e 8C81      		ldd r24,Y+4
 1149               	.LVL58:
 1150               		.loc 1 1007 5 is_stmt 0 view .LVU257
 1151 0010 0E94 0000 		call rgblight_sethsv_noeeprom_old
 1152               	.LVL59:
1008:quantum/rgblight.c ****     anim->current_hue++;
 1153               		.loc 1 1008 5 is_stmt 1 view .LVU258
 1154               		.loc 1 1008 22 is_stmt 0 view .LVU259
 1155 0014 8C81      		ldd r24,Y+4
 1156 0016 8F5F      		subi r24,lo8(-(1))
 1157 0018 8C83      		std Y+4,r24
 1158               	/* epilogue start */
1009:quantum/rgblight.c **** }
 1159               		.loc 1 1009 1 view .LVU260
 1160 001a DF91      		pop r29
 1161 001c CF91      		pop r28
 1162               	.LVL60:
 1163               		.loc 1 1009 1 view .LVU261
 1164 001e 0895      		ret
 1165               		.cfi_endproc
 1166               	.LFE173:
 1168               		.section	.text.rgblight_effect_rgbtest,"ax",@progbits
 1169               	.global	rgblight_effect_rgbtest
 1171               	rgblight_effect_rgbtest:
 1172               	.LVL61:
 1173               	.LFB178:
1010:quantum/rgblight.c **** #endif
1011:quantum/rgblight.c **** 
1012:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_RAINBOW_SWIRL
1013:quantum/rgblight.c **** #    ifndef RGBLIGHT_RAINBOW_SWIRL_RANGE
1014:quantum/rgblight.c **** #        define RGBLIGHT_RAINBOW_SWIRL_RANGE 255
1015:quantum/rgblight.c **** #    endif
1016:quantum/rgblight.c **** 
1017:quantum/rgblight.c **** __attribute__((weak)) const uint8_t RGBLED_RAINBOW_SWIRL_INTERVALS[] PROGMEM = {100, 50, 20};
1018:quantum/rgblight.c **** 
1019:quantum/rgblight.c **** void rgblight_effect_rainbow_swirl(animation_status_t *anim) {
1020:quantum/rgblight.c ****     uint8_t hue;
1021:quantum/rgblight.c ****     uint8_t i;
1022:quantum/rgblight.c **** 
1023:quantum/rgblight.c ****     for (i = 0; i < rgblight_ranges.effect_num_leds; i++) {
1024:quantum/rgblight.c ****         hue = (RGBLIGHT_RAINBOW_SWIRL_RANGE / rgblight_ranges.effect_num_leds * i + anim->current_h
1025:quantum/rgblight.c ****         sethsv(hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[i + rgblight_ranges.
1026:quantum/rgblight.c ****     }
1027:quantum/rgblight.c ****     rgblight_set();
1028:quantum/rgblight.c **** 
1029:quantum/rgblight.c ****     if (anim->delta % 2) {
1030:quantum/rgblight.c ****         anim->current_hue++;
1031:quantum/rgblight.c ****     } else {
1032:quantum/rgblight.c ****         anim->current_hue--;
1033:quantum/rgblight.c ****     }
1034:quantum/rgblight.c **** }
1035:quantum/rgblight.c **** #endif
1036:quantum/rgblight.c **** 
1037:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_SNAKE
1038:quantum/rgblight.c **** __attribute__((weak)) const uint8_t RGBLED_SNAKE_INTERVALS[] PROGMEM = {100, 50, 20};
1039:quantum/rgblight.c **** 
1040:quantum/rgblight.c **** void rgblight_effect_snake(animation_status_t *anim) {
1041:quantum/rgblight.c ****     static uint8_t pos = 0;
1042:quantum/rgblight.c ****     uint8_t        i, j;
1043:quantum/rgblight.c ****     int8_t         k;
1044:quantum/rgblight.c ****     int8_t         increment = 1;
1045:quantum/rgblight.c **** 
1046:quantum/rgblight.c ****     if (anim->delta % 2) {
1047:quantum/rgblight.c ****         increment = -1;
1048:quantum/rgblight.c ****     }
1049:quantum/rgblight.c **** 
1050:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
1051:quantum/rgblight.c ****     if (anim->pos == 0) {  // restart signal
1052:quantum/rgblight.c ****         if (increment == 1) {
1053:quantum/rgblight.c ****             pos = rgblight_ranges.effect_num_leds - 1;
1054:quantum/rgblight.c ****         } else {
1055:quantum/rgblight.c ****             pos = 0;
1056:quantum/rgblight.c ****         }
1057:quantum/rgblight.c ****         anim->pos = 1;
1058:quantum/rgblight.c ****     }
1059:quantum/rgblight.c **** #    endif
1060:quantum/rgblight.c **** 
1061:quantum/rgblight.c ****     for (i = 0; i < rgblight_ranges.effect_num_leds; i++) {
1062:quantum/rgblight.c ****         LED_TYPE *ledp = led + i + rgblight_ranges.effect_start_pos;
1063:quantum/rgblight.c ****         ledp->r        = 0;
1064:quantum/rgblight.c ****         ledp->g        = 0;
1065:quantum/rgblight.c ****         ledp->b        = 0;
1066:quantum/rgblight.c **** #    ifdef RGBW
1067:quantum/rgblight.c ****         ledp->w = 0;
1068:quantum/rgblight.c **** #    endif
1069:quantum/rgblight.c ****         for (j = 0; j < RGBLIGHT_EFFECT_SNAKE_LENGTH; j++) {
1070:quantum/rgblight.c ****             k = pos + j * increment;
1071:quantum/rgblight.c ****             if (k > RGBLED_NUM) {
1072:quantum/rgblight.c ****                 k = k % RGBLED_NUM;
1073:quantum/rgblight.c ****             }
1074:quantum/rgblight.c ****             if (k < 0) {
1075:quantum/rgblight.c ****                 k = k + rgblight_ranges.effect_num_leds;
1076:quantum/rgblight.c ****             }
1077:quantum/rgblight.c ****             if (i == k) {
1078:quantum/rgblight.c ****                 sethsv(rgblight_config.hue, rgblight_config.sat, (uint8_t)(rgblight_config.val * (R
1079:quantum/rgblight.c ****             }
1080:quantum/rgblight.c ****         }
1081:quantum/rgblight.c ****     }
1082:quantum/rgblight.c ****     rgblight_set();
1083:quantum/rgblight.c ****     if (increment == 1) {
1084:quantum/rgblight.c ****         if (pos - 1 < 0) {
1085:quantum/rgblight.c ****             pos = rgblight_ranges.effect_num_leds - 1;
1086:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
1087:quantum/rgblight.c ****             anim->pos = 0;
1088:quantum/rgblight.c **** #    endif
1089:quantum/rgblight.c ****         } else {
1090:quantum/rgblight.c ****             pos -= 1;
1091:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
1092:quantum/rgblight.c ****             anim->pos = 1;
1093:quantum/rgblight.c **** #    endif
1094:quantum/rgblight.c ****         }
1095:quantum/rgblight.c ****     } else {
1096:quantum/rgblight.c ****         pos = (pos + 1) % rgblight_ranges.effect_num_leds;
1097:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
1098:quantum/rgblight.c ****         anim->pos = pos;
1099:quantum/rgblight.c **** #    endif
1100:quantum/rgblight.c ****     }
1101:quantum/rgblight.c **** }
1102:quantum/rgblight.c **** #endif
1103:quantum/rgblight.c **** 
1104:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_KNIGHT
1105:quantum/rgblight.c **** __attribute__((weak)) const uint8_t RGBLED_KNIGHT_INTERVALS[] PROGMEM = {127, 63, 31};
1106:quantum/rgblight.c **** 
1107:quantum/rgblight.c **** void rgblight_effect_knight(animation_status_t *anim) {
1108:quantum/rgblight.c ****     static int8_t low_bound  = 0;
1109:quantum/rgblight.c ****     static int8_t high_bound = RGBLIGHT_EFFECT_KNIGHT_LENGTH - 1;
1110:quantum/rgblight.c ****     static int8_t increment  = 1;
1111:quantum/rgblight.c ****     uint8_t       i, cur;
1112:quantum/rgblight.c **** 
1113:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
1114:quantum/rgblight.c ****     if (anim->pos == 0) {  // restart signal
1115:quantum/rgblight.c ****         anim->pos  = 1;
1116:quantum/rgblight.c ****         low_bound  = 0;
1117:quantum/rgblight.c ****         high_bound = RGBLIGHT_EFFECT_KNIGHT_LENGTH - 1;
1118:quantum/rgblight.c ****         increment  = 1;
1119:quantum/rgblight.c ****     }
1120:quantum/rgblight.c **** #    endif
1121:quantum/rgblight.c ****     // Set all the LEDs to 0
1122:quantum/rgblight.c ****     for (i = rgblight_ranges.effect_start_pos; i < rgblight_ranges.effect_end_pos; i++) {
1123:quantum/rgblight.c ****         led[i].r = 0;
1124:quantum/rgblight.c ****         led[i].g = 0;
1125:quantum/rgblight.c ****         led[i].b = 0;
1126:quantum/rgblight.c **** #    ifdef RGBW
1127:quantum/rgblight.c ****         led[i].w = 0;
1128:quantum/rgblight.c **** #    endif
1129:quantum/rgblight.c ****     }
1130:quantum/rgblight.c ****     // Determine which LEDs should be lit up
1131:quantum/rgblight.c ****     for (i = 0; i < RGBLIGHT_EFFECT_KNIGHT_LED_NUM; i++) {
1132:quantum/rgblight.c ****         cur = (i + RGBLIGHT_EFFECT_KNIGHT_OFFSET) % rgblight_ranges.effect_num_leds + rgblight_rang
1133:quantum/rgblight.c **** 
1134:quantum/rgblight.c ****         if (i >= low_bound && i <= high_bound) {
1135:quantum/rgblight.c ****             sethsv(rgblight_config.hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[
1136:quantum/rgblight.c ****         } else {
1137:quantum/rgblight.c ****             led[cur].r = 0;
1138:quantum/rgblight.c ****             led[cur].g = 0;
1139:quantum/rgblight.c ****             led[cur].b = 0;
1140:quantum/rgblight.c **** #    ifdef RGBW
1141:quantum/rgblight.c ****             led[cur].w = 0;
1142:quantum/rgblight.c **** #    endif
1143:quantum/rgblight.c ****         }
1144:quantum/rgblight.c ****     }
1145:quantum/rgblight.c ****     rgblight_set();
1146:quantum/rgblight.c **** 
1147:quantum/rgblight.c ****     // Move from low_bound to high_bound changing the direction we increment each
1148:quantum/rgblight.c ****     // time a boundary is hit.
1149:quantum/rgblight.c ****     low_bound += increment;
1150:quantum/rgblight.c ****     high_bound += increment;
1151:quantum/rgblight.c **** 
1152:quantum/rgblight.c ****     if (high_bound <= 0 || low_bound >= RGBLIGHT_EFFECT_KNIGHT_LED_NUM - 1) {
1153:quantum/rgblight.c ****         increment = -increment;
1154:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
1155:quantum/rgblight.c ****         if (increment == 1) {
1156:quantum/rgblight.c ****             anim->pos = 0;
1157:quantum/rgblight.c ****         }
1158:quantum/rgblight.c **** #    endif
1159:quantum/rgblight.c ****     }
1160:quantum/rgblight.c **** }
1161:quantum/rgblight.c **** #endif
1162:quantum/rgblight.c **** 
1163:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_CHRISTMAS
1164:quantum/rgblight.c **** #    define CUBED(x) ((x) * (x) * (x))
1165:quantum/rgblight.c **** 
1166:quantum/rgblight.c **** /**
1167:quantum/rgblight.c ****  * Christmas lights effect, with a smooth animation between red & green.
1168:quantum/rgblight.c ****  */
1169:quantum/rgblight.c **** void rgblight_effect_christmas(animation_status_t *anim) {
1170:quantum/rgblight.c ****     static int8_t increment = 1;
1171:quantum/rgblight.c ****     const uint8_t max_pos   = 32;
1172:quantum/rgblight.c ****     const uint8_t hue_green = 85;
1173:quantum/rgblight.c **** 
1174:quantum/rgblight.c ****     uint32_t xa;
1175:quantum/rgblight.c ****     uint8_t  hue, val;
1176:quantum/rgblight.c ****     uint8_t  i;
1177:quantum/rgblight.c **** 
1178:quantum/rgblight.c ****     // The effect works by animating anim->pos from 0 to 32 and back to 0.
1179:quantum/rgblight.c ****     // The pos is used in a cubic bezier formula to ease-in-out between red and green, leaving the 
1180:quantum/rgblight.c ****     xa  = CUBED((uint32_t)anim->pos);
1181:quantum/rgblight.c ****     hue = ((uint32_t)hue_green) * xa / (xa + CUBED((uint32_t)(max_pos - anim->pos)));
1182:quantum/rgblight.c ****     // Additionally, these interpolated colors get shown with a slightly darker value, to make them
1183:quantum/rgblight.c ****     val = 255 - (3 * (hue < hue_green / 2 ? hue : hue_green - hue) / 2);
1184:quantum/rgblight.c **** 
1185:quantum/rgblight.c ****     for (i = 0; i < rgblight_ranges.effect_num_leds; i++) {
1186:quantum/rgblight.c ****         uint8_t local_hue = (i / RGBLIGHT_EFFECT_CHRISTMAS_STEP) % 2 ? hue : hue_green - hue;
1187:quantum/rgblight.c ****         sethsv(local_hue, rgblight_config.sat, val, (LED_TYPE *)&led[i + rgblight_ranges.effect_sta
1188:quantum/rgblight.c ****     }
1189:quantum/rgblight.c ****     rgblight_set();
1190:quantum/rgblight.c **** 
1191:quantum/rgblight.c ****     if (anim->pos == 0) {
1192:quantum/rgblight.c ****         increment = 1;
1193:quantum/rgblight.c ****     } else if (anim->pos == max_pos) {
1194:quantum/rgblight.c ****         increment = -1;
1195:quantum/rgblight.c ****     }
1196:quantum/rgblight.c ****     anim->pos += increment;
1197:quantum/rgblight.c **** }
1198:quantum/rgblight.c **** #endif
1199:quantum/rgblight.c **** 
1200:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_RGB_TEST
1201:quantum/rgblight.c **** __attribute__((weak)) const uint16_t RGBLED_RGBTEST_INTERVALS[] PROGMEM = {1024};
1202:quantum/rgblight.c **** 
1203:quantum/rgblight.c **** void rgblight_effect_rgbtest(animation_status_t *anim) {
 1174               		.loc 1 1203 56 is_stmt 1 view -0
 1175               		.cfi_startproc
 1176               		.loc 1 1203 56 is_stmt 0 view .LVU263
 1177 0000 0F93      		push r16
 1178               	.LCFI14:
 1179               		.cfi_def_cfa_offset 3
 1180               		.cfi_offset 16, -2
 1181 0002 1F93      		push r17
 1182               	.LCFI15:
 1183               		.cfi_def_cfa_offset 4
 1184               		.cfi_offset 17, -3
 1185 0004 CF93      		push r28
 1186               	.LCFI16:
 1187               		.cfi_def_cfa_offset 5
 1188               		.cfi_offset 28, -4
 1189 0006 DF93      		push r29
 1190               	.LCFI17:
 1191               		.cfi_def_cfa_offset 6
 1192               		.cfi_offset 29, -5
 1193 0008 00D0      		rcall .
 1194 000a 0F92      		push __tmp_reg__
 1195               	.LCFI18:
 1196               		.cfi_def_cfa_offset 9
 1197 000c CDB7      		in r28,__SP_L__
 1198 000e DEB7      		in r29,__SP_H__
 1199               	.LCFI19:
 1200               		.cfi_def_cfa_register 28
 1201               	/* prologue: function */
 1202               	/* frame size = 3 */
 1203               	/* stack size = 7 */
 1204               	.L__stack_usage = 7
 1205 0010 8C01      		movw r16,r24
1204:quantum/rgblight.c ****     static uint8_t maxval = 0;
 1206               		.loc 1 1204 5 is_stmt 1 view .LVU264
1205:quantum/rgblight.c ****     uint8_t        g;
 1207               		.loc 1 1205 5 view .LVU265
1206:quantum/rgblight.c ****     uint8_t        r;
 1208               		.loc 1 1206 5 view .LVU266
1207:quantum/rgblight.c ****     uint8_t        b;
 1209               		.loc 1 1207 5 view .LVU267
1208:quantum/rgblight.c **** 
1209:quantum/rgblight.c ****     if (maxval == 0) {
 1210               		.loc 1 1209 5 view .LVU268
 1211               		.loc 1 1209 8 is_stmt 0 view .LVU269
 1212 0012 8091 0000 		lds r24,maxval.3447
 1213               	.LVL62:
 1214               		.loc 1 1209 8 view .LVU270
 1215 0016 8111      		cpse r24,__zero_reg__
 1216 0018 00C0      		rjmp .L62
 1217               	.LBB35:
1210:quantum/rgblight.c ****         LED_TYPE tmp_led;
 1218               		.loc 1 1210 9 is_stmt 1 view .LVU271
1211:quantum/rgblight.c ****         sethsv(0, 255, RGBLIGHT_LIMIT_VAL, &tmp_led);
 1219               		.loc 1 1211 9 view .LVU272
 1220               	.LVL63:
 1221               	.LBB36:
 1222               	.LBI36:
 132:quantum/rgblight.c **** 
 1223               		.loc 1 132 6 view .LVU273
 1224               	.LBB37:
 132:quantum/rgblight.c **** 
 1225               		.loc 1 132 70 view .LVU274
 1226 001a 9E01      		movw r18,r28
 1227 001c 2F5F      		subi r18,-1
 1228 001e 3F4F      		sbci r19,-1
 1229 0020 4FEF      		ldi r20,lo8(-1)
 1230 0022 6FEF      		ldi r22,lo8(-1)
 1231 0024 0E94 0000 		call sethsv_raw
 1232               	.LVL64:
 132:quantum/rgblight.c **** 
 1233               		.loc 1 132 70 is_stmt 0 view .LVU275
 1234               	.LBE37:
 1235               	.LBE36:
1212:quantum/rgblight.c ****         maxval = tmp_led.r;
 1236               		.loc 1 1212 9 is_stmt 1 view .LVU276
 1237               		.loc 1 1212 16 is_stmt 0 view .LVU277
 1238 0028 8A81      		ldd r24,Y+2
 1239 002a 8093 0000 		sts maxval.3447,r24
 1240               	.L62:
 1241               	.LBE35:
1213:quantum/rgblight.c ****     }
1214:quantum/rgblight.c ****     g = r = b = 0;
 1242               		.loc 1 1214 5 is_stmt 1 view .LVU278
 1243               	.LVL65:
1215:quantum/rgblight.c ****     switch (anim->pos) {
 1244               		.loc 1 1215 5 view .LVU279
 1245               		.loc 1 1215 17 is_stmt 0 view .LVU280
 1246 002e F801      		movw r30,r16
 1247 0030 6481      		ldd r22,Z+4
 1248               		.loc 1 1215 5 view .LVU281
 1249 0032 6130      		cpi r22,lo8(1)
 1250 0034 01F0      		breq .L63
1216:quantum/rgblight.c ****         case 0:
1217:quantum/rgblight.c ****             r = maxval;
 1251               		.loc 1 1217 15 view .LVU282
 1252 0036 8091 0000 		lds r24,maxval.3447
 1253               	.LVL66:
1218:quantum/rgblight.c ****             break;
 1254               		.loc 1 1218 13 is_stmt 1 view .LVU283
1214:quantum/rgblight.c ****     switch (anim->pos) {
 1255               		.loc 1 1214 15 is_stmt 0 view .LVU284
 1256 003a 40E0      		ldi r20,0
1215:quantum/rgblight.c ****         case 0:
 1257               		.loc 1 1215 5 view .LVU285
 1258 003c 6623      		tst r22
 1259 003e 01F0      		breq .L66
1214:quantum/rgblight.c ****     switch (anim->pos) {
 1260               		.loc 1 1214 15 view .LVU286
 1261 0040 40E0      		ldi r20,0
1215:quantum/rgblight.c ****         case 0:
 1262               		.loc 1 1215 5 view .LVU287
 1263 0042 6230      		cpi r22,lo8(2)
 1264 0044 01F4      		brne .L67
1219:quantum/rgblight.c ****         case 1:
1220:quantum/rgblight.c ****             g = maxval;
1221:quantum/rgblight.c ****             break;
1222:quantum/rgblight.c ****         case 2:
1223:quantum/rgblight.c ****             b = maxval;
 1265               		.loc 1 1223 13 is_stmt 1 view .LVU288
 1266               		.loc 1 1223 15 is_stmt 0 view .LVU289
 1267 0046 4091 0000 		lds r20,maxval.3447
 1268               	.L67:
 1269               	.LVL67:
1224:quantum/rgblight.c ****             break;
 1270               		.loc 1 1224 13 is_stmt 1 view .LVU290
1214:quantum/rgblight.c ****     switch (anim->pos) {
 1271               		.loc 1 1214 11 is_stmt 0 view .LVU291
 1272 004a 80E0      		ldi r24,0
 1273               	.LVL68:
1214:quantum/rgblight.c ****     switch (anim->pos) {
 1274               		.loc 1 1214 7 view .LVU292
 1275 004c 60E0      		ldi r22,0
 1276               		.loc 1 1224 13 view .LVU293
 1277 004e 00C0      		rjmp .L66
 1278               	.LVL69:
 1279               	.L63:
1220:quantum/rgblight.c ****             break;
 1280               		.loc 1 1220 13 is_stmt 1 view .LVU294
1220:quantum/rgblight.c ****             break;
 1281               		.loc 1 1220 15 is_stmt 0 view .LVU295
 1282 0050 6091 0000 		lds r22,maxval.3447
 1283               	.LVL70:
1221:quantum/rgblight.c ****         case 2:
 1284               		.loc 1 1221 13 is_stmt 1 view .LVU296
1214:quantum/rgblight.c ****     switch (anim->pos) {
 1285               		.loc 1 1214 15 is_stmt 0 view .LVU297
 1286 0054 40E0      		ldi r20,0
1214:quantum/rgblight.c ****     switch (anim->pos) {
 1287               		.loc 1 1214 11 view .LVU298
 1288 0056 80E0      		ldi r24,0
 1289               	.LVL71:
 1290               	.L66:
1225:quantum/rgblight.c ****     }
1226:quantum/rgblight.c ****     rgblight_setrgb(r, g, b);
 1291               		.loc 1 1226 5 is_stmt 1 view .LVU299
 1292 0058 0E94 0000 		call rgblight_setrgb
 1293               	.LVL72:
1227:quantum/rgblight.c ****     anim->pos = (anim->pos + 1) % 3;
 1294               		.loc 1 1227 5 view .LVU300
 1295               		.loc 1 1227 22 is_stmt 0 view .LVU301
 1296 005c F801      		movw r30,r16
 1297 005e 8481      		ldd r24,Z+4
 1298 0060 90E0      		ldi r25,0
 1299               		.loc 1 1227 28 view .LVU302
 1300 0062 0196      		adiw r24,1
 1301               		.loc 1 1227 33 view .LVU303
 1302 0064 63E0      		ldi r22,lo8(3)
 1303 0066 70E0      		ldi r23,0
 1304 0068 0E94 0000 		call __divmodhi4
 1305               		.loc 1 1227 15 view .LVU304
 1306 006c 8483      		std Z+4,r24
 1307               	/* epilogue start */
1228:quantum/rgblight.c **** }
 1308               		.loc 1 1228 1 view .LVU305
 1309 006e 0F90      		pop __tmp_reg__
 1310 0070 0F90      		pop __tmp_reg__
 1311 0072 0F90      		pop __tmp_reg__
 1312 0074 DF91      		pop r29
 1313 0076 CF91      		pop r28
 1314 0078 1F91      		pop r17
 1315 007a 0F91      		pop r16
 1316               	.LVL73:
 1317               		.loc 1 1228 1 view .LVU306
 1318 007c 0895      		ret
 1319               		.cfi_endproc
 1320               	.LFE178:
 1322               		.section	.text.rgblight_sethsv_eeprom_helper,"ax",@progbits
 1323               	.global	rgblight_sethsv_eeprom_helper
 1325               	rgblight_sethsv_eeprom_helper:
 1326               	.LVL74:
 1327               	.LFB142:
 438:quantum/rgblight.c ****     if (rgblight_config.enable) {
 1328               		.loc 1 438 97 is_stmt 1 view -0
 1329               		.cfi_startproc
 438:quantum/rgblight.c ****     if (rgblight_config.enable) {
 1330               		.loc 1 438 97 is_stmt 0 view .LVU308
 1331 0000 AF92      		push r10
 1332               	.LCFI20:
 1333               		.cfi_def_cfa_offset 3
 1334               		.cfi_offset 10, -2
 1335 0002 BF92      		push r11
 1336               	.LCFI21:
 1337               		.cfi_def_cfa_offset 4
 1338               		.cfi_offset 11, -3
 1339 0004 CF92      		push r12
 1340               	.LCFI22:
 1341               		.cfi_def_cfa_offset 5
 1342               		.cfi_offset 12, -4
 1343 0006 DF92      		push r13
 1344               	.LCFI23:
 1345               		.cfi_def_cfa_offset 6
 1346               		.cfi_offset 13, -5
 1347 0008 EF92      		push r14
 1348               	.LCFI24:
 1349               		.cfi_def_cfa_offset 7
 1350               		.cfi_offset 14, -6
 1351 000a FF92      		push r15
 1352               	.LCFI25:
 1353               		.cfi_def_cfa_offset 8
 1354               		.cfi_offset 15, -7
 1355 000c 0F93      		push r16
 1356               	.LCFI26:
 1357               		.cfi_def_cfa_offset 9
 1358               		.cfi_offset 16, -8
 1359 000e 1F93      		push r17
 1360               	.LCFI27:
 1361               		.cfi_def_cfa_offset 10
 1362               		.cfi_offset 17, -9
 1363 0010 CF93      		push r28
 1364               	.LCFI28:
 1365               		.cfi_def_cfa_offset 11
 1366               		.cfi_offset 28, -10
 1367 0012 DF93      		push r29
 1368               	.LCFI29:
 1369               		.cfi_def_cfa_offset 12
 1370               		.cfi_offset 29, -11
 1371 0014 00D0      		rcall .
 1372 0016 0F92      		push __tmp_reg__
 1373               	.LCFI30:
 1374               		.cfi_def_cfa_offset 15
 1375 0018 CDB7      		in r28,__SP_L__
 1376 001a DEB7      		in r29,__SP_H__
 1377               	.LCFI31:
 1378               		.cfi_def_cfa_register 28
 1379               	/* prologue: function */
 1380               	/* frame size = 3 */
 1381               	/* stack size = 13 */
 1382               	.L__stack_usage = 13
 1383 001c 182F      		mov r17,r24
 1384 001e F62E      		mov r15,r22
 1385 0020 042F      		mov r16,r20
 1386 0022 E22E      		mov r14,r18
 439:quantum/rgblight.c ****         rgblight_status.base_mode = mode_base_table[rgblight_config.mode];
 1387               		.loc 1 439 5 is_stmt 1 view .LVU309
 439:quantum/rgblight.c ****         rgblight_status.base_mode = mode_base_table[rgblight_config.mode];
 1388               		.loc 1 439 9 is_stmt 0 view .LVU310
 1389 0024 9091 0000 		lds r25,rgblight_config
 439:quantum/rgblight.c ****         rgblight_status.base_mode = mode_base_table[rgblight_config.mode];
 1390               		.loc 1 439 8 view .LVU311
 1391 0028 90FF      		sbrs r25,0
 1392 002a 00C0      		rjmp .L68
 440:quantum/rgblight.c ****         if (rgblight_config.mode == RGBLIGHT_MODE_STATIC_LIGHT) {
 1393               		.loc 1 440 9 is_stmt 1 view .LVU312
 440:quantum/rgblight.c ****         if (rgblight_config.mode == RGBLIGHT_MODE_STATIC_LIGHT) {
 1394               		.loc 1 440 68 is_stmt 0 view .LVU313
 1395 002c E92F      		mov r30,r25
 1396 002e E695      		lsr r30
 1397 0030 AE2F      		mov r26,r30
 1398 0032 B0E0      		ldi r27,0
 440:quantum/rgblight.c ****         if (rgblight_config.mode == RGBLIGHT_MODE_STATIC_LIGHT) {
 1399               		.loc 1 440 52 view .LVU314
 1400 0034 A050      		subi r26,lo8(-(mode_base_table))
 1401 0036 B040      		sbci r27,hi8(-(mode_base_table))
 1402 0038 8C91      		ld r24,X
 1403               	.LVL75:
 440:quantum/rgblight.c ****         if (rgblight_config.mode == RGBLIGHT_MODE_STATIC_LIGHT) {
 1404               		.loc 1 440 35 view .LVU315
 1405 003a 8093 0000 		sts rgblight_status,r24
 441:quantum/rgblight.c ****             // same static color
 1406               		.loc 1 441 9 is_stmt 1 view .LVU316
 441:quantum/rgblight.c ****             // same static color
 1407               		.loc 1 441 34 is_stmt 0 view .LVU317
 1408 003e 9E7F      		andi r25,lo8(-2)
 441:quantum/rgblight.c ****             // same static color
 1409               		.loc 1 441 12 view .LVU318
 1410 0040 9230      		cpi r25,lo8(2)
 1411 0042 01F4      		brne .L71
 1412               	.LBB47:
 443:quantum/rgblight.c ****             sethsv(hue, sat, val, &tmp_led);
 1413               		.loc 1 443 13 is_stmt 1 view .LVU319
 444:quantum/rgblight.c ****             rgblight_setrgb(tmp_led.r, tmp_led.g, tmp_led.b);
 1414               		.loc 1 444 13 view .LVU320
 1415               	.LVL76:
 1416               	.LBB48:
 1417               	.LBI48:
 132:quantum/rgblight.c **** 
 1418               		.loc 1 132 6 view .LVU321
 1419               	.LBB49:
 132:quantum/rgblight.c **** 
 1420               		.loc 1 132 70 view .LVU322
 1421 0044 9E01      		movw r18,r28
 1422               	.LVL77:
 132:quantum/rgblight.c **** 
 1423               		.loc 1 132 70 is_stmt 0 view .LVU323
 1424 0046 2F5F      		subi r18,-1
 1425 0048 3F4F      		sbci r19,-1
 1426 004a 812F      		mov r24,r17
 1427 004c 0E94 0000 		call sethsv_raw
 1428               	.LVL78:
 132:quantum/rgblight.c **** 
 1429               		.loc 1 132 70 view .LVU324
 1430               	.LBE49:
 1431               	.LBE48:
 445:quantum/rgblight.c ****         } else {
 1432               		.loc 1 445 13 is_stmt 1 view .LVU325
 1433 0050 4B81      		ldd r20,Y+3
 1434 0052 6981      		ldd r22,Y+1
 1435 0054 8A81      		ldd r24,Y+2
 1436 0056 0E94 0000 		call rgblight_setrgb
 1437               	.LVL79:
 1438               	.L72:
 445:quantum/rgblight.c ****         } else {
 1439               		.loc 1 445 13 is_stmt 0 view .LVU326
 1440               	.LBE47:
 498:quantum/rgblight.c ****         rgblight_config.sat = sat;
 1441               		.loc 1 498 9 is_stmt 1 view .LVU327
 498:quantum/rgblight.c ****         rgblight_config.sat = sat;
 1442               		.loc 1 498 29 is_stmt 0 view .LVU328
 1443 005a 1093 0000 		sts rgblight_config+1,r17
 499:quantum/rgblight.c ****         rgblight_config.val = val;
 1444               		.loc 1 499 9 is_stmt 1 view .LVU329
 499:quantum/rgblight.c ****         rgblight_config.val = val;
 1445               		.loc 1 499 29 is_stmt 0 view .LVU330
 1446 005e F092 0000 		sts rgblight_config+2,r15
 500:quantum/rgblight.c ****         if (write_to_eeprom) {
 1447               		.loc 1 500 9 is_stmt 1 view .LVU331
 500:quantum/rgblight.c ****         if (write_to_eeprom) {
 1448               		.loc 1 500 29 is_stmt 0 view .LVU332
 1449 0062 0093 0000 		sts rgblight_config+3,r16
 501:quantum/rgblight.c ****             eeconfig_update_rgblight(rgblight_config.raw);
 1450               		.loc 1 501 9 is_stmt 1 view .LVU333
 501:quantum/rgblight.c ****             eeconfig_update_rgblight(rgblight_config.raw);
 1451               		.loc 1 501 12 is_stmt 0 view .LVU334
 1452 0066 EE20      		tst r14
 1453 0068 01F0      		breq .L68
 502:quantum/rgblight.c ****             dprintf("rgblight set hsv [EEPROM]: %u,%u,%u\n", rgblight_config.hue, rgblight_config.s
 1454               		.loc 1 502 13 is_stmt 1 view .LVU335
 1455 006a 6091 0000 		lds r22,rgblight_config
 1456 006e 7091 0000 		lds r23,rgblight_config+1
 1457 0072 8091 0000 		lds r24,rgblight_config+2
 1458 0076 9091 0000 		lds r25,rgblight_config+3
 1459 007a 0E94 0000 		call eeconfig_update_rgblight
 1460               	.LVL80:
 503:quantum/rgblight.c ****         } else {
 1461               		.loc 1 503 124 view .LVU336
 505:quantum/rgblight.c ****         }
 1462               		.loc 1 505 126 view .LVU337
 1463               	.L68:
 1464               	/* epilogue start */
 508:quantum/rgblight.c **** 
 1465               		.loc 1 508 1 is_stmt 0 view .LVU338
 1466 007e 0F90      		pop __tmp_reg__
 1467 0080 0F90      		pop __tmp_reg__
 1468 0082 0F90      		pop __tmp_reg__
 1469 0084 DF91      		pop r29
 1470 0086 CF91      		pop r28
 1471 0088 1F91      		pop r17
 1472               	.LVL81:
 508:quantum/rgblight.c **** 
 1473               		.loc 1 508 1 view .LVU339
 1474 008a 0F91      		pop r16
 1475               	.LVL82:
 508:quantum/rgblight.c **** 
 1476               		.loc 1 508 1 view .LVU340
 1477 008c FF90      		pop r15
 1478               	.LVL83:
 508:quantum/rgblight.c **** 
 1479               		.loc 1 508 1 view .LVU341
 1480 008e EF90      		pop r14
 1481               	.LVL84:
 508:quantum/rgblight.c **** 
 1482               		.loc 1 508 1 view .LVU342
 1483 0090 DF90      		pop r13
 1484 0092 CF90      		pop r12
 1485 0094 BF90      		pop r11
 1486 0096 AF90      		pop r10
 1487 0098 0895      		ret
 1488               	.LVL85:
 1489               	.L71:
 448:quantum/rgblight.c ****             }
 1490               		.loc 1 448 13 is_stmt 1 view .LVU343
 451:quantum/rgblight.c ****                 // breathing mode, ignore the change of val, use in memory value instead
 1491               		.loc 1 451 18 view .LVU344
 451:quantum/rgblight.c ****                 // breathing mode, ignore the change of val, use in memory value instead
 1492               		.loc 1 451 21 is_stmt 0 view .LVU345
 1493 009a 8230      		cpi r24,lo8(2)
 1494 009c 01F4      		brne .L73
 453:quantum/rgblight.c ****             }
 1495               		.loc 1 453 17 is_stmt 1 view .LVU346
 453:quantum/rgblight.c ****             }
 1496               		.loc 1 453 21 is_stmt 0 view .LVU347
 1497 009e 0091 0000 		lds r16,rgblight_config+3
 1498               	.LVL86:
 453:quantum/rgblight.c ****             }
 1499               		.loc 1 453 21 view .LVU348
 1500 00a2 00C0      		rjmp .L72
 1501               	.L73:
 457:quantum/rgblight.c ****                 // rainbow mood, ignore the change of hue
 1502               		.loc 1 457 18 is_stmt 1 view .LVU349
 457:quantum/rgblight.c ****                 // rainbow mood, ignore the change of hue
 1503               		.loc 1 457 21 is_stmt 0 view .LVU350
 1504 00a4 8630      		cpi r24,lo8(6)
 1505 00a6 01F4      		brne .L74
 1506               	.L75:
 459:quantum/rgblight.c ****             }
 1507               		.loc 1 459 17 is_stmt 1 view .LVU351
 459:quantum/rgblight.c ****             }
 1508               		.loc 1 459 21 is_stmt 0 view .LVU352
 1509 00a8 1091 0000 		lds r17,rgblight_config+1
 1510               	.LVL87:
 459:quantum/rgblight.c ****             }
 1511               		.loc 1 459 21 view .LVU353
 1512 00ac 00C0      		rjmp .L72
 1513               	.L74:
 463:quantum/rgblight.c ****                 // rainbow swirl, ignore the change of hue
 1514               		.loc 1 463 18 is_stmt 1 view .LVU354
 463:quantum/rgblight.c ****                 // rainbow swirl, ignore the change of hue
 1515               		.loc 1 463 21 is_stmt 0 view .LVU355
 1516 00ae 8930      		cpi r24,lo8(9)
 1517 00b0 01F0      		breq .L75
 469:quantum/rgblight.c ****                 // static gradient
 1518               		.loc 1 469 18 is_stmt 1 view .LVU356
 469:quantum/rgblight.c ****                 // static gradient
 1519               		.loc 1 469 21 is_stmt 0 view .LVU357
 1520 00b2 8931      		cpi r24,lo8(25)
 1521 00b4 01F4      		brne .L72
 1522               	.LBB50:
 471:quantum/rgblight.c ****                 bool    direction = (delta % 2) == 0;
 1523               		.loc 1 471 17 is_stmt 1 view .LVU358
 471:quantum/rgblight.c ****                 bool    direction = (delta % 2) == 0;
 1524               		.loc 1 471 25 is_stmt 0 view .LVU359
 1525 00b6 E951      		subi r30,lo8(-(-25))
 1526               	.LVL88:
 472:quantum/rgblight.c **** #    ifdef __AVR__
 1527               		.loc 1 472 17 is_stmt 1 view .LVU360
 472:quantum/rgblight.c **** #    ifdef __AVR__
 1528               		.loc 1 472 49 is_stmt 0 view .LVU361
 1529 00b8 8E2F      		mov r24,r30
 1530 00ba 8170      		andi r24,lo8(1)
 1531 00bc D82E      		mov r13,r24
 1532               	.LVL89:
 475:quantum/rgblight.c **** #    else
 1533               		.loc 1 475 17 is_stmt 1 view .LVU362
 1534               	.LBB51:
 475:quantum/rgblight.c **** #    else
 1535               		.loc 1 475 33 view .LVU363
 1536 00be E695      		lsr r30
 1537               	.LVL90:
 475:quantum/rgblight.c **** #    else
 1538               		.loc 1 475 33 is_stmt 0 view .LVU364
 1539 00c0 F0E0      		ldi r31,0
 1540 00c2 E050      		subi r30,lo8(-(RGBLED_GRADIENT_RANGES))
 1541 00c4 F040      		sbci r31,hi8(-(RGBLED_GRADIENT_RANGES))
 1542               	.LVL91:
 475:quantum/rgblight.c **** #    else
 1543               		.loc 1 475 33 is_stmt 1 view .LVU365
 475:quantum/rgblight.c **** #    else
 1544               		.loc 1 475 33 view .LVU366
 1545               	/* #APP */
 1546               	 ;  475 "quantum/rgblight.c" 1
 1547 00c6 A590      		lpm r10, Z+
 1548 00c8 B490      		lpm r11, Z
 1549               		
 1550               	 ;  0 "" 2
 1551               	.LVL92:
 475:quantum/rgblight.c **** #    else
 1552               		.loc 1 475 33 view .LVU367
 475:quantum/rgblight.c **** #    else
 1553               		.loc 1 475 33 is_stmt 0 view .LVU368
 1554               	/* #NOAPP */
 1555               	.LBE51:
 479:quantum/rgblight.c ****                     uint8_t _hue = ((uint16_t)i * (uint16_t)range) / rgblight_ranges.effect_num_led
 1556               		.loc 1 479 17 is_stmt 1 view .LVU369
 1557               	.LBB52:
 479:quantum/rgblight.c ****                     uint8_t _hue = ((uint16_t)i * (uint16_t)range) / rgblight_ranges.effect_num_led
 1558               		.loc 1 479 22 view .LVU370
 479:quantum/rgblight.c ****                     uint8_t _hue = ((uint16_t)i * (uint16_t)range) / rgblight_ranges.effect_num_led
 1559               		.loc 1 479 30 is_stmt 0 view .LVU371
 1560 00ca C12C      		mov r12,__zero_reg__
 1561               	.LBB53:
 480:quantum/rgblight.c ****                     if (direction) {
 1562               		.loc 1 480 49 view .LVU372
 1563 00cc BB24      		clr r11
 1564               	.LVL93:
 1565               	.L76:
 480:quantum/rgblight.c ****                     if (direction) {
 1566               		.loc 1 480 49 view .LVU373
 1567               	.LBE53:
 479:quantum/rgblight.c ****                     uint8_t _hue = ((uint16_t)i * (uint16_t)range) / rgblight_ranges.effect_num_led
 1568               		.loc 1 479 37 is_stmt 1 discriminator 1 view .LVU374
 479:quantum/rgblight.c ****                     uint8_t _hue = ((uint16_t)i * (uint16_t)range) / rgblight_ranges.effect_num_led
 1569               		.loc 1 479 56 is_stmt 0 discriminator 1 view .LVU375
 1570 00ce 6091 0000 		lds r22,rgblight_ranges+4
 479:quantum/rgblight.c ****                     uint8_t _hue = ((uint16_t)i * (uint16_t)range) / rgblight_ranges.effect_num_led
 1571               		.loc 1 479 17 discriminator 1 view .LVU376
 1572 00d2 C616      		cp r12,r22
 1573 00d4 00F0      		brlo .L79
 1574               	.LBE52:
 489:quantum/rgblight.c ****             }
 1575               		.loc 1 489 17 is_stmt 1 view .LVU377
 1576 00d6 0E94 0000 		call rgblight_set
 1577               	.LVL94:
 1578 00da 00C0      		rjmp .L72
 1579               	.L79:
 1580               	.LBB60:
 1581               	.LBB58:
 480:quantum/rgblight.c ****                     if (direction) {
 1582               		.loc 1 480 21 view .LVU378
 480:quantum/rgblight.c ****                     if (direction) {
 1583               		.loc 1 480 37 is_stmt 0 view .LVU379
 1584 00dc 2C2D      		mov r18,r12
 1585 00de 30E0      		ldi r19,0
 480:quantum/rgblight.c ****                     if (direction) {
 1586               		.loc 1 480 49 view .LVU380
 1587 00e0 A29E      		mul r10,r18
 1588 00e2 C001      		movw r24,r0
 1589 00e4 A39E      		mul r10,r19
 1590 00e6 900D      		add r25,r0
 1591 00e8 B29E      		mul r11,r18
 1592 00ea 900D      		add r25,r0
 1593 00ec 1124      		clr r1
 480:quantum/rgblight.c ****                     if (direction) {
 1594               		.loc 1 480 85 view .LVU381
 1595 00ee 70E0      		ldi r23,0
 480:quantum/rgblight.c ****                     if (direction) {
 1596               		.loc 1 480 68 view .LVU382
 1597 00f0 0E94 0000 		call __udivmodhi4
 1598               	.LVL95:
 481:quantum/rgblight.c ****                         _hue = hue + _hue;
 1599               		.loc 1 481 21 is_stmt 1 view .LVU383
 482:quantum/rgblight.c ****                     } else {
 1600               		.loc 1 482 30 is_stmt 0 view .LVU384
 1601 00f4 812F      		mov r24,r17
 481:quantum/rgblight.c ****                         _hue = hue + _hue;
 1602               		.loc 1 481 24 view .LVU385
 1603 00f6 D110      		cpse r13,__zero_reg__
 1604 00f8 00C0      		rjmp .L77
 482:quantum/rgblight.c ****                     } else {
 1605               		.loc 1 482 25 is_stmt 1 view .LVU386
 482:quantum/rgblight.c ****                     } else {
 1606               		.loc 1 482 30 is_stmt 0 view .LVU387
 1607 00fa 860F      		add r24,r22
 1608               	.LVL96:
 1609               	.L78:
 486:quantum/rgblight.c ****                     sethsv(_hue, sat, val, (LED_TYPE *)&led[i + rgblight_ranges.effect_start_pos]);
 1610               		.loc 1 486 98 is_stmt 1 discriminator 2 view .LVU388
 487:quantum/rgblight.c ****                 }
 1611               		.loc 1 487 21 discriminator 2 view .LVU389
 1612               	.LBB54:
 1613               	.LBI54:
 132:quantum/rgblight.c **** 
 1614               		.loc 1 132 6 discriminator 2 view .LVU390
 1615               	.LBB55:
 132:quantum/rgblight.c **** 
 1616               		.loc 1 132 70 discriminator 2 view .LVU391
 1617               	.LBE55:
 1618               	.LBE54:
 487:quantum/rgblight.c ****                 }
 1619               		.loc 1 487 80 is_stmt 0 discriminator 2 view .LVU392
 1620 00fc 4091 0000 		lds r20,rgblight_ranges+2
 487:quantum/rgblight.c ****                 }
 1621               		.loc 1 487 63 discriminator 2 view .LVU393
 1622 0100 420F      		add r20,r18
 1623 0102 532F      		mov r21,r19
 1624 0104 511D      		adc r21,__zero_reg__
 487:quantum/rgblight.c ****                 }
 1625               		.loc 1 487 21 discriminator 2 view .LVU394
 1626 0106 9A01      		movw r18,r20
 1627 0108 220F      		lsl r18
 1628 010a 331F      		rol r19
 1629 010c 240F      		add r18,r20
 1630 010e 351F      		adc r19,r21
 1631 0110 2050      		subi r18,lo8(-(led))
 1632 0112 3040      		sbci r19,hi8(-(led))
 1633               	.LBB57:
 1634               	.LBB56:
 132:quantum/rgblight.c **** 
 1635               		.loc 1 132 70 discriminator 2 view .LVU395
 1636 0114 402F      		mov r20,r16
 1637 0116 6F2D      		mov r22,r15
 1638 0118 0E94 0000 		call sethsv_raw
 1639               	.LVL97:
 132:quantum/rgblight.c **** 
 1640               		.loc 1 132 70 discriminator 2 view .LVU396
 1641               	.LBE56:
 1642               	.LBE57:
 1643               	.LBE58:
 479:quantum/rgblight.c ****                     uint8_t _hue = ((uint16_t)i * (uint16_t)range) / rgblight_ranges.effect_num_led
 1644               		.loc 1 479 74 is_stmt 1 discriminator 2 view .LVU397
 479:quantum/rgblight.c ****                     uint8_t _hue = ((uint16_t)i * (uint16_t)range) / rgblight_ranges.effect_num_led
 1645               		.loc 1 479 75 is_stmt 0 discriminator 2 view .LVU398
 1646 011c C394      		inc r12
 1647               	.LVL98:
 479:quantum/rgblight.c ****                     uint8_t _hue = ((uint16_t)i * (uint16_t)range) / rgblight_ranges.effect_num_led
 1648               		.loc 1 479 75 discriminator 2 view .LVU399
 1649 011e 00C0      		rjmp .L76
 1650               	.LVL99:
 1651               	.L77:
 1652               	.LBB59:
 484:quantum/rgblight.c ****                     }
 1653               		.loc 1 484 25 is_stmt 1 view .LVU400
 484:quantum/rgblight.c ****                     }
 1654               		.loc 1 484 30 is_stmt 0 view .LVU401
 1655 0120 861B      		sub r24,r22
 1656               	.LVL100:
 484:quantum/rgblight.c ****                     }
 1657               		.loc 1 484 30 view .LVU402
 1658 0122 00C0      		rjmp .L78
 1659               	.LBE59:
 1660               	.LBE60:
 1661               	.LBE50:
 1662               		.cfi_endproc
 1663               	.LFE142:
 1665               		.section	.text.rgblight_increase_hue_helper,"ax",@progbits
 1666               	.global	rgblight_increase_hue_helper
 1668               	rgblight_increase_hue_helper:
 1669               	.LVL101:
 1670               	.LFB117:
 373:quantum/rgblight.c ****     uint8_t hue = rgblight_config.hue + RGBLIGHT_HUE_STEP;
 1671               		.loc 1 373 57 is_stmt 1 view -0
 1672               		.cfi_startproc
 1673               	/* prologue: function */
 1674               	/* frame size = 0 */
 1675               	/* stack size = 0 */
 1676               	.L__stack_usage = 0
 374:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(hue, rgblight_config.sat, rgblight_config.val, write_to_eeprom);
 1677               		.loc 1 374 5 view .LVU404
 375:quantum/rgblight.c **** }
 1678               		.loc 1 375 5 view .LVU405
 1679 0000 E0E0      		ldi r30,lo8(rgblight_config)
 1680 0002 F0E0      		ldi r31,hi8(rgblight_config)
 374:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(hue, rgblight_config.sat, rgblight_config.val, write_to_eeprom);
 1681               		.loc 1 374 13 is_stmt 0 view .LVU406
 1682 0004 9181      		ldd r25,Z+1
 375:quantum/rgblight.c **** }
 1683               		.loc 1 375 5 view .LVU407
 1684 0006 282F      		mov r18,r24
 1685 0008 4381      		ldd r20,Z+3
 1686 000a 6281      		ldd r22,Z+2
 1687 000c 8CE0      		ldi r24,lo8(12)
 1688               	.LVL102:
 375:quantum/rgblight.c **** }
 1689               		.loc 1 375 5 view .LVU408
 1690 000e 890F      		add r24,r25
 1691               	.LVL103:
 375:quantum/rgblight.c **** }
 1692               		.loc 1 375 5 view .LVU409
 1693 0010 0C94 0000 		jmp rgblight_sethsv_eeprom_helper
 1694               	.LVL104:
 375:quantum/rgblight.c **** }
 1695               		.loc 1 375 5 view .LVU410
 1696               		.cfi_endproc
 1697               	.LFE117:
 1699               		.section	.text.rgblight_increase_hue_noeeprom,"ax",@progbits
 1700               	.global	rgblight_increase_hue_noeeprom
 1702               	rgblight_increase_hue_noeeprom:
 1703               	.LFB118:
 377:quantum/rgblight.c **** void rgblight_increase_hue(void) { rgblight_increase_hue_helper(true); }
 1704               		.loc 1 377 43 is_stmt 1 view -0
 1705               		.cfi_startproc
 1706               	/* prologue: function */
 1707               	/* frame size = 0 */
 1708               	/* stack size = 0 */
 1709               	.L__stack_usage = 0
 377:quantum/rgblight.c **** void rgblight_increase_hue(void) { rgblight_increase_hue_helper(true); }
 1710               		.loc 1 377 45 view .LVU412
 1711 0000 80E0      		ldi r24,0
 1712 0002 0C94 0000 		jmp rgblight_increase_hue_helper
 1713               	.LVL105:
 1714               		.cfi_endproc
 1715               	.LFE118:
 1717               		.section	.text.rgblight_increase_hue,"ax",@progbits
 1718               	.global	rgblight_increase_hue
 1720               	rgblight_increase_hue:
 1721               	.LFB119:
 378:quantum/rgblight.c **** void rgblight_decrease_hue_helper(bool write_to_eeprom) {
 1722               		.loc 1 378 34 view -0
 1723               		.cfi_startproc
 1724               	/* prologue: function */
 1725               	/* frame size = 0 */
 1726               	/* stack size = 0 */
 1727               	.L__stack_usage = 0
 378:quantum/rgblight.c **** void rgblight_decrease_hue_helper(bool write_to_eeprom) {
 1728               		.loc 1 378 36 view .LVU414
 1729 0000 81E0      		ldi r24,lo8(1)
 1730 0002 0C94 0000 		jmp rgblight_increase_hue_helper
 1731               	.LVL106:
 1732               		.cfi_endproc
 1733               	.LFE119:
 1735               		.section	.text.rgblight_decrease_hue_helper,"ax",@progbits
 1736               	.global	rgblight_decrease_hue_helper
 1738               	rgblight_decrease_hue_helper:
 1739               	.LVL107:
 1740               	.LFB120:
 379:quantum/rgblight.c ****     uint8_t hue = rgblight_config.hue - RGBLIGHT_HUE_STEP;
 1741               		.loc 1 379 57 view -0
 1742               		.cfi_startproc
 1743               	/* prologue: function */
 1744               	/* frame size = 0 */
 1745               	/* stack size = 0 */
 1746               	.L__stack_usage = 0
 380:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(hue, rgblight_config.sat, rgblight_config.val, write_to_eeprom);
 1747               		.loc 1 380 5 view .LVU416
 381:quantum/rgblight.c **** }
 1748               		.loc 1 381 5 view .LVU417
 1749 0000 E0E0      		ldi r30,lo8(rgblight_config)
 1750 0002 F0E0      		ldi r31,hi8(rgblight_config)
 380:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(hue, rgblight_config.sat, rgblight_config.val, write_to_eeprom);
 1751               		.loc 1 380 13 is_stmt 0 view .LVU418
 1752 0004 9181      		ldd r25,Z+1
 381:quantum/rgblight.c **** }
 1753               		.loc 1 381 5 view .LVU419
 1754 0006 282F      		mov r18,r24
 1755 0008 4381      		ldd r20,Z+3
 1756 000a 6281      		ldd r22,Z+2
 1757 000c 84EF      		ldi r24,lo8(-12)
 1758               	.LVL108:
 381:quantum/rgblight.c **** }
 1759               		.loc 1 381 5 view .LVU420
 1760 000e 890F      		add r24,r25
 1761               	.LVL109:
 381:quantum/rgblight.c **** }
 1762               		.loc 1 381 5 view .LVU421
 1763 0010 0C94 0000 		jmp rgblight_sethsv_eeprom_helper
 1764               	.LVL110:
 381:quantum/rgblight.c **** }
 1765               		.loc 1 381 5 view .LVU422
 1766               		.cfi_endproc
 1767               	.LFE120:
 1769               		.section	.text.rgblight_decrease_hue_noeeprom,"ax",@progbits
 1770               	.global	rgblight_decrease_hue_noeeprom
 1772               	rgblight_decrease_hue_noeeprom:
 1773               	.LFB121:
 383:quantum/rgblight.c **** void rgblight_decrease_hue(void) { rgblight_decrease_hue_helper(true); }
 1774               		.loc 1 383 43 is_stmt 1 view -0
 1775               		.cfi_startproc
 1776               	/* prologue: function */
 1777               	/* frame size = 0 */
 1778               	/* stack size = 0 */
 1779               	.L__stack_usage = 0
 383:quantum/rgblight.c **** void rgblight_decrease_hue(void) { rgblight_decrease_hue_helper(true); }
 1780               		.loc 1 383 45 view .LVU424
 1781 0000 80E0      		ldi r24,0
 1782 0002 0C94 0000 		jmp rgblight_decrease_hue_helper
 1783               	.LVL111:
 1784               		.cfi_endproc
 1785               	.LFE121:
 1787               		.section	.text.rgblight_decrease_hue,"ax",@progbits
 1788               	.global	rgblight_decrease_hue
 1790               	rgblight_decrease_hue:
 1791               	.LFB122:
 384:quantum/rgblight.c **** void rgblight_increase_sat_helper(bool write_to_eeprom) {
 1792               		.loc 1 384 34 view -0
 1793               		.cfi_startproc
 1794               	/* prologue: function */
 1795               	/* frame size = 0 */
 1796               	/* stack size = 0 */
 1797               	.L__stack_usage = 0
 384:quantum/rgblight.c **** void rgblight_increase_sat_helper(bool write_to_eeprom) {
 1798               		.loc 1 384 36 view .LVU426
 1799 0000 81E0      		ldi r24,lo8(1)
 1800 0002 0C94 0000 		jmp rgblight_decrease_hue_helper
 1801               	.LVL112:
 1802               		.cfi_endproc
 1803               	.LFE122:
 1805               		.section	.text.rgblight_increase_sat_helper,"ax",@progbits
 1806               	.global	rgblight_increase_sat_helper
 1808               	rgblight_increase_sat_helper:
 1809               	.LVL113:
 1810               	.LFB123:
 385:quantum/rgblight.c ****     uint8_t sat = qadd8(rgblight_config.sat, RGBLIGHT_SAT_STEP);
 1811               		.loc 1 385 57 view -0
 1812               		.cfi_startproc
 1813               	/* prologue: function */
 1814               	/* frame size = 0 */
 1815               	/* stack size = 0 */
 1816               	.L__stack_usage = 0
 386:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(rgblight_config.hue, sat, rgblight_config.val, write_to_eeprom);
 1817               		.loc 1 386 5 view .LVU428
 1818               	.LBB61:
 1819               	.LBI61:
 1820               		.file 2 "./lib/lib8tion/math8.h"
   1:./lib/lib8tion/math8.h **** #ifndef __INC_LIB8TION_MATH_H
   2:./lib/lib8tion/math8.h **** #define __INC_LIB8TION_MATH_H
   3:./lib/lib8tion/math8.h **** 
   4:./lib/lib8tion/math8.h **** #include "scale8.h"
   5:./lib/lib8tion/math8.h **** 
   6:./lib/lib8tion/math8.h **** ///@ingroup lib8tion
   7:./lib/lib8tion/math8.h **** 
   8:./lib/lib8tion/math8.h **** ///@defgroup Math Basic math operations
   9:./lib/lib8tion/math8.h **** /// Fast, efficient 8-bit math functions specifically
  10:./lib/lib8tion/math8.h **** /// designed for high-performance LED programming.
  11:./lib/lib8tion/math8.h **** ///
  12:./lib/lib8tion/math8.h **** /// Because of the AVR(Arduino) and ARM assembly language
  13:./lib/lib8tion/math8.h **** /// implementations provided, using these functions often
  14:./lib/lib8tion/math8.h **** /// results in smaller and faster code than the equivalent
  15:./lib/lib8tion/math8.h **** /// program using plain "C" arithmetic and logic.
  16:./lib/lib8tion/math8.h **** ///@{
  17:./lib/lib8tion/math8.h **** 
  18:./lib/lib8tion/math8.h **** 
  19:./lib/lib8tion/math8.h **** /// add one byte to another, saturating at 0xFF
  20:./lib/lib8tion/math8.h **** /// @param i - first byte to add
  21:./lib/lib8tion/math8.h **** /// @param j - second byte to add
  22:./lib/lib8tion/math8.h **** /// @returns the sum of i & j, capped at 0xFF
  23:./lib/lib8tion/math8.h **** LIB8STATIC_ALWAYS_INLINE uint8_t qadd8( uint8_t i, uint8_t j)
 1821               		.loc 2 23 34 view .LVU429
 1822               	.LBB62:
  24:./lib/lib8tion/math8.h **** {
  25:./lib/lib8tion/math8.h **** #if QADD8_C == 1
  26:./lib/lib8tion/math8.h ****     uint16_t t = i + j;
  27:./lib/lib8tion/math8.h ****     if (t > 255) t = 255;
  28:./lib/lib8tion/math8.h ****     return t;
  29:./lib/lib8tion/math8.h **** #elif QADD8_AVRASM == 1
  30:./lib/lib8tion/math8.h ****     asm volatile(
 1823               		.loc 2 30 5 view .LVU430
 1824               	.LBE62:
 1825               	.LBE61:
 386:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(rgblight_config.hue, sat, rgblight_config.val, write_to_eeprom);
 1826               		.loc 1 386 19 is_stmt 0 view .LVU431
 1827 0000 E0E0      		ldi r30,lo8(rgblight_config)
 1828 0002 F0E0      		ldi r31,hi8(rgblight_config)
 1829               	.LBB64:
 1830               	.LBB63:
 1831               		.loc 2 30 5 view .LVU432
 1832 0004 6281      		ldd r22,Z+2
 1833 0006 2FEF      		ldi r18,lo8(-1)
 1834               	/* #APP */
 1835               	 ;  30 "./lib/lib8tion/math8.h" 1
 1836 0008 620F      		add r22, r18    
 1837 000a 00F4      		brcc L_1431     
 1838 000c 6FEF      		ldi r22, 0xFF  
 1839               		L_1431: 
 1840               	 ;  0 "" 2
 1841               	.LVL114:
  31:./lib/lib8tion/math8.h ****          /* First, add j to i, conditioning the C flag */
  32:./lib/lib8tion/math8.h ****          "add %0, %1    \n\t"
  33:./lib/lib8tion/math8.h **** 
  34:./lib/lib8tion/math8.h ****          /* Now test the C flag.
  35:./lib/lib8tion/math8.h ****            If C is clear, we branch around a load of 0xFF into i.
  36:./lib/lib8tion/math8.h ****            If C is set, we go ahead and load 0xFF into i.
  37:./lib/lib8tion/math8.h ****          */
  38:./lib/lib8tion/math8.h ****          "brcc L_%=     \n\t"
  39:./lib/lib8tion/math8.h ****          "ldi %0, 0xFF  \n\t"
  40:./lib/lib8tion/math8.h ****          "L_%=: "
  41:./lib/lib8tion/math8.h ****          : "+a" (i)
  42:./lib/lib8tion/math8.h ****          : "a"  (j) );
  43:./lib/lib8tion/math8.h ****     return i;
 1842               		.loc 2 43 5 is_stmt 1 view .LVU433
 1843               		.loc 2 43 5 is_stmt 0 view .LVU434
 1844               	/* #NOAPP */
 1845               	.LBE63:
 1846               	.LBE64:
 387:quantum/rgblight.c **** }
 1847               		.loc 1 387 5 is_stmt 1 view .LVU435
 1848 000e 282F      		mov r18,r24
 1849 0010 4381      		ldd r20,Z+3
 1850 0012 8181      		ldd r24,Z+1
 1851               	.LVL115:
 387:quantum/rgblight.c **** }
 1852               		.loc 1 387 5 is_stmt 0 view .LVU436
 1853 0014 0C94 0000 		jmp rgblight_sethsv_eeprom_helper
 1854               	.LVL116:
 387:quantum/rgblight.c **** }
 1855               		.loc 1 387 5 view .LVU437
 1856               		.cfi_endproc
 1857               	.LFE123:
 1859               		.section	.text.rgblight_increase_sat_noeeprom,"ax",@progbits
 1860               	.global	rgblight_increase_sat_noeeprom
 1862               	rgblight_increase_sat_noeeprom:
 1863               	.LFB124:
 389:quantum/rgblight.c **** void rgblight_increase_sat(void) { rgblight_increase_sat_helper(true); }
 1864               		.loc 1 389 43 is_stmt 1 view -0
 1865               		.cfi_startproc
 1866               	/* prologue: function */
 1867               	/* frame size = 0 */
 1868               	/* stack size = 0 */
 1869               	.L__stack_usage = 0
 389:quantum/rgblight.c **** void rgblight_increase_sat(void) { rgblight_increase_sat_helper(true); }
 1870               		.loc 1 389 45 view .LVU439
 1871 0000 80E0      		ldi r24,0
 1872 0002 0C94 0000 		jmp rgblight_increase_sat_helper
 1873               	.LVL117:
 1874               		.cfi_endproc
 1875               	.LFE124:
 1877               		.section	.text.rgblight_increase_sat,"ax",@progbits
 1878               	.global	rgblight_increase_sat
 1880               	rgblight_increase_sat:
 1881               	.LFB125:
 390:quantum/rgblight.c **** void rgblight_decrease_sat_helper(bool write_to_eeprom) {
 1882               		.loc 1 390 34 view -0
 1883               		.cfi_startproc
 1884               	/* prologue: function */
 1885               	/* frame size = 0 */
 1886               	/* stack size = 0 */
 1887               	.L__stack_usage = 0
 390:quantum/rgblight.c **** void rgblight_decrease_sat_helper(bool write_to_eeprom) {
 1888               		.loc 1 390 36 view .LVU441
 1889 0000 81E0      		ldi r24,lo8(1)
 1890 0002 0C94 0000 		jmp rgblight_increase_sat_helper
 1891               	.LVL118:
 1892               		.cfi_endproc
 1893               	.LFE125:
 1895               		.section	.text.rgblight_decrease_sat_helper,"ax",@progbits
 1896               	.global	rgblight_decrease_sat_helper
 1898               	rgblight_decrease_sat_helper:
 1899               	.LVL119:
 1900               	.LFB126:
 391:quantum/rgblight.c ****     uint8_t sat = qsub8(rgblight_config.sat, RGBLIGHT_SAT_STEP);
 1901               		.loc 1 391 57 view -0
 1902               		.cfi_startproc
 1903               	/* prologue: function */
 1904               	/* frame size = 0 */
 1905               	/* stack size = 0 */
 1906               	.L__stack_usage = 0
 392:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(rgblight_config.hue, sat, rgblight_config.val, write_to_eeprom);
 1907               		.loc 1 392 5 view .LVU443
 1908               	.LBB65:
 1909               	.LBI65:
  44:./lib/lib8tion/math8.h **** #elif QADD8_ARM_DSP_ASM == 1
  45:./lib/lib8tion/math8.h ****     asm volatile( "uqadd8 %0, %0, %1" : "+r" (i) : "r" (j));
  46:./lib/lib8tion/math8.h ****     return i;
  47:./lib/lib8tion/math8.h **** #else
  48:./lib/lib8tion/math8.h **** #error "No implementation for qadd8 available."
  49:./lib/lib8tion/math8.h **** #endif
  50:./lib/lib8tion/math8.h **** }
  51:./lib/lib8tion/math8.h **** 
  52:./lib/lib8tion/math8.h **** /// Add one byte to another, saturating at 0x7F
  53:./lib/lib8tion/math8.h **** /// @param i - first byte to add
  54:./lib/lib8tion/math8.h **** /// @param j - second byte to add
  55:./lib/lib8tion/math8.h **** /// @returns the sum of i & j, capped at 0xFF
  56:./lib/lib8tion/math8.h **** LIB8STATIC_ALWAYS_INLINE int8_t qadd7( int8_t i, int8_t j)
  57:./lib/lib8tion/math8.h **** {
  58:./lib/lib8tion/math8.h **** #if QADD7_C == 1
  59:./lib/lib8tion/math8.h ****     int16_t t = i + j;
  60:./lib/lib8tion/math8.h ****     if (t > 127) t = 127;
  61:./lib/lib8tion/math8.h ****     return t;
  62:./lib/lib8tion/math8.h **** #elif QADD7_AVRASM == 1
  63:./lib/lib8tion/math8.h ****     asm volatile(
  64:./lib/lib8tion/math8.h ****          /* First, add j to i, conditioning the V flag */
  65:./lib/lib8tion/math8.h ****          "add %0, %1    \n\t"
  66:./lib/lib8tion/math8.h **** 
  67:./lib/lib8tion/math8.h ****          /* Now test the V flag.
  68:./lib/lib8tion/math8.h ****           If V is clear, we branch around a load of 0x7F into i.
  69:./lib/lib8tion/math8.h ****           If V is set, we go ahead and load 0x7F into i.
  70:./lib/lib8tion/math8.h ****           */
  71:./lib/lib8tion/math8.h ****          "brvc L_%=     \n\t"
  72:./lib/lib8tion/math8.h ****          "ldi %0, 0x7F  \n\t"
  73:./lib/lib8tion/math8.h ****          "L_%=: "
  74:./lib/lib8tion/math8.h ****          : "+a" (i)
  75:./lib/lib8tion/math8.h ****          : "a"  (j) );
  76:./lib/lib8tion/math8.h **** 
  77:./lib/lib8tion/math8.h ****     return i;
  78:./lib/lib8tion/math8.h **** #elif QADD7_ARM_DSP_ASM == 1
  79:./lib/lib8tion/math8.h ****     asm volatile( "qadd8 %0, %0, %1" : "+r" (i) : "r" (j));
  80:./lib/lib8tion/math8.h ****     return i;
  81:./lib/lib8tion/math8.h **** #else
  82:./lib/lib8tion/math8.h **** #error "No implementation for qadd7 available."
  83:./lib/lib8tion/math8.h **** #endif
  84:./lib/lib8tion/math8.h **** }
  85:./lib/lib8tion/math8.h **** 
  86:./lib/lib8tion/math8.h **** /// subtract one byte from another, saturating at 0x00
  87:./lib/lib8tion/math8.h **** /// @returns i - j with a floor of 0
  88:./lib/lib8tion/math8.h **** LIB8STATIC_ALWAYS_INLINE uint8_t qsub8( uint8_t i, uint8_t j)
 1910               		.loc 2 88 34 view .LVU444
 1911               	.LBB66:
  89:./lib/lib8tion/math8.h **** {
  90:./lib/lib8tion/math8.h **** #if QSUB8_C == 1
  91:./lib/lib8tion/math8.h ****     int16_t t = i - j;
  92:./lib/lib8tion/math8.h ****     if (t < 0) t = 0;
  93:./lib/lib8tion/math8.h ****     return t;
  94:./lib/lib8tion/math8.h **** #elif QSUB8_AVRASM == 1
  95:./lib/lib8tion/math8.h **** 
  96:./lib/lib8tion/math8.h ****     asm volatile(
 1912               		.loc 2 96 5 view .LVU445
 1913               	.LBE66:
 1914               	.LBE65:
 392:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(rgblight_config.hue, sat, rgblight_config.val, write_to_eeprom);
 1915               		.loc 1 392 19 is_stmt 0 view .LVU446
 1916 0000 E0E0      		ldi r30,lo8(rgblight_config)
 1917 0002 F0E0      		ldi r31,hi8(rgblight_config)
 1918               	.LBB68:
 1919               	.LBB67:
 1920               		.loc 2 96 5 view .LVU447
 1921 0004 6281      		ldd r22,Z+2
 1922 0006 2FEF      		ldi r18,lo8(-1)
 1923               	/* #APP */
 1924               	 ;  96 "./lib/lib8tion/math8.h" 1
 1925 0008 621B      		sub r22, r18    
 1926 000a 00F4      		brcc L_1487     
 1927 000c 60E0      		ldi r22, 0x00  
 1928               		L_1487: 
 1929               	 ;  0 "" 2
 1930               	.LVL120:
  97:./lib/lib8tion/math8.h ****          /* First, subtract j from i, conditioning the C flag */
  98:./lib/lib8tion/math8.h ****          "sub %0, %1    \n\t"
  99:./lib/lib8tion/math8.h **** 
 100:./lib/lib8tion/math8.h ****          /* Now test the C flag.
 101:./lib/lib8tion/math8.h ****           If C is clear, we branch around a load of 0x00 into i.
 102:./lib/lib8tion/math8.h ****           If C is set, we go ahead and load 0x00 into i.
 103:./lib/lib8tion/math8.h ****           */
 104:./lib/lib8tion/math8.h ****          "brcc L_%=     \n\t"
 105:./lib/lib8tion/math8.h ****          "ldi %0, 0x00  \n\t"
 106:./lib/lib8tion/math8.h ****          "L_%=: "
 107:./lib/lib8tion/math8.h ****          : "+a" (i)
 108:./lib/lib8tion/math8.h ****          : "a"  (j) );
 109:./lib/lib8tion/math8.h **** 
 110:./lib/lib8tion/math8.h ****     return i;
 1931               		.loc 2 110 5 is_stmt 1 view .LVU448
 1932               		.loc 2 110 5 is_stmt 0 view .LVU449
 1933               	/* #NOAPP */
 1934               	.LBE67:
 1935               	.LBE68:
 393:quantum/rgblight.c **** }
 1936               		.loc 1 393 5 is_stmt 1 view .LVU450
 1937 000e 282F      		mov r18,r24
 1938 0010 4381      		ldd r20,Z+3
 1939 0012 8181      		ldd r24,Z+1
 1940               	.LVL121:
 393:quantum/rgblight.c **** }
 1941               		.loc 1 393 5 is_stmt 0 view .LVU451
 1942 0014 0C94 0000 		jmp rgblight_sethsv_eeprom_helper
 1943               	.LVL122:
 393:quantum/rgblight.c **** }
 1944               		.loc 1 393 5 view .LVU452
 1945               		.cfi_endproc
 1946               	.LFE126:
 1948               		.section	.text.rgblight_decrease_sat_noeeprom,"ax",@progbits
 1949               	.global	rgblight_decrease_sat_noeeprom
 1951               	rgblight_decrease_sat_noeeprom:
 1952               	.LFB127:
 395:quantum/rgblight.c **** void rgblight_decrease_sat(void) { rgblight_decrease_sat_helper(true); }
 1953               		.loc 1 395 43 is_stmt 1 view -0
 1954               		.cfi_startproc
 1955               	/* prologue: function */
 1956               	/* frame size = 0 */
 1957               	/* stack size = 0 */
 1958               	.L__stack_usage = 0
 395:quantum/rgblight.c **** void rgblight_decrease_sat(void) { rgblight_decrease_sat_helper(true); }
 1959               		.loc 1 395 45 view .LVU454
 1960 0000 80E0      		ldi r24,0
 1961 0002 0C94 0000 		jmp rgblight_decrease_sat_helper
 1962               	.LVL123:
 1963               		.cfi_endproc
 1964               	.LFE127:
 1966               		.section	.text.rgblight_decrease_sat,"ax",@progbits
 1967               	.global	rgblight_decrease_sat
 1969               	rgblight_decrease_sat:
 1970               	.LFB128:
 396:quantum/rgblight.c **** void rgblight_increase_val_helper(bool write_to_eeprom) {
 1971               		.loc 1 396 34 view -0
 1972               		.cfi_startproc
 1973               	/* prologue: function */
 1974               	/* frame size = 0 */
 1975               	/* stack size = 0 */
 1976               	.L__stack_usage = 0
 396:quantum/rgblight.c **** void rgblight_increase_val_helper(bool write_to_eeprom) {
 1977               		.loc 1 396 36 view .LVU456
 1978 0000 81E0      		ldi r24,lo8(1)
 1979 0002 0C94 0000 		jmp rgblight_decrease_sat_helper
 1980               	.LVL124:
 1981               		.cfi_endproc
 1982               	.LFE128:
 1984               		.section	.text.rgblight_increase_val_helper,"ax",@progbits
 1985               	.global	rgblight_increase_val_helper
 1987               	rgblight_increase_val_helper:
 1988               	.LVL125:
 1989               	.LFB129:
 397:quantum/rgblight.c ****     uint8_t val = qadd8(rgblight_config.val, RGBLIGHT_VAL_STEP);
 1990               		.loc 1 397 57 view -0
 1991               		.cfi_startproc
 1992               	/* prologue: function */
 1993               	/* frame size = 0 */
 1994               	/* stack size = 0 */
 1995               	.L__stack_usage = 0
 398:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(rgblight_config.hue, rgblight_config.sat, val, write_to_eeprom);
 1996               		.loc 1 398 5 view .LVU458
 1997               	.LBB69:
 1998               	.LBI69:
  23:./lib/lib8tion/math8.h **** {
 1999               		.loc 2 23 34 view .LVU459
 2000               	.LBB70:
  30:./lib/lib8tion/math8.h ****          /* First, add j to i, conditioning the C flag */
 2001               		.loc 2 30 5 view .LVU460
 2002               	.LBE70:
 2003               	.LBE69:
 398:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(rgblight_config.hue, rgblight_config.sat, val, write_to_eeprom);
 2004               		.loc 1 398 19 is_stmt 0 view .LVU461
 2005 0000 E0E0      		ldi r30,lo8(rgblight_config)
 2006 0002 F0E0      		ldi r31,hi8(rgblight_config)
 2007               	.LBB72:
 2008               	.LBB71:
  30:./lib/lib8tion/math8.h ****          /* First, add j to i, conditioning the C flag */
 2009               		.loc 2 30 5 view .LVU462
 2010 0004 4381      		ldd r20,Z+3
 2011 0006 2CE0      		ldi r18,lo8(12)
 2012               	/* #APP */
 2013               	 ;  30 "./lib/lib8tion/math8.h" 1
 2014 0008 420F      		add r20, r18    
 2015 000a 00F4      		brcc L_1543     
 2016 000c 4FEF      		ldi r20, 0xFF  
 2017               		L_1543: 
 2018               	 ;  0 "" 2
 2019               	.LVL126:
  43:./lib/lib8tion/math8.h **** #elif QADD8_ARM_DSP_ASM == 1
 2020               		.loc 2 43 5 is_stmt 1 view .LVU463
  43:./lib/lib8tion/math8.h **** #elif QADD8_ARM_DSP_ASM == 1
 2021               		.loc 2 43 5 is_stmt 0 view .LVU464
 2022               	/* #NOAPP */
 2023               	.LBE71:
 2024               	.LBE72:
 399:quantum/rgblight.c **** }
 2025               		.loc 1 399 5 is_stmt 1 view .LVU465
 2026 000e 282F      		mov r18,r24
 2027 0010 6281      		ldd r22,Z+2
 2028 0012 8181      		ldd r24,Z+1
 2029               	.LVL127:
 399:quantum/rgblight.c **** }
 2030               		.loc 1 399 5 is_stmt 0 view .LVU466
 2031 0014 0C94 0000 		jmp rgblight_sethsv_eeprom_helper
 2032               	.LVL128:
 399:quantum/rgblight.c **** }
 2033               		.loc 1 399 5 view .LVU467
 2034               		.cfi_endproc
 2035               	.LFE129:
 2037               		.section	.text.rgblight_increase_val_noeeprom,"ax",@progbits
 2038               	.global	rgblight_increase_val_noeeprom
 2040               	rgblight_increase_val_noeeprom:
 2041               	.LFB130:
 401:quantum/rgblight.c **** void rgblight_increase_val(void) { rgblight_increase_val_helper(true); }
 2042               		.loc 1 401 43 is_stmt 1 view -0
 2043               		.cfi_startproc
 2044               	/* prologue: function */
 2045               	/* frame size = 0 */
 2046               	/* stack size = 0 */
 2047               	.L__stack_usage = 0
 401:quantum/rgblight.c **** void rgblight_increase_val(void) { rgblight_increase_val_helper(true); }
 2048               		.loc 1 401 45 view .LVU469
 2049 0000 80E0      		ldi r24,0
 2050 0002 0C94 0000 		jmp rgblight_increase_val_helper
 2051               	.LVL129:
 2052               		.cfi_endproc
 2053               	.LFE130:
 2055               		.section	.text.rgblight_increase_val,"ax",@progbits
 2056               	.global	rgblight_increase_val
 2058               	rgblight_increase_val:
 2059               	.LFB131:
 402:quantum/rgblight.c **** void rgblight_decrease_val_helper(bool write_to_eeprom) {
 2060               		.loc 1 402 34 view -0
 2061               		.cfi_startproc
 2062               	/* prologue: function */
 2063               	/* frame size = 0 */
 2064               	/* stack size = 0 */
 2065               	.L__stack_usage = 0
 402:quantum/rgblight.c **** void rgblight_decrease_val_helper(bool write_to_eeprom) {
 2066               		.loc 1 402 36 view .LVU471
 2067 0000 81E0      		ldi r24,lo8(1)
 2068 0002 0C94 0000 		jmp rgblight_increase_val_helper
 2069               	.LVL130:
 2070               		.cfi_endproc
 2071               	.LFE131:
 2073               		.section	.text.rgblight_decrease_val_helper,"ax",@progbits
 2074               	.global	rgblight_decrease_val_helper
 2076               	rgblight_decrease_val_helper:
 2077               	.LVL131:
 2078               	.LFB132:
 403:quantum/rgblight.c ****     uint8_t val = qsub8(rgblight_config.val, RGBLIGHT_VAL_STEP);
 2079               		.loc 1 403 57 view -0
 2080               		.cfi_startproc
 2081               	/* prologue: function */
 2082               	/* frame size = 0 */
 2083               	/* stack size = 0 */
 2084               	.L__stack_usage = 0
 404:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(rgblight_config.hue, rgblight_config.sat, val, write_to_eeprom);
 2085               		.loc 1 404 5 view .LVU473
 2086               	.LBB73:
 2087               	.LBI73:
  88:./lib/lib8tion/math8.h **** {
 2088               		.loc 2 88 34 view .LVU474
 2089               	.LBB74:
  96:./lib/lib8tion/math8.h ****          /* First, subtract j from i, conditioning the C flag */
 2090               		.loc 2 96 5 view .LVU475
 2091               	.LBE74:
 2092               	.LBE73:
 404:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(rgblight_config.hue, rgblight_config.sat, val, write_to_eeprom);
 2093               		.loc 1 404 19 is_stmt 0 view .LVU476
 2094 0000 E0E0      		ldi r30,lo8(rgblight_config)
 2095 0002 F0E0      		ldi r31,hi8(rgblight_config)
 2096               	.LBB76:
 2097               	.LBB75:
  96:./lib/lib8tion/math8.h ****          /* First, subtract j from i, conditioning the C flag */
 2098               		.loc 2 96 5 view .LVU477
 2099 0004 4381      		ldd r20,Z+3
 2100 0006 2CE0      		ldi r18,lo8(12)
 2101               	/* #APP */
 2102               	 ;  96 "./lib/lib8tion/math8.h" 1
 2103 0008 421B      		sub r20, r18    
 2104 000a 00F4      		brcc L_1599     
 2105 000c 40E0      		ldi r20, 0x00  
 2106               		L_1599: 
 2107               	 ;  0 "" 2
 2108               	.LVL132:
 2109               		.loc 2 110 5 is_stmt 1 view .LVU478
 2110               		.loc 2 110 5 is_stmt 0 view .LVU479
 2111               	/* #NOAPP */
 2112               	.LBE75:
 2113               	.LBE76:
 405:quantum/rgblight.c **** }
 2114               		.loc 1 405 5 is_stmt 1 view .LVU480
 2115 000e 282F      		mov r18,r24
 2116 0010 6281      		ldd r22,Z+2
 2117 0012 8181      		ldd r24,Z+1
 2118               	.LVL133:
 405:quantum/rgblight.c **** }
 2119               		.loc 1 405 5 is_stmt 0 view .LVU481
 2120 0014 0C94 0000 		jmp rgblight_sethsv_eeprom_helper
 2121               	.LVL134:
 405:quantum/rgblight.c **** }
 2122               		.loc 1 405 5 view .LVU482
 2123               		.cfi_endproc
 2124               	.LFE132:
 2126               		.section	.text.rgblight_decrease_val_noeeprom,"ax",@progbits
 2127               	.global	rgblight_decrease_val_noeeprom
 2129               	rgblight_decrease_val_noeeprom:
 2130               	.LFB133:
 407:quantum/rgblight.c **** void rgblight_decrease_val(void) { rgblight_decrease_val_helper(true); }
 2131               		.loc 1 407 43 is_stmt 1 view -0
 2132               		.cfi_startproc
 2133               	/* prologue: function */
 2134               	/* frame size = 0 */
 2135               	/* stack size = 0 */
 2136               	.L__stack_usage = 0
 407:quantum/rgblight.c **** void rgblight_decrease_val(void) { rgblight_decrease_val_helper(true); }
 2137               		.loc 1 407 45 view .LVU484
 2138 0000 80E0      		ldi r24,0
 2139 0002 0C94 0000 		jmp rgblight_decrease_val_helper
 2140               	.LVL135:
 2141               		.cfi_endproc
 2142               	.LFE133:
 2144               		.section	.text.rgblight_decrease_val,"ax",@progbits
 2145               	.global	rgblight_decrease_val
 2147               	rgblight_decrease_val:
 2148               	.LFB134:
 408:quantum/rgblight.c **** 
 2149               		.loc 1 408 34 view -0
 2150               		.cfi_startproc
 2151               	/* prologue: function */
 2152               	/* frame size = 0 */
 2153               	/* stack size = 0 */
 2154               	.L__stack_usage = 0
 408:quantum/rgblight.c **** 
 2155               		.loc 1 408 36 view .LVU486
 2156 0000 81E0      		ldi r24,lo8(1)
 2157 0002 0C94 0000 		jmp rgblight_decrease_val_helper
 2158               	.LVL136:
 2159               		.cfi_endproc
 2160               	.LFE134:
 2162               		.section	.text.rgblight_sethsv,"ax",@progbits
 2163               	.global	rgblight_sethsv
 2165               	rgblight_sethsv:
 2166               	.LVL137:
 2167               	.LFB143:
 510:quantum/rgblight.c **** 
 2168               		.loc 1 510 61 view -0
 2169               		.cfi_startproc
 2170               	/* prologue: function */
 2171               	/* frame size = 0 */
 2172               	/* stack size = 0 */
 2173               	.L__stack_usage = 0
 510:quantum/rgblight.c **** 
 2174               		.loc 1 510 63 view .LVU488
 2175 0000 21E0      		ldi r18,lo8(1)
 2176 0002 0C94 0000 		jmp rgblight_sethsv_eeprom_helper
 2177               	.LVL138:
 510:quantum/rgblight.c **** 
 2178               		.loc 1 510 63 is_stmt 0 view .LVU489
 2179               		.cfi_endproc
 2180               	.LFE143:
 2182               		.section	.text.rgblight_sethsv_noeeprom,"ax",@progbits
 2183               	.global	rgblight_sethsv_noeeprom
 2185               	rgblight_sethsv_noeeprom:
 2186               	.LVL139:
 2187               	.LFB144:
 512:quantum/rgblight.c **** 
 2188               		.loc 1 512 70 is_stmt 1 view -0
 2189               		.cfi_startproc
 2190               	/* prologue: function */
 2191               	/* frame size = 0 */
 2192               	/* stack size = 0 */
 2193               	.L__stack_usage = 0
 512:quantum/rgblight.c **** 
 2194               		.loc 1 512 72 view .LVU491
 2195 0000 20E0      		ldi r18,0
 2196 0002 0C94 0000 		jmp rgblight_sethsv_eeprom_helper
 2197               	.LVL140:
 512:quantum/rgblight.c **** 
 2198               		.loc 1 512 72 is_stmt 0 view .LVU492
 2199               		.cfi_endproc
 2200               	.LFE144:
 2202               		.section	.text.rgblight_setrgb_at,"ax",@progbits
 2203               	.global	rgblight_setrgb_at
 2205               	rgblight_setrgb_at:
 2206               	.LVL141:
 2207               	.LFB154:
 554:quantum/rgblight.c ****     if (!rgblight_config.enable || index >= RGBLED_NUM) {
 2208               		.loc 1 554 73 is_stmt 1 view -0
 2209               		.cfi_startproc
 2210               	/* prologue: function */
 2211               	/* frame size = 0 */
 2212               	/* stack size = 0 */
 2213               	.L__stack_usage = 0
 555:quantum/rgblight.c ****         return;
 2214               		.loc 1 555 5 view .LVU494
 555:quantum/rgblight.c ****         return;
 2215               		.loc 1 555 25 is_stmt 0 view .LVU495
 2216 0000 9091 0000 		lds r25,rgblight_config
 555:quantum/rgblight.c ****         return;
 2217               		.loc 1 555 8 view .LVU496
 2218 0004 90FF      		sbrs r25,0
 2219 0006 00C0      		rjmp .L107
 555:quantum/rgblight.c ****         return;
 2220               		.loc 1 555 33 discriminator 1 view .LVU497
 2221 0008 2E31      		cpi r18,lo8(30)
 2222 000a 00F4      		brsh .L107
 559:quantum/rgblight.c ****     led[index].g = g;
 2223               		.loc 1 559 5 is_stmt 1 view .LVU498
 559:quantum/rgblight.c ****     led[index].g = g;
 2224               		.loc 1 559 15 is_stmt 0 view .LVU499
 2225 000c 30E0      		ldi r19,0
 559:quantum/rgblight.c ****     led[index].g = g;
 2226               		.loc 1 559 18 view .LVU500
 2227 000e F901      		movw r30,r18
 2228 0010 EE0F      		lsl r30
 2229 0012 FF1F      		rol r31
 2230 0014 E20F      		add r30,r18
 2231 0016 F31F      		adc r31,r19
 2232 0018 E050      		subi r30,lo8(-(led))
 2233 001a F040      		sbci r31,hi8(-(led))
 2234 001c 8183      		std Z+1,r24
 560:quantum/rgblight.c ****     led[index].b = b;
 2235               		.loc 1 560 5 is_stmt 1 view .LVU501
 560:quantum/rgblight.c ****     led[index].b = b;
 2236               		.loc 1 560 18 is_stmt 0 view .LVU502
 2237 001e 6083      		st Z,r22
 561:quantum/rgblight.c **** #ifdef RGBW
 2238               		.loc 1 561 5 is_stmt 1 view .LVU503
 561:quantum/rgblight.c **** #ifdef RGBW
 2239               		.loc 1 561 18 is_stmt 0 view .LVU504
 2240 0020 4283      		std Z+2,r20
 565:quantum/rgblight.c **** }
 2241               		.loc 1 565 5 is_stmt 1 view .LVU505
 2242 0022 0C94 0000 		jmp rgblight_set
 2243               	.LVL142:
 2244               	.L107:
 2245               	/* epilogue start */
 566:quantum/rgblight.c **** 
 2246               		.loc 1 566 1 is_stmt 0 view .LVU506
 2247 0026 0895      		ret
 2248               		.cfi_endproc
 2249               	.LFE154:
 2251               		.section	.text.rgblight_sethsv_at,"ax",@progbits
 2252               	.global	rgblight_sethsv_at
 2254               	rgblight_sethsv_at:
 2255               	.LVL143:
 2256               	.LFB155:
 568:quantum/rgblight.c ****     if (!rgblight_config.enable) {
 2257               		.loc 1 568 79 is_stmt 1 view -0
 2258               		.cfi_startproc
 568:quantum/rgblight.c ****     if (!rgblight_config.enable) {
 2259               		.loc 1 568 79 is_stmt 0 view .LVU508
 2260 0000 1F93      		push r17
 2261               	.LCFI32:
 2262               		.cfi_def_cfa_offset 3
 2263               		.cfi_offset 17, -2
 2264 0002 CF93      		push r28
 2265               	.LCFI33:
 2266               		.cfi_def_cfa_offset 4
 2267               		.cfi_offset 28, -3
 2268 0004 DF93      		push r29
 2269               	.LCFI34:
 2270               		.cfi_def_cfa_offset 5
 2271               		.cfi_offset 29, -4
 2272 0006 00D0      		rcall .
 2273 0008 0F92      		push __tmp_reg__
 2274               	.LCFI35:
 2275               		.cfi_def_cfa_offset 8
 2276 000a CDB7      		in r28,__SP_L__
 2277 000c DEB7      		in r29,__SP_H__
 2278               	.LCFI36:
 2279               		.cfi_def_cfa_register 28
 2280               	/* prologue: function */
 2281               	/* frame size = 3 */
 2282               	/* stack size = 6 */
 2283               	.L__stack_usage = 6
 2284 000e 122F      		mov r17,r18
 569:quantum/rgblight.c ****         return;
 2285               		.loc 1 569 5 is_stmt 1 view .LVU509
 569:quantum/rgblight.c ****         return;
 2286               		.loc 1 569 25 is_stmt 0 view .LVU510
 2287 0010 9091 0000 		lds r25,rgblight_config
 569:quantum/rgblight.c ****         return;
 2288               		.loc 1 569 8 view .LVU511
 2289 0014 90FF      		sbrs r25,0
 2290 0016 00C0      		rjmp .L112
 573:quantum/rgblight.c ****     sethsv(hue, sat, val, &tmp_led);
 2291               		.loc 1 573 5 is_stmt 1 view .LVU512
 574:quantum/rgblight.c ****     rgblight_setrgb_at(tmp_led.r, tmp_led.g, tmp_led.b, index);
 2292               		.loc 1 574 5 view .LVU513
 2293               	.LVL144:
 2294               	.LBB79:
 2295               	.LBI79:
 132:quantum/rgblight.c **** 
 2296               		.loc 1 132 6 view .LVU514
 2297               	.LBB80:
 132:quantum/rgblight.c **** 
 2298               		.loc 1 132 70 view .LVU515
 2299 0018 9E01      		movw r18,r28
 2300               	.LVL145:
 132:quantum/rgblight.c **** 
 2301               		.loc 1 132 70 is_stmt 0 view .LVU516
 2302 001a 2F5F      		subi r18,-1
 2303 001c 3F4F      		sbci r19,-1
 2304 001e 0E94 0000 		call sethsv_raw
 2305               	.LVL146:
 132:quantum/rgblight.c **** 
 2306               		.loc 1 132 70 view .LVU517
 2307               	.LBE80:
 2308               	.LBE79:
 575:quantum/rgblight.c **** }
 2309               		.loc 1 575 5 is_stmt 1 view .LVU518
 2310 0022 212F      		mov r18,r17
 2311 0024 4B81      		ldd r20,Y+3
 2312 0026 6981      		ldd r22,Y+1
 2313 0028 8A81      		ldd r24,Y+2
 2314 002a 0E94 0000 		call rgblight_setrgb_at
 2315               	.LVL147:
 2316               	.L112:
 2317               	/* epilogue start */
 576:quantum/rgblight.c **** 
 2318               		.loc 1 576 1 is_stmt 0 view .LVU519
 2319 002e 0F90      		pop __tmp_reg__
 2320 0030 0F90      		pop __tmp_reg__
 2321 0032 0F90      		pop __tmp_reg__
 2322 0034 DF91      		pop r29
 2323 0036 CF91      		pop r28
 2324 0038 1F91      		pop r17
 2325               	.LVL148:
 576:quantum/rgblight.c **** 
 2326               		.loc 1 576 1 view .LVU520
 2327 003a 0895      		ret
 2328               		.cfi_endproc
 2329               	.LFE155:
 2331               		.section	.text.rgblight_setrgb_range,"ax",@progbits
 2332               	.global	rgblight_setrgb_range
 2334               	rgblight_setrgb_range:
 2335               	.LVL149:
 2336               	.LFB157:
 590:quantum/rgblight.c ****     if (!rgblight_config.enable || start < 0 || start >= end || end > RGBLED_NUM) {
 2337               		.loc 1 590 89 is_stmt 1 view -0
 2338               		.cfi_startproc
 590:quantum/rgblight.c ****     if (!rgblight_config.enable || start < 0 || start >= end || end > RGBLED_NUM) {
 2339               		.loc 1 590 89 is_stmt 0 view .LVU522
 2340 0000 0F93      		push r16
 2341               	.LCFI37:
 2342               		.cfi_def_cfa_offset 3
 2343               		.cfi_offset 16, -2
 2344               	/* prologue: function */
 2345               	/* frame size = 0 */
 2346               	/* stack size = 1 */
 2347               	.L__stack_usage = 1
 591:quantum/rgblight.c ****         return;
 2348               		.loc 1 591 5 is_stmt 1 view .LVU523
 591:quantum/rgblight.c ****         return;
 2349               		.loc 1 591 25 is_stmt 0 view .LVU524
 2350 0002 9091 0000 		lds r25,rgblight_config
 591:quantum/rgblight.c ****         return;
 2351               		.loc 1 591 8 view .LVU525
 2352 0006 90FF      		sbrs r25,0
 2353 0008 00C0      		rjmp .L115
 591:quantum/rgblight.c ****         return;
 2354               		.loc 1 591 46 discriminator 1 view .LVU526
 2355 000a 2017      		cp r18,r16
 2356 000c 00F4      		brsh .L115
 591:quantum/rgblight.c ****         return;
 2357               		.loc 1 591 62 discriminator 2 view .LVU527
 2358 000e 0F31      		cpi r16,lo8(31)
 2359 0010 00F4      		brsh .L115
 2360 0012 93E0      		ldi r25,lo8(3)
 2361 0014 299F      		mul r18,r25
 2362 0016 F001      		movw r30,r0
 2363 0018 1124      		clr __zero_reg__
 2364 001a E050      		subi r30,lo8(-(led))
 2365 001c F040      		sbci r31,hi8(-(led))
 2366               	.LVL150:
 2367               	.L117:
 2368               	.LBB81:
 596:quantum/rgblight.c ****         led[i].g = g;
 2369               		.loc 1 596 9 is_stmt 1 discriminator 3 view .LVU528
 596:quantum/rgblight.c ****         led[i].g = g;
 2370               		.loc 1 596 18 is_stmt 0 discriminator 3 view .LVU529
 2371 001e 8183      		std Z+1,r24
 597:quantum/rgblight.c ****         led[i].b = b;
 2372               		.loc 1 597 9 is_stmt 1 discriminator 3 view .LVU530
 597:quantum/rgblight.c ****         led[i].b = b;
 2373               		.loc 1 597 18 is_stmt 0 discriminator 3 view .LVU531
 2374 0020 6083      		st Z,r22
 598:quantum/rgblight.c **** #ifdef RGBW
 2375               		.loc 1 598 9 is_stmt 1 discriminator 3 view .LVU532
 598:quantum/rgblight.c **** #ifdef RGBW
 2376               		.loc 1 598 18 is_stmt 0 discriminator 3 view .LVU533
 2377 0022 4283      		std Z+2,r20
 595:quantum/rgblight.c ****         led[i].r = r;
 2378               		.loc 1 595 38 is_stmt 1 discriminator 3 view .LVU534
 595:quantum/rgblight.c ****         led[i].r = r;
 2379               		.loc 1 595 39 is_stmt 0 discriminator 3 view .LVU535
 2380 0024 2F5F      		subi r18,lo8(-(1))
 2381               	.LVL151:
 595:quantum/rgblight.c ****         led[i].r = r;
 2382               		.loc 1 595 29 is_stmt 1 discriminator 3 view .LVU536
 2383 0026 3396      		adiw r30,3
 595:quantum/rgblight.c ****         led[i].r = r;
 2384               		.loc 1 595 5 is_stmt 0 discriminator 3 view .LVU537
 2385 0028 0213      		cpse r16,r18
 2386 002a 00C0      		rjmp .L117
 595:quantum/rgblight.c ****         led[i].r = r;
 2387               		.loc 1 595 5 discriminator 3 view .LVU538
 2388               	.LBE81:
 603:quantum/rgblight.c ****     wait_ms(1);
 2389               		.loc 1 603 5 is_stmt 1 view .LVU539
 2390 002c 0E94 0000 		call rgblight_set
 2391               	.LVL152:
 604:quantum/rgblight.c **** }
 2392               		.loc 1 604 5 view .LVU540
 2393               	.LBB82:
 2394               	.LBI82:
 2395               		.file 3 "/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h"
   1:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    Copyright (c) 2004,2005,2007 Joerg Wunsch
   3:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    Copyright (c) 2007  Florin-Viorel Petrov
   4:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    All rights reserved.
   5:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
   6:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    Redistribution and use in source and binary forms, with or without
   7:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    modification, are permitted provided that the following conditions are met:
   8:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
   9:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    * Redistributions of source code must retain the above copyright
  10:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer.
  11:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
  12:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    * Redistributions in binary form must reproduce the above copyright
  13:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer in
  14:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****      the documentation and/or other materials provided with the
  15:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****      distribution.
  16:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
  17:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    * Neither the name of the copyright holders nor the names of
  18:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****      contributors may be used to endorse or promote products derived
  19:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****      from this software without specific prior written permission.
  20:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
  21:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  25:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****   POSSIBILITY OF SUCH DAMAGE. */
  32:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
  33:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** /* $Id: delay.h.in 2506 2016-02-08 10:05:45Z joerg_wunsch $ */
  34:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
  35:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** #ifndef _UTIL_DELAY_H_
  36:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** #define _UTIL_DELAY_H_ 1
  37:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
  38:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** #ifndef __DOXYGEN__
  39:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** #  ifndef __HAS_DELAY_CYCLES
  40:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** #    define __HAS_DELAY_CYCLES 1
  41:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** #  endif
  42:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** #endif  /* __DOXYGEN__ */
  43:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
  44:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** #include <inttypes.h>
  45:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** #include <util/delay_basic.h>
  46:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** #include <math.h>
  47:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
  48:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** /** \file */
  49:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** /** \defgroup util_delay <util/delay.h>: Convenience functions for busy-wait delay loops
  50:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     \code
  51:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     #define F_CPU 1000000UL  // 1 MHz
  52:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     //#define F_CPU 14.7456E6
  53:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     #include <util/delay.h>
  54:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     \endcode
  55:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
  56:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     \note As an alternative method, it is possible to pass the
  57:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     F_CPU macro down to the compiler from the Makefile.
  58:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     Obviously, in that case, no \c \#define statement should be
  59:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     used.
  60:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
  61:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     The functions in this header file are wrappers around the basic
  62:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     busy-wait functions from <util/delay_basic.h>.  They are meant as
  63:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     convenience functions where actual time values can be specified
  64:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     rather than a number of cycles to wait for.  The idea behind is
  65:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     that compile-time constant expressions will be eliminated by
  66:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     compiler optimization so floating-point expressions can be used
  67:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     to calculate the number of delay cycles needed based on the CPU
  68:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     frequency passed by the macro F_CPU.
  69:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
  70:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     \note In order for these functions to work as intended, compiler
  71:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     optimizations <em>must</em> be enabled, and the delay time
  72:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     <em>must</em> be an expression that is a known constant at
  73:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     compile-time.  If these requirements are not met, the resulting
  74:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     delay will be much longer (and basically unpredictable), and
  75:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     applications that otherwise do not use floating-point calculations
  76:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     will experience severe code bloat by the floating-point library
  77:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     routines linked into the application.
  78:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
  79:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     The functions available allow the specification of microsecond, and
  80:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     millisecond delays directly, using the application-supplied macro
  81:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     F_CPU as the CPU clock frequency (in Hertz).
  82:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
  83:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** */
  84:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
  85:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** #if !defined(__DOXYGEN__)
  86:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** static __inline__ void _delay_us(double __us) __attribute__((__always_inline__));
  87:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** static __inline__ void _delay_ms(double __ms) __attribute__((__always_inline__));
  88:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** #endif
  89:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
  90:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** #ifndef F_CPU
  91:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** /* prevent compiler error by supplying a default */
  92:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** # warning "F_CPU not defined for <util/delay.h>"
  93:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** /** \ingroup util_delay
  94:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     \def F_CPU
  95:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     \brief CPU frequency in Hz
  96:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
  97:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     The macro F_CPU specifies the CPU frequency to be considered by
  98:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     the delay macros.  This macro is normally supplied by the
  99:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     environment (e.g. from within a project header, or the project's
 100:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     Makefile).  The value 1 MHz here is only provided as a "vanilla"
 101:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     fallback if no such user-provided definition could be found.
 102:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
 103:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     In terms of the delay functions, the CPU frequency can be given as
 104:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     a floating-point constant (e.g. 3.6864E6 for 3.6864 MHz).
 105:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     However, the macros in <util/setbaud.h> require it to be an
 106:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****     integer value.
 107:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****  */
 108:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** # define F_CPU 1000000UL
 109:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** #endif
 110:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
 111:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** #ifndef __OPTIMIZE__
 112:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** # warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
 113:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** #endif
 114:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
 115:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 116:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 117:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****   __STDC_HOSTED__
 118:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** #  include <math.h>
 119:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** #endif
 120:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
 121:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** /**
 122:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    \ingroup util_delay
 123:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
 124:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    Perform a delay of \c __ms milliseconds, using _delay_loop_2().
 125:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
 126:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
 127:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 128:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
 129:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    The maximal possible delay is 262.14 ms / F_CPU in MHz.
 130:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
 131:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    When the user request delay which exceed the maximum possible one,
 132:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    _delay_ms() provides a decreased resolution functionality. In this
 133:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    mode _delay_ms() will work with a resolution of 1/10 ms, providing
 134:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    delays up to 6.5535 seconds (independent from CPU frequency).  The
 135:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    user will not be informed about decreased resolution.
 136:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
 137:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles()
 138:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    support, maximal possible delay is 4294967.295 ms/ F_CPU in MHz. For
 139:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    values greater than the maximal possible delay, overflows results in
 140:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    no delay i.e., 0ms.
 141:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
 142:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    Conversion of \c __ms into clock cycles may not always result in
 143:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    integer.  By default, the clock cycles rounded up to next
 144:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    integer. This ensures that the user gets at least \c __ms
 145:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    microseconds of delay.
 146:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
 147:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    Alternatively, by defining the macro \c __DELAY_ROUND_DOWN__, or
 148:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    \c __DELAY_ROUND_CLOSEST__, before including this header file, the
 149:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    algorithm can be made to round down, or round to closest integer,
 150:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    respectively.
 151:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
 152:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    \note
 153:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
 154:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    The implementation of _delay_ms() based on
 155:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    __builtin_avr_delay_cycles() is not backward compatible with older
 156:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    implementations.  In order to get functionality backward compatible
 157:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    with previous versions, the macro \c "__DELAY_BACKWARD_COMPATIBLE__"
 158:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    must be defined before including this header file. Also, the
 159:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    backward compatible algorithm will be chosen if the code is
 160:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    compiled in a <em>freestanding environment</em> (GCC option
 161:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    \c -ffreestanding), as the math functions required for rounding are
 162:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****    not available to the compiler then.
 163:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
 164:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****  */
 165:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** void
 166:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** _delay_ms(double __ms)
 2396               		.loc 3 166 1 view .LVU541
 2397               	.LBB83:
 167:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** {
 168:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 	double __tmp ;
 2398               		.loc 3 168 2 view .LVU542
 169:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 170:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 171:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h ****   __STDC_HOSTED__
 172:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 	uint32_t __ticks_dc;
 2399               		.loc 3 172 2 view .LVU543
 173:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 2400               		.loc 3 173 2 view .LVU544
 174:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 2401               		.loc 3 174 2 view .LVU545
 175:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
 176:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 177:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 178:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
 179:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 180:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 181:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
 182:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 	#else
 183:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 		//round up by default
 184:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
 2402               		.loc 3 184 3 view .LVU546
 185:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 	#endif
 186:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
 187:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
 2403               		.loc 3 187 2 view .LVU547
 2404 0030 8FE9      		ldi r24,lo8(3999)
 2405 0032 9FE0      		ldi r25,hi8(3999)
 2406 0034 0197      	1:	sbiw r24,1
 2407 0036 01F4      		brne 1b
 2408 0038 00C0      		rjmp .
 2409 003a 0000      		nop
 2410               	.LVL153:
 2411               	.L115:
 2412               	/* epilogue start */
 2413               		.loc 3 187 2 is_stmt 0 view .LVU548
 2414               	.LBE83:
 2415               	.LBE82:
 605:quantum/rgblight.c **** 
 2416               		.loc 1 605 1 view .LVU549
 2417 003c 0F91      		pop r16
 2418               	.LVL154:
 605:quantum/rgblight.c **** 
 2419               		.loc 1 605 1 view .LVU550
 2420 003e 0895      		ret
 2421               		.cfi_endproc
 2422               	.LFE157:
 2424               		.section	.text.rgblight_sethsv_range,"ax",@progbits
 2425               	.global	rgblight_sethsv_range
 2427               	rgblight_sethsv_range:
 2428               	.LVL155:
 2429               	.LFB158:
 607:quantum/rgblight.c ****     if (!rgblight_config.enable) {
 2430               		.loc 1 607 95 is_stmt 1 view -0
 2431               		.cfi_startproc
 607:quantum/rgblight.c ****     if (!rgblight_config.enable) {
 2432               		.loc 1 607 95 is_stmt 0 view .LVU552
 2433 0000 0F93      		push r16
 2434               	.LCFI38:
 2435               		.cfi_def_cfa_offset 3
 2436               		.cfi_offset 16, -2
 2437 0002 1F93      		push r17
 2438               	.LCFI39:
 2439               		.cfi_def_cfa_offset 4
 2440               		.cfi_offset 17, -3
 2441 0004 CF93      		push r28
 2442               	.LCFI40:
 2443               		.cfi_def_cfa_offset 5
 2444               		.cfi_offset 28, -4
 2445 0006 DF93      		push r29
 2446               	.LCFI41:
 2447               		.cfi_def_cfa_offset 6
 2448               		.cfi_offset 29, -5
 2449 0008 00D0      		rcall .
 2450 000a 0F92      		push __tmp_reg__
 2451               	.LCFI42:
 2452               		.cfi_def_cfa_offset 9
 2453 000c CDB7      		in r28,__SP_L__
 2454 000e DEB7      		in r29,__SP_H__
 2455               	.LCFI43:
 2456               		.cfi_def_cfa_register 28
 2457               	/* prologue: function */
 2458               	/* frame size = 3 */
 2459               	/* stack size = 7 */
 2460               	.L__stack_usage = 7
 2461 0010 122F      		mov r17,r18
 608:quantum/rgblight.c ****         return;
 2462               		.loc 1 608 5 is_stmt 1 view .LVU553
 608:quantum/rgblight.c ****         return;
 2463               		.loc 1 608 25 is_stmt 0 view .LVU554
 2464 0012 9091 0000 		lds r25,rgblight_config
 608:quantum/rgblight.c ****         return;
 2465               		.loc 1 608 8 view .LVU555
 2466 0016 90FF      		sbrs r25,0
 2467 0018 00C0      		rjmp .L122
 612:quantum/rgblight.c ****     sethsv(hue, sat, val, &tmp_led);
 2468               		.loc 1 612 5 is_stmt 1 view .LVU556
 613:quantum/rgblight.c ****     rgblight_setrgb_range(tmp_led.r, tmp_led.g, tmp_led.b, start, end);
 2469               		.loc 1 613 5 view .LVU557
 2470               	.LVL156:
 2471               	.LBB86:
 2472               	.LBI86:
 132:quantum/rgblight.c **** 
 2473               		.loc 1 132 6 view .LVU558
 2474               	.LBB87:
 132:quantum/rgblight.c **** 
 2475               		.loc 1 132 70 view .LVU559
 2476 001a 9E01      		movw r18,r28
 2477               	.LVL157:
 132:quantum/rgblight.c **** 
 2478               		.loc 1 132 70 is_stmt 0 view .LVU560
 2479 001c 2F5F      		subi r18,-1
 2480 001e 3F4F      		sbci r19,-1
 2481 0020 0E94 0000 		call sethsv_raw
 2482               	.LVL158:
 132:quantum/rgblight.c **** 
 2483               		.loc 1 132 70 view .LVU561
 2484               	.LBE87:
 2485               	.LBE86:
 614:quantum/rgblight.c **** }
 2486               		.loc 1 614 5 is_stmt 1 view .LVU562
 2487 0024 212F      		mov r18,r17
 2488 0026 4B81      		ldd r20,Y+3
 2489 0028 6981      		ldd r22,Y+1
 2490 002a 8A81      		ldd r24,Y+2
 2491 002c 0E94 0000 		call rgblight_setrgb_range
 2492               	.LVL159:
 2493               	.L122:
 2494               	/* epilogue start */
 615:quantum/rgblight.c **** 
 2495               		.loc 1 615 1 is_stmt 0 view .LVU563
 2496 0030 0F90      		pop __tmp_reg__
 2497 0032 0F90      		pop __tmp_reg__
 2498 0034 0F90      		pop __tmp_reg__
 2499 0036 DF91      		pop r29
 2500 0038 CF91      		pop r28
 2501 003a 1F91      		pop r17
 2502               	.LVL160:
 615:quantum/rgblight.c **** 
 2503               		.loc 1 615 1 view .LVU564
 2504 003c 0F91      		pop r16
 2505               	.LVL161:
 615:quantum/rgblight.c **** 
 2506               		.loc 1 615 1 view .LVU565
 2507 003e 0895      		ret
 2508               		.cfi_endproc
 2509               	.LFE158:
 2511               		.section	.text.rgblight_sethsv_master,"ax",@progbits
 2512               	.global	rgblight_sethsv_master
 2514               	rgblight_sethsv_master:
 2515               	.LVL162:
 2516               	.LFB161:
 622:quantum/rgblight.c **** 
 2517               		.loc 1 622 68 is_stmt 1 view -0
 2518               		.cfi_startproc
 622:quantum/rgblight.c **** 
 2519               		.loc 1 622 68 is_stmt 0 view .LVU567
 2520 0000 0F93      		push r16
 2521               	.LCFI44:
 2522               		.cfi_def_cfa_offset 3
 2523               		.cfi_offset 16, -2
 2524               	/* prologue: function */
 2525               	/* frame size = 0 */
 2526               	/* stack size = 1 */
 2527               	.L__stack_usage = 1
 622:quantum/rgblight.c **** 
 2528               		.loc 1 622 70 is_stmt 1 view .LVU568
 2529 0002 0FE0      		ldi r16,lo8(15)
 2530 0004 20E0      		ldi r18,0
 2531 0006 0E94 0000 		call rgblight_sethsv_range
 2532               	.LVL163:
 2533               	/* epilogue start */
 622:quantum/rgblight.c **** 
 2534               		.loc 1 622 1 is_stmt 0 view .LVU569
 2535 000a 0F91      		pop r16
 2536 000c 0895      		ret
 2537               		.cfi_endproc
 2538               	.LFE161:
 2540               		.section	.text.rgblight_sethsv_slave,"ax",@progbits
 2541               	.global	rgblight_sethsv_slave
 2543               	rgblight_sethsv_slave:
 2544               	.LVL164:
 2545               	.LFB162:
 624:quantum/rgblight.c **** #endif  // ifndef RGBLIGHT_SPLIT
 2546               		.loc 1 624 67 is_stmt 1 view -0
 2547               		.cfi_startproc
 624:quantum/rgblight.c **** #endif  // ifndef RGBLIGHT_SPLIT
 2548               		.loc 1 624 67 is_stmt 0 view .LVU571
 2549 0000 0F93      		push r16
 2550               	.LCFI45:
 2551               		.cfi_def_cfa_offset 3
 2552               		.cfi_offset 16, -2
 2553               	/* prologue: function */
 2554               	/* frame size = 0 */
 2555               	/* stack size = 1 */
 2556               	.L__stack_usage = 1
 624:quantum/rgblight.c **** #endif  // ifndef RGBLIGHT_SPLIT
 2557               		.loc 1 624 69 is_stmt 1 view .LVU572
 2558 0002 0EE1      		ldi r16,lo8(30)
 2559 0004 2FE0      		ldi r18,lo8(15)
 2560 0006 0E94 0000 		call rgblight_sethsv_range
 2561               	.LVL165:
 2562               	/* epilogue start */
 624:quantum/rgblight.c **** #endif  // ifndef RGBLIGHT_SPLIT
 2563               		.loc 1 624 1 is_stmt 0 view .LVU573
 2564 000a 0F91      		pop r16
 2565 000c 0895      		ret
 2566               		.cfi_endproc
 2567               	.LFE162:
 2569               		.section	.text.rgblight_setrgb_master,"ax",@progbits
 2570               	.global	rgblight_setrgb_master
 2572               	rgblight_setrgb_master:
 2573               	.LVL166:
 2574               	.LFB159:
 618:quantum/rgblight.c **** 
 2575               		.loc 1 618 62 is_stmt 1 view -0
 2576               		.cfi_startproc
 618:quantum/rgblight.c **** 
 2577               		.loc 1 618 62 is_stmt 0 view .LVU575
 2578 0000 0F93      		push r16
 2579               	.LCFI46:
 2580               		.cfi_def_cfa_offset 3
 2581               		.cfi_offset 16, -2
 2582               	/* prologue: function */
 2583               	/* frame size = 0 */
 2584               	/* stack size = 1 */
 2585               	.L__stack_usage = 1
 618:quantum/rgblight.c **** 
 2586               		.loc 1 618 64 is_stmt 1 view .LVU576
 2587 0002 0FE0      		ldi r16,lo8(15)
 2588 0004 20E0      		ldi r18,0
 2589 0006 0E94 0000 		call rgblight_setrgb_range
 2590               	.LVL167:
 2591               	/* epilogue start */
 618:quantum/rgblight.c **** 
 2592               		.loc 1 618 1 is_stmt 0 view .LVU577
 2593 000a 0F91      		pop r16
 2594 000c 0895      		ret
 2595               		.cfi_endproc
 2596               	.LFE159:
 2598               		.section	.text.rgblight_setrgb_slave,"ax",@progbits
 2599               	.global	rgblight_setrgb_slave
 2601               	rgblight_setrgb_slave:
 2602               	.LVL168:
 2603               	.LFB160:
 620:quantum/rgblight.c **** 
 2604               		.loc 1 620 61 is_stmt 1 view -0
 2605               		.cfi_startproc
 620:quantum/rgblight.c **** 
 2606               		.loc 1 620 61 is_stmt 0 view .LVU579
 2607 0000 0F93      		push r16
 2608               	.LCFI47:
 2609               		.cfi_def_cfa_offset 3
 2610               		.cfi_offset 16, -2
 2611               	/* prologue: function */
 2612               	/* frame size = 0 */
 2613               	/* stack size = 1 */
 2614               	.L__stack_usage = 1
 620:quantum/rgblight.c **** 
 2615               		.loc 1 620 63 is_stmt 1 view .LVU580
 2616 0002 0EE1      		ldi r16,lo8(30)
 2617 0004 2FE0      		ldi r18,lo8(15)
 2618 0006 0E94 0000 		call rgblight_setrgb_range
 2619               	.LVL169:
 2620               	/* epilogue start */
 620:quantum/rgblight.c **** 
 2621               		.loc 1 620 1 is_stmt 0 view .LVU581
 2622 000a 0F91      		pop r16
 2623 000c 0895      		ret
 2624               		.cfi_endproc
 2625               	.LFE160:
 2627               		.section	.text.rgblight_effect_rainbow_swirl,"ax",@progbits
 2628               	.global	rgblight_effect_rainbow_swirl
 2630               	rgblight_effect_rainbow_swirl:
 2631               	.LVL170:
 2632               	.LFB174:
1019:quantum/rgblight.c ****     uint8_t hue;
 2633               		.loc 1 1019 62 is_stmt 1 view -0
 2634               		.cfi_startproc
1019:quantum/rgblight.c ****     uint8_t hue;
 2635               		.loc 1 1019 62 is_stmt 0 view .LVU583
 2636 0000 EF92      		push r14
 2637               	.LCFI48:
 2638               		.cfi_def_cfa_offset 3
 2639               		.cfi_offset 14, -2
 2640 0002 FF92      		push r15
 2641               	.LCFI49:
 2642               		.cfi_def_cfa_offset 4
 2643               		.cfi_offset 15, -3
 2644 0004 1F93      		push r17
 2645               	.LCFI50:
 2646               		.cfi_def_cfa_offset 5
 2647               		.cfi_offset 17, -4
 2648 0006 CF93      		push r28
 2649               	.LCFI51:
 2650               		.cfi_def_cfa_offset 6
 2651               		.cfi_offset 28, -5
 2652 0008 DF93      		push r29
 2653               	.LCFI52:
 2654               		.cfi_def_cfa_offset 7
 2655               		.cfi_offset 29, -6
 2656               	/* prologue: function */
 2657               	/* frame size = 0 */
 2658               	/* stack size = 5 */
 2659               	.L__stack_usage = 5
 2660 000a EC01      		movw r28,r24
1020:quantum/rgblight.c ****     uint8_t i;
 2661               		.loc 1 1020 5 is_stmt 1 view .LVU584
1021:quantum/rgblight.c **** 
 2662               		.loc 1 1021 5 view .LVU585
1023:quantum/rgblight.c ****         hue = (RGBLIGHT_RAINBOW_SWIRL_RANGE / rgblight_ranges.effect_num_leds * i + anim->current_h
 2663               		.loc 1 1023 5 view .LVU586
 2664               	.LVL171:
1023:quantum/rgblight.c ****         hue = (RGBLIGHT_RAINBOW_SWIRL_RANGE / rgblight_ranges.effect_num_leds * i + anim->current_h
 2665               		.loc 1 1023 12 is_stmt 0 view .LVU587
 2666 000c 10E0      		ldi r17,0
1024:quantum/rgblight.c ****         sethsv(hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[i + rgblight_ranges.
 2667               		.loc 1 1024 45 view .LVU588
 2668 000e EE24      		clr r14
 2669 0010 EA94      		dec r14
 2670 0012 F12C      		mov r15,__zero_reg__
 2671               	.LVL172:
 2672               	.L130:
1023:quantum/rgblight.c ****         hue = (RGBLIGHT_RAINBOW_SWIRL_RANGE / rgblight_ranges.effect_num_leds * i + anim->current_h
 2673               		.loc 1 1023 17 is_stmt 1 discriminator 1 view .LVU589
1023:quantum/rgblight.c ****         hue = (RGBLIGHT_RAINBOW_SWIRL_RANGE / rgblight_ranges.effect_num_leds * i + anim->current_h
 2674               		.loc 1 1023 36 is_stmt 0 discriminator 1 view .LVU590
 2675 0014 6091 0000 		lds r22,rgblight_ranges+4
1023:quantum/rgblight.c ****         hue = (RGBLIGHT_RAINBOW_SWIRL_RANGE / rgblight_ranges.effect_num_leds * i + anim->current_h
 2676               		.loc 1 1023 5 discriminator 1 view .LVU591
 2677 0018 1617      		cp r17,r22
 2678 001a 00F0      		brlo .L131
1027:quantum/rgblight.c **** 
 2679               		.loc 1 1027 5 is_stmt 1 view .LVU592
 2680 001c 0E94 0000 		call rgblight_set
 2681               	.LVL173:
1029:quantum/rgblight.c ****         anim->current_hue++;
 2682               		.loc 1 1029 5 view .LVU593
1029:quantum/rgblight.c ****         anim->current_hue++;
 2683               		.loc 1 1029 9 is_stmt 0 view .LVU594
 2684 0020 9A81      		ldd r25,Y+2
 2685 0022 8C81      		ldd r24,Y+4
1029:quantum/rgblight.c ****         anim->current_hue++;
 2686               		.loc 1 1029 8 view .LVU595
 2687 0024 90FF      		sbrs r25,0
 2688 0026 00C0      		rjmp .L132
1030:quantum/rgblight.c ****     } else {
 2689               		.loc 1 1030 9 is_stmt 1 view .LVU596
1030:quantum/rgblight.c ****     } else {
 2690               		.loc 1 1030 26 is_stmt 0 view .LVU597
 2691 0028 8F5F      		subi r24,lo8(-(1))
 2692               	.L134:
1032:quantum/rgblight.c ****     }
 2693               		.loc 1 1032 26 view .LVU598
 2694 002a 8C83      		std Y+4,r24
 2695               	/* epilogue start */
1034:quantum/rgblight.c **** #endif
 2696               		.loc 1 1034 1 view .LVU599
 2697 002c DF91      		pop r29
 2698 002e CF91      		pop r28
 2699               	.LVL174:
1034:quantum/rgblight.c **** #endif
 2700               		.loc 1 1034 1 view .LVU600
 2701 0030 1F91      		pop r17
 2702               	.LVL175:
1034:quantum/rgblight.c **** #endif
 2703               		.loc 1 1034 1 view .LVU601
 2704 0032 FF90      		pop r15
 2705 0034 EF90      		pop r14
 2706 0036 0895      		ret
 2707               	.LVL176:
 2708               	.L131:
1024:quantum/rgblight.c ****         sethsv(hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[i + rgblight_ranges.
 2709               		.loc 1 1024 9 is_stmt 1 discriminator 3 view .LVU602
1025:quantum/rgblight.c ****     }
 2710               		.loc 1 1025 9 discriminator 3 view .LVU603
 2711               	.LBB90:
 2712               	.LBI90:
 132:quantum/rgblight.c **** 
 2713               		.loc 1 132 6 discriminator 3 view .LVU604
 2714               	.LBB91:
 132:quantum/rgblight.c **** 
 2715               		.loc 1 132 70 discriminator 3 view .LVU605
 2716               	.LBE91:
 2717               	.LBE90:
1025:quantum/rgblight.c ****     }
 2718               		.loc 1 1025 99 is_stmt 0 discriminator 3 view .LVU606
 2719 0038 2091 0000 		lds r18,rgblight_ranges+2
1025:quantum/rgblight.c ****     }
 2720               		.loc 1 1025 82 discriminator 3 view .LVU607
 2721 003c 422F      		mov r20,r18
 2722 003e 410F      		add r20,r17
 2723 0040 5527      		clr r21
 2724 0042 551F      		rol r21
 2725 0044 CA01      		movw r24,r20
1025:quantum/rgblight.c ****     }
 2726               		.loc 1 1025 9 discriminator 3 view .LVU608
 2727 0046 9A01      		movw r18,r20
 2728 0048 220F      		lsl r18
 2729 004a 331F      		rol r19
 2730 004c 280F      		add r18,r24
 2731 004e 391F      		adc r19,r25
 2732 0050 2050      		subi r18,lo8(-(led))
 2733 0052 3040      		sbci r19,hi8(-(led))
1024:quantum/rgblight.c ****         sethsv(hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[i + rgblight_ranges.
 2734               		.loc 1 1024 62 discriminator 3 view .LVU609
 2735 0054 70E0      		ldi r23,0
1024:quantum/rgblight.c ****         sethsv(hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[i + rgblight_ranges.
 2736               		.loc 1 1024 45 discriminator 3 view .LVU610
 2737 0056 C701      		movw r24,r14
 2738 0058 0E94 0000 		call __divmodhi4
 2739               	.LVL177:
1024:quantum/rgblight.c ****         sethsv(hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[i + rgblight_ranges.
 2740               		.loc 1 1024 45 discriminator 3 view .LVU611
 2741 005c 962F      		mov r25,r22
1024:quantum/rgblight.c ****         sethsv(hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[i + rgblight_ranges.
 2742               		.loc 1 1024 13 discriminator 3 view .LVU612
 2743 005e 8C81      		ldd r24,Y+4
 2744               	.LBB93:
 2745               	.LBB92:
 132:quantum/rgblight.c **** 
 2746               		.loc 1 132 70 discriminator 3 view .LVU613
 2747 0060 4091 0000 		lds r20,rgblight_config+3
 2748 0064 6091 0000 		lds r22,rgblight_config+2
 2749 0068 199F      		mul r17,r25
 2750 006a 800D      		add r24,r0
 2751 006c 1124      		clr __zero_reg__
 2752 006e 0E94 0000 		call sethsv_raw
 2753               	.LVL178:
 132:quantum/rgblight.c **** 
 2754               		.loc 1 132 70 discriminator 3 view .LVU614
 2755               	.LBE92:
 2756               	.LBE93:
1023:quantum/rgblight.c ****         hue = (RGBLIGHT_RAINBOW_SWIRL_RANGE / rgblight_ranges.effect_num_leds * i + anim->current_h
 2757               		.loc 1 1023 54 is_stmt 1 discriminator 3 view .LVU615
1023:quantum/rgblight.c ****         hue = (RGBLIGHT_RAINBOW_SWIRL_RANGE / rgblight_ranges.effect_num_leds * i + anim->current_h
 2758               		.loc 1 1023 55 is_stmt 0 discriminator 3 view .LVU616
 2759 0072 1F5F      		subi r17,lo8(-(1))
 2760               	.LVL179:
1023:quantum/rgblight.c ****         hue = (RGBLIGHT_RAINBOW_SWIRL_RANGE / rgblight_ranges.effect_num_leds * i + anim->current_h
 2761               		.loc 1 1023 55 discriminator 3 view .LVU617
 2762 0074 00C0      		rjmp .L130
 2763               	.L132:
1032:quantum/rgblight.c ****     }
 2764               		.loc 1 1032 9 is_stmt 1 view .LVU618
1032:quantum/rgblight.c ****     }
 2765               		.loc 1 1032 26 is_stmt 0 view .LVU619
 2766 0076 8150      		subi r24,lo8(-(-1))
 2767 0078 00C0      		rjmp .L134
 2768               		.cfi_endproc
 2769               	.LFE174:
 2771               		.section	.text.rgblight_effect_snake,"ax",@progbits
 2772               	.global	rgblight_effect_snake
 2774               	rgblight_effect_snake:
 2775               	.LVL180:
 2776               	.LFB175:
1040:quantum/rgblight.c ****     static uint8_t pos = 0;
 2777               		.loc 1 1040 54 is_stmt 1 view -0
 2778               		.cfi_startproc
1040:quantum/rgblight.c ****     static uint8_t pos = 0;
 2779               		.loc 1 1040 54 is_stmt 0 view .LVU621
 2780 0000 AF92      		push r10
 2781               	.LCFI53:
 2782               		.cfi_def_cfa_offset 3
 2783               		.cfi_offset 10, -2
 2784 0002 BF92      		push r11
 2785               	.LCFI54:
 2786               		.cfi_def_cfa_offset 4
 2787               		.cfi_offset 11, -3
 2788 0004 CF92      		push r12
 2789               	.LCFI55:
 2790               		.cfi_def_cfa_offset 5
 2791               		.cfi_offset 12, -4
 2792 0006 DF92      		push r13
 2793               	.LCFI56:
 2794               		.cfi_def_cfa_offset 6
 2795               		.cfi_offset 13, -5
 2796 0008 EF92      		push r14
 2797               	.LCFI57:
 2798               		.cfi_def_cfa_offset 7
 2799               		.cfi_offset 14, -6
 2800 000a FF92      		push r15
 2801               	.LCFI58:
 2802               		.cfi_def_cfa_offset 8
 2803               		.cfi_offset 15, -7
 2804 000c 0F93      		push r16
 2805               	.LCFI59:
 2806               		.cfi_def_cfa_offset 9
 2807               		.cfi_offset 16, -8
 2808 000e 1F93      		push r17
 2809               	.LCFI60:
 2810               		.cfi_def_cfa_offset 10
 2811               		.cfi_offset 17, -9
 2812 0010 CF93      		push r28
 2813               	.LCFI61:
 2814               		.cfi_def_cfa_offset 11
 2815               		.cfi_offset 28, -10
 2816 0012 DF93      		push r29
 2817               	.LCFI62:
 2818               		.cfi_def_cfa_offset 12
 2819               		.cfi_offset 29, -11
 2820               	/* prologue: function */
 2821               	/* frame size = 0 */
 2822               	/* stack size = 10 */
 2823               	.L__stack_usage = 10
1041:quantum/rgblight.c ****     uint8_t        i, j;
 2824               		.loc 1 1041 5 is_stmt 1 view .LVU622
1042:quantum/rgblight.c ****     int8_t         k;
 2825               		.loc 1 1042 5 view .LVU623
1043:quantum/rgblight.c ****     int8_t         increment = 1;
 2826               		.loc 1 1043 5 view .LVU624
1044:quantum/rgblight.c **** 
 2827               		.loc 1 1044 5 view .LVU625
 2828               	.LVL181:
1046:quantum/rgblight.c ****         increment = -1;
 2829               		.loc 1 1046 5 view .LVU626
1046:quantum/rgblight.c ****         increment = -1;
 2830               		.loc 1 1046 9 is_stmt 0 view .LVU627
 2831 0014 FC01      		movw r30,r24
 2832 0016 8281      		ldd r24,Z+2
 2833               	.LVL182:
1047:quantum/rgblight.c ****     }
 2834               		.loc 1 1047 19 view .LVU628
 2835 0018 0FEF      		ldi r16,lo8(-1)
1046:quantum/rgblight.c ****         increment = -1;
 2836               		.loc 1 1046 8 view .LVU629
 2837 001a 80FF      		sbrs r24,0
1044:quantum/rgblight.c **** 
 2838               		.loc 1 1044 20 view .LVU630
 2839 001c 01E0      		ldi r16,lo8(1)
 2840               	.L136:
 2841               	.LVL183:
1061:quantum/rgblight.c ****         LED_TYPE *ledp = led + i + rgblight_ranges.effect_start_pos;
 2842               		.loc 1 1061 5 is_stmt 1 view .LVU631
1061:quantum/rgblight.c ****         LED_TYPE *ledp = led + i + rgblight_ranges.effect_start_pos;
 2843               		.loc 1 1061 12 is_stmt 0 view .LVU632
 2844 001e 10E0      		ldi r17,0
 2845               	.LBB97:
1072:quantum/rgblight.c ****             }
 2846               		.loc 1 1072 19 view .LVU633
 2847 0020 4EE1      		ldi r20,lo8(30)
 2848 0022 A42E      		mov r10,r20
 2849               	.LVL184:
 2850               	.L137:
1072:quantum/rgblight.c ****             }
 2851               		.loc 1 1072 19 view .LVU634
 2852               	.LBE97:
1061:quantum/rgblight.c ****         LED_TYPE *ledp = led + i + rgblight_ranges.effect_start_pos;
 2853               		.loc 1 1061 17 is_stmt 1 discriminator 1 view .LVU635
1061:quantum/rgblight.c ****         LED_TYPE *ledp = led + i + rgblight_ranges.effect_start_pos;
 2854               		.loc 1 1061 5 is_stmt 0 discriminator 1 view .LVU636
 2855 0024 8091 0000 		lds r24,rgblight_ranges+4
 2856 0028 1817      		cp r17,r24
 2857 002a 00F0      		brlo .L142
1082:quantum/rgblight.c ****     if (increment == 1) {
 2858               		.loc 1 1082 5 is_stmt 1 view .LVU637
 2859 002c 0E94 0000 		call rgblight_set
 2860               	.LVL185:
1083:quantum/rgblight.c ****         if (pos - 1 < 0) {
 2861               		.loc 1 1083 5 view .LVU638
 2862 0030 8091 0000 		lds r24,pos.3402
1083:quantum/rgblight.c ****         if (pos - 1 < 0) {
 2863               		.loc 1 1083 8 is_stmt 0 view .LVU639
 2864 0034 0130      		cpi r16,lo8(1)
 2865 0036 01F0      		breq .+2
 2866 0038 00C0      		rjmp .L143
1084:quantum/rgblight.c ****             pos = rgblight_ranges.effect_num_leds - 1;
 2867               		.loc 1 1084 9 is_stmt 1 view .LVU640
1084:quantum/rgblight.c ****             pos = rgblight_ranges.effect_num_leds - 1;
 2868               		.loc 1 1084 12 is_stmt 0 view .LVU641
 2869 003a 8111      		cpse r24,__zero_reg__
 2870 003c 00C0      		rjmp .L144
1085:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 2871               		.loc 1 1085 13 is_stmt 1 view .LVU642
1085:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 2872               		.loc 1 1085 51 is_stmt 0 view .LVU643
 2873 003e 8091 0000 		lds r24,rgblight_ranges+4
 2874               	.L144:
1090:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 2875               		.loc 1 1090 13 is_stmt 1 view .LVU644
1090:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 2876               		.loc 1 1090 17 is_stmt 0 view .LVU645
 2877 0042 8150      		subi r24,lo8(-(-1))
 2878               	.L148:
1096:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 2879               		.loc 1 1096 13 view .LVU646
 2880 0044 8093 0000 		sts pos.3402,r24
 2881               	/* epilogue start */
1101:quantum/rgblight.c **** #endif
 2882               		.loc 1 1101 1 view .LVU647
 2883 0048 DF91      		pop r29
 2884 004a CF91      		pop r28
 2885 004c 1F91      		pop r17
 2886               	.LVL186:
1101:quantum/rgblight.c **** #endif
 2887               		.loc 1 1101 1 view .LVU648
 2888 004e 0F91      		pop r16
 2889               	.LVL187:
1101:quantum/rgblight.c **** #endif
 2890               		.loc 1 1101 1 view .LVU649
 2891 0050 FF90      		pop r15
 2892 0052 EF90      		pop r14
 2893 0054 DF90      		pop r13
 2894 0056 CF90      		pop r12
 2895 0058 BF90      		pop r11
 2896 005a AF90      		pop r10
 2897 005c 0895      		ret
 2898               	.LVL188:
 2899               	.L142:
 2900               	.LBB102:
1062:quantum/rgblight.c ****         ledp->r        = 0;
 2901               		.loc 1 1062 9 is_stmt 1 view .LVU650
1062:quantum/rgblight.c ****         ledp->r        = 0;
 2902               		.loc 1 1062 34 is_stmt 0 view .LVU651
 2903 005e C091 0000 		lds r28,rgblight_ranges+2
 2904 0062 C12E      		mov r12,r17
 2905 0064 D12C      		mov r13,__zero_reg__
 2906 0066 CC0D      		add r28,r12
 2907 0068 DD2D      		mov r29,r13
 2908 006a D11D      		adc r29,__zero_reg__
 2909 006c CE01      		movw r24,r28
 2910 006e 880F      		lsl r24
 2911 0070 991F      		rol r25
 2912 0072 C80F      		add r28,r24
 2913 0074 D91F      		adc r29,r25
1062:quantum/rgblight.c ****         ledp->r        = 0;
 2914               		.loc 1 1062 19 view .LVU652
 2915 0076 C050      		subi r28,lo8(-(led))
 2916 0078 D040      		sbci r29,hi8(-(led))
 2917               	.LVL189:
1063:quantum/rgblight.c ****         ledp->g        = 0;
 2918               		.loc 1 1063 9 is_stmt 1 view .LVU653
1063:quantum/rgblight.c ****         ledp->g        = 0;
 2919               		.loc 1 1063 24 is_stmt 0 view .LVU654
 2920 007a 1982      		std Y+1,__zero_reg__
1064:quantum/rgblight.c ****         ledp->b        = 0;
 2921               		.loc 1 1064 9 is_stmt 1 view .LVU655
1064:quantum/rgblight.c ****         ledp->b        = 0;
 2922               		.loc 1 1064 24 is_stmt 0 view .LVU656
 2923 007c 1882      		st Y,__zero_reg__
1065:quantum/rgblight.c **** #    ifdef RGBW
 2924               		.loc 1 1065 9 is_stmt 1 view .LVU657
1065:quantum/rgblight.c **** #    ifdef RGBW
 2925               		.loc 1 1065 24 is_stmt 0 view .LVU658
 2926 007e 1A82      		std Y+2,__zero_reg__
1069:quantum/rgblight.c ****             k = pos + j * increment;
 2927               		.loc 1 1069 9 is_stmt 1 view .LVU659
 2928               	.LVL190:
1069:quantum/rgblight.c ****             k = pos + j * increment;
 2929               		.loc 1 1069 21 view .LVU660
1065:quantum/rgblight.c **** #    ifdef RGBW
 2930               		.loc 1 1065 24 is_stmt 0 view .LVU661
 2931 0080 34E0      		ldi r19,lo8(4)
 2932 0082 E32E      		mov r14,r19
 2933 0084 F12C      		mov r15,__zero_reg__
 2934 0086 B12C      		mov r11,__zero_reg__
 2935               	.LVL191:
 2936               	.L141:
1070:quantum/rgblight.c ****             if (k > RGBLED_NUM) {
 2937               		.loc 1 1070 13 is_stmt 1 view .LVU662
1070:quantum/rgblight.c ****             if (k > RGBLED_NUM) {
 2938               		.loc 1 1070 21 is_stmt 0 view .LVU663
 2939 0088 8091 0000 		lds r24,pos.3402
 2940 008c 8B0D      		add r24,r11
 2941               	.LVL192:
1071:quantum/rgblight.c ****                 k = k % RGBLED_NUM;
 2942               		.loc 1 1071 13 is_stmt 1 view .LVU664
1071:quantum/rgblight.c ****                 k = k % RGBLED_NUM;
 2943               		.loc 1 1071 16 is_stmt 0 view .LVU665
 2944 008e 8F31      		cpi r24,lo8(31)
 2945 0090 04F0      		brlt .L138
1072:quantum/rgblight.c ****             }
 2946               		.loc 1 1072 17 is_stmt 1 view .LVU666
1072:quantum/rgblight.c ****             }
 2947               		.loc 1 1072 19 is_stmt 0 view .LVU667
 2948 0092 6A2D      		mov r22,r10
 2949 0094 0E94 0000 		call __divmodqi4
 2950               	.LVL193:
1072:quantum/rgblight.c ****             }
 2951               		.loc 1 1072 19 view .LVU668
 2952 0098 892F      		mov r24,r25
 2953               	.LVL194:
1074:quantum/rgblight.c ****                 k = k + rgblight_ranges.effect_num_leds;
 2954               		.loc 1 1074 13 is_stmt 1 view .LVU669
 2955               	.L139:
1077:quantum/rgblight.c ****                 sethsv(rgblight_config.hue, rgblight_config.sat, (uint8_t)(rgblight_config.val * (R
 2956               		.loc 1 1077 13 view .LVU670
1077:quantum/rgblight.c ****                 sethsv(rgblight_config.hue, rgblight_config.sat, (uint8_t)(rgblight_config.val * (R
 2957               		.loc 1 1077 19 is_stmt 0 view .LVU671
 2958 009a 082E      		mov __tmp_reg__,r24
 2959 009c 000C      		lsl r0
 2960 009e 990B      		sbc r25,r25
1077:quantum/rgblight.c ****                 sethsv(rgblight_config.hue, rgblight_config.sat, (uint8_t)(rgblight_config.val * (R
 2961               		.loc 1 1077 16 view .LVU672
 2962 00a0 C816      		cp r12,r24
 2963 00a2 D906      		cpc r13,r25
 2964 00a4 01F4      		brne .L140
1078:quantum/rgblight.c ****             }
 2965               		.loc 1 1078 17 is_stmt 1 view .LVU673
 2966               	.LVL195:
 2967               	.LBB98:
 2968               	.LBI98:
 132:quantum/rgblight.c **** 
 2969               		.loc 1 132 6 view .LVU674
 2970               	.LBB99:
 132:quantum/rgblight.c **** 
 2971               		.loc 1 132 70 view .LVU675
 2972               	.LBE99:
 2973               	.LBE98:
1078:quantum/rgblight.c ****             }
 2974               		.loc 1 1078 91 is_stmt 0 view .LVU676
 2975 00a6 8091 0000 		lds r24,rgblight_config+3
 2976               	.LVL196:
1078:quantum/rgblight.c ****             }
 2977               		.loc 1 1078 96 view .LVU677
 2978 00aa 8E9D      		mul r24,r14
 2979 00ac A001      		movw r20,r0
 2980 00ae 8F9D      		mul r24,r15
 2981 00b0 500D      		add r21,r0
 2982 00b2 1124      		clr __zero_reg__
1078:quantum/rgblight.c ****             }
 2983               		.loc 1 1078 133 view .LVU678
 2984 00b4 5595      		asr r21
 2985 00b6 4795      		ror r20
 2986 00b8 5595      		asr r21
 2987 00ba 4795      		ror r20
 2988               	.LBB101:
 2989               	.LBB100:
 132:quantum/rgblight.c **** 
 2990               		.loc 1 132 70 view .LVU679
 2991 00bc 9E01      		movw r18,r28
 2992 00be 6091 0000 		lds r22,rgblight_config+2
 2993 00c2 8091 0000 		lds r24,rgblight_config+1
 2994 00c6 0E94 0000 		call sethsv_raw
 2995               	.LVL197:
 2996               	.L140:
 132:quantum/rgblight.c **** 
 2997               		.loc 1 132 70 view .LVU680
 2998               	.LBE100:
 2999               	.LBE101:
1069:quantum/rgblight.c ****             k = pos + j * increment;
 3000               		.loc 1 1069 55 is_stmt 1 discriminator 2 view .LVU681
1069:quantum/rgblight.c ****             k = pos + j * increment;
 3001               		.loc 1 1069 21 discriminator 2 view .LVU682
 3002 00ca B00E      		add r11,r16
 3003 00cc F1E0      		ldi r31,1
 3004 00ce EF1A      		sub r14,r31
 3005 00d0 F108      		sbc r15,__zero_reg__
1069:quantum/rgblight.c ****             k = pos + j * increment;
 3006               		.loc 1 1069 9 is_stmt 0 discriminator 2 view .LVU683
 3007 00d2 01F4      		brne .L141
 3008               	.LBE102:
1061:quantum/rgblight.c ****         LED_TYPE *ledp = led + i + rgblight_ranges.effect_start_pos;
 3009               		.loc 1 1061 54 is_stmt 1 discriminator 2 view .LVU684
1061:quantum/rgblight.c ****         LED_TYPE *ledp = led + i + rgblight_ranges.effect_start_pos;
 3010               		.loc 1 1061 55 is_stmt 0 discriminator 2 view .LVU685
 3011 00d4 1F5F      		subi r17,lo8(-(1))
 3012               	.LVL198:
1061:quantum/rgblight.c ****         LED_TYPE *ledp = led + i + rgblight_ranges.effect_start_pos;
 3013               		.loc 1 1061 55 discriminator 2 view .LVU686
 3014 00d6 00C0      		rjmp .L137
 3015               	.LVL199:
 3016               	.L138:
 3017               	.LBB103:
1074:quantum/rgblight.c ****                 k = k + rgblight_ranges.effect_num_leds;
 3018               		.loc 1 1074 13 is_stmt 1 view .LVU687
1074:quantum/rgblight.c ****                 k = k + rgblight_ranges.effect_num_leds;
 3019               		.loc 1 1074 16 is_stmt 0 view .LVU688
 3020 00d8 87FF      		sbrs r24,7
 3021 00da 00C0      		rjmp .L139
1075:quantum/rgblight.c ****             }
 3022               		.loc 1 1075 17 is_stmt 1 view .LVU689
1075:quantum/rgblight.c ****             }
 3023               		.loc 1 1075 23 is_stmt 0 view .LVU690
 3024 00dc 9091 0000 		lds r25,rgblight_ranges+4
 3025 00e0 890F      		add r24,r25
 3026               	.LVL200:
1075:quantum/rgblight.c ****             }
 3027               		.loc 1 1075 23 view .LVU691
 3028 00e2 00C0      		rjmp .L139
 3029               	.LVL201:
 3030               	.L143:
1075:quantum/rgblight.c ****             }
 3031               		.loc 1 1075 23 view .LVU692
 3032               	.LBE103:
1096:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 3033               		.loc 1 1096 9 is_stmt 1 view .LVU693
1096:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 3034               		.loc 1 1096 20 is_stmt 0 view .LVU694
 3035 00e4 90E0      		ldi r25,0
 3036 00e6 0196      		adiw r24,1
1096:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 3037               		.loc 1 1096 42 view .LVU695
 3038 00e8 6091 0000 		lds r22,rgblight_ranges+4
 3039 00ec 70E0      		ldi r23,0
1096:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 3040               		.loc 1 1096 25 view .LVU696
 3041 00ee 0E94 0000 		call __divmodhi4
 3042 00f2 00C0      		rjmp .L148
 3043               		.cfi_endproc
 3044               	.LFE175:
 3046               		.section	.text.rgblight_effect_knight,"ax",@progbits
 3047               	.global	rgblight_effect_knight
 3049               	rgblight_effect_knight:
 3050               	.LVL202:
 3051               	.LFB176:
1107:quantum/rgblight.c ****     static int8_t low_bound  = 0;
 3052               		.loc 1 1107 55 is_stmt 1 view -0
 3053               		.cfi_startproc
1107:quantum/rgblight.c ****     static int8_t low_bound  = 0;
 3054               		.loc 1 1107 55 is_stmt 0 view .LVU698
 3055 0000 0F93      		push r16
 3056               	.LCFI63:
 3057               		.cfi_def_cfa_offset 3
 3058               		.cfi_offset 16, -2
 3059 0002 1F93      		push r17
 3060               	.LCFI64:
 3061               		.cfi_def_cfa_offset 4
 3062               		.cfi_offset 17, -3
 3063 0004 CF93      		push r28
 3064               	.LCFI65:
 3065               		.cfi_def_cfa_offset 5
 3066               		.cfi_offset 28, -4
 3067 0006 DF93      		push r29
 3068               	.LCFI66:
 3069               		.cfi_def_cfa_offset 6
 3070               		.cfi_offset 29, -5
 3071               	/* prologue: function */
 3072               	/* frame size = 0 */
 3073               	/* stack size = 4 */
 3074               	.L__stack_usage = 4
1108:quantum/rgblight.c ****     static int8_t high_bound = RGBLIGHT_EFFECT_KNIGHT_LENGTH - 1;
 3075               		.loc 1 1108 5 is_stmt 1 view .LVU699
1109:quantum/rgblight.c ****     static int8_t increment  = 1;
 3076               		.loc 1 1109 5 view .LVU700
1110:quantum/rgblight.c ****     uint8_t       i, cur;
 3077               		.loc 1 1110 5 view .LVU701
1111:quantum/rgblight.c **** 
 3078               		.loc 1 1111 5 view .LVU702
1122:quantum/rgblight.c ****         led[i].r = 0;
 3079               		.loc 1 1122 5 view .LVU703
1122:quantum/rgblight.c ****         led[i].r = 0;
 3080               		.loc 1 1122 12 is_stmt 0 view .LVU704
 3081 0008 8091 0000 		lds r24,rgblight_ranges+2
 3082               	.LVL203:
1122:quantum/rgblight.c ****         led[i].r = 0;
 3083               		.loc 1 1122 67 view .LVU705
 3084 000c 9091 0000 		lds r25,rgblight_ranges+3
 3085 0010 23E0      		ldi r18,lo8(3)
 3086 0012 829F      		mul r24,r18
 3087 0014 F001      		movw r30,r0
 3088 0016 1124      		clr __zero_reg__
 3089 0018 E050      		subi r30,lo8(-(led))
 3090 001a F040      		sbci r31,hi8(-(led))
 3091               	.L150:
1122:quantum/rgblight.c ****         led[i].r = 0;
 3092               		.loc 1 1122 48 is_stmt 1 discriminator 1 view .LVU706
1122:quantum/rgblight.c ****         led[i].r = 0;
 3093               		.loc 1 1122 5 is_stmt 0 discriminator 1 view .LVU707
 3094 001c 8917      		cp r24,r25
 3095 001e 00F0      		brlo .L151
1131:quantum/rgblight.c ****         cur = (i + RGBLIGHT_EFFECT_KNIGHT_OFFSET) % rgblight_ranges.effect_num_leds + rgblight_rang
 3096               		.loc 1 1131 12 view .LVU708
 3097 0020 C0E0      		ldi r28,0
1135:quantum/rgblight.c ****         } else {
 3098               		.loc 1 1135 13 view .LVU709
 3099 0022 D3E0      		ldi r29,lo8(3)
 3100               	.LVL204:
 3101               	.L152:
1131:quantum/rgblight.c ****         cur = (i + RGBLIGHT_EFFECT_KNIGHT_OFFSET) % rgblight_ranges.effect_num_leds + rgblight_rang
 3102               		.loc 1 1131 17 is_stmt 1 discriminator 1 view .LVU710
1131:quantum/rgblight.c ****         cur = (i + RGBLIGHT_EFFECT_KNIGHT_OFFSET) % rgblight_ranges.effect_num_leds + rgblight_rang
 3103               		.loc 1 1131 21 is_stmt 0 discriminator 1 view .LVU711
 3104 0024 6091 0000 		lds r22,rgblight_ranges+4
1131:quantum/rgblight.c ****         cur = (i + RGBLIGHT_EFFECT_KNIGHT_OFFSET) % rgblight_ranges.effect_num_leds + rgblight_rang
 3105               		.loc 1 1131 5 discriminator 1 view .LVU712
 3106 0028 C617      		cp r28,r22
 3107 002a 00F0      		brlo .L155
1145:quantum/rgblight.c **** 
 3108               		.loc 1 1145 5 is_stmt 1 view .LVU713
 3109 002c 0E94 0000 		call rgblight_set
 3110               	.LVL205:
1149:quantum/rgblight.c ****     high_bound += increment;
 3111               		.loc 1 1149 5 view .LVU714
1149:quantum/rgblight.c ****     high_bound += increment;
 3112               		.loc 1 1149 15 is_stmt 0 view .LVU715
 3113 0030 2091 0000 		lds r18,increment.3420
 3114 0034 8091 0000 		lds r24,low_bound.3418
 3115 0038 820F      		add r24,r18
 3116 003a 8093 0000 		sts low_bound.3418,r24
1150:quantum/rgblight.c **** 
 3117               		.loc 1 1150 5 is_stmt 1 view .LVU716
1150:quantum/rgblight.c **** 
 3118               		.loc 1 1150 16 is_stmt 0 view .LVU717
 3119 003e 9091 0000 		lds r25,high_bound.3419
 3120 0042 920F      		add r25,r18
 3121 0044 9093 0000 		sts high_bound.3419,r25
1152:quantum/rgblight.c ****         increment = -increment;
 3122               		.loc 1 1152 5 is_stmt 1 view .LVU718
1152:quantum/rgblight.c ****         increment = -increment;
 3123               		.loc 1 1152 8 is_stmt 0 view .LVU719
 3124 0048 1916      		cp __zero_reg__,r25
 3125 004a 04F4      		brge .L156
1152:quantum/rgblight.c ****         increment = -increment;
 3126               		.loc 1 1152 38 discriminator 1 view .LVU720
 3127 004c 082E      		mov __tmp_reg__,r24
 3128 004e 000C      		lsl r0
 3129 0050 990B      		sbc r25,r25
1152:quantum/rgblight.c ****         increment = -increment;
 3130               		.loc 1 1152 41 discriminator 1 view .LVU721
 3131 0052 4091 0000 		lds r20,rgblight_ranges+4
1152:quantum/rgblight.c ****         increment = -increment;
 3132               		.loc 1 1152 72 discriminator 1 view .LVU722
 3133 0056 4150      		subi r20,1
 3134 0058 550B      		sbc r21,r21
1152:quantum/rgblight.c ****         increment = -increment;
 3135               		.loc 1 1152 25 discriminator 1 view .LVU723
 3136 005a 8417      		cp r24,r20
 3137 005c 9507      		cpc r25,r21
 3138 005e 04F0      		brlt .L149
 3139               	.L156:
1153:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 3140               		.loc 1 1153 9 is_stmt 1 view .LVU724
1153:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 3141               		.loc 1 1153 19 is_stmt 0 view .LVU725
 3142 0060 2195      		neg r18
 3143 0062 2093 0000 		sts increment.3420,r18
 3144               	.L149:
 3145               	/* epilogue start */
1160:quantum/rgblight.c **** #endif
 3146               		.loc 1 1160 1 view .LVU726
 3147 0066 DF91      		pop r29
 3148 0068 CF91      		pop r28
 3149               	.LVL206:
1160:quantum/rgblight.c **** #endif
 3150               		.loc 1 1160 1 view .LVU727
 3151 006a 1F91      		pop r17
 3152 006c 0F91      		pop r16
 3153 006e 0895      		ret
 3154               	.LVL207:
 3155               	.L151:
1123:quantum/rgblight.c ****         led[i].g = 0;
 3156               		.loc 1 1123 9 is_stmt 1 discriminator 3 view .LVU728
1123:quantum/rgblight.c ****         led[i].g = 0;
 3157               		.loc 1 1123 18 is_stmt 0 discriminator 3 view .LVU729
 3158 0070 1182      		std Z+1,__zero_reg__
1124:quantum/rgblight.c ****         led[i].b = 0;
 3159               		.loc 1 1124 9 is_stmt 1 discriminator 3 view .LVU730
1124:quantum/rgblight.c ****         led[i].b = 0;
 3160               		.loc 1 1124 18 is_stmt 0 discriminator 3 view .LVU731
 3161 0072 1082      		st Z,__zero_reg__
1125:quantum/rgblight.c **** #    ifdef RGBW
 3162               		.loc 1 1125 9 is_stmt 1 discriminator 3 view .LVU732
1125:quantum/rgblight.c **** #    ifdef RGBW
 3163               		.loc 1 1125 18 is_stmt 0 discriminator 3 view .LVU733
 3164 0074 1282      		std Z+2,__zero_reg__
1122:quantum/rgblight.c ****         led[i].r = 0;
 3165               		.loc 1 1122 84 is_stmt 1 discriminator 3 view .LVU734
1122:quantum/rgblight.c ****         led[i].r = 0;
 3166               		.loc 1 1122 85 is_stmt 0 discriminator 3 view .LVU735
 3167 0076 8F5F      		subi r24,lo8(-(1))
 3168               	.LVL208:
1122:quantum/rgblight.c ****         led[i].r = 0;
 3169               		.loc 1 1122 85 discriminator 3 view .LVU736
 3170 0078 3396      		adiw r30,3
 3171 007a 00C0      		rjmp .L150
 3172               	.LVL209:
 3173               	.L155:
1132:quantum/rgblight.c **** 
 3174               		.loc 1 1132 9 is_stmt 1 view .LVU737
1132:quantum/rgblight.c **** 
 3175               		.loc 1 1132 18 is_stmt 0 view .LVU738
 3176 007c 0C2F      		mov r16,r28
 3177 007e 10E0      		ldi r17,0
1132:quantum/rgblight.c **** 
 3178               		.loc 1 1132 68 view .LVU739
 3179 0080 70E0      		ldi r23,0
1132:quantum/rgblight.c **** 
 3180               		.loc 1 1132 51 view .LVU740
 3181 0082 C801      		movw r24,r16
 3182 0084 0E94 0000 		call __divmodhi4
1132:quantum/rgblight.c **** 
 3183               		.loc 1 1132 13 view .LVU741
 3184 0088 2091 0000 		lds r18,rgblight_ranges+2
 3185 008c 820F      		add r24,r18
 3186               	.LVL210:
1134:quantum/rgblight.c ****             sethsv(rgblight_config.hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[
 3187               		.loc 1 1134 9 is_stmt 1 view .LVU742
 3188 008e 482F      		mov r20,r24
 3189 0090 50E0      		ldi r21,0
1134:quantum/rgblight.c ****             sethsv(rgblight_config.hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[
 3190               		.loc 1 1134 15 is_stmt 0 view .LVU743
 3191 0092 2091 0000 		lds r18,low_bound.3418
 3192 0096 022E      		mov __tmp_reg__,r18
 3193 0098 000C      		lsl r0
 3194 009a 330B      		sbc r19,r19
1134:quantum/rgblight.c ****             sethsv(rgblight_config.hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[
 3195               		.loc 1 1134 12 view .LVU744
 3196 009c 0217      		cp r16,r18
 3197 009e 1307      		cpc r17,r19
 3198 00a0 04F0      		brlt .L153
 3199               	.LVL211:
1134:quantum/rgblight.c ****             sethsv(rgblight_config.hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[
 3200               		.loc 1 1134 33 discriminator 1 view .LVU745
 3201 00a2 2091 0000 		lds r18,high_bound.3419
 3202 00a6 022E      		mov __tmp_reg__,r18
 3203 00a8 000C      		lsl r0
 3204 00aa 330B      		sbc r19,r19
1134:quantum/rgblight.c ****             sethsv(rgblight_config.hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[
 3205               		.loc 1 1134 28 discriminator 1 view .LVU746
 3206 00ac 2017      		cp r18,r16
 3207 00ae 3107      		cpc r19,r17
 3208 00b0 04F0      		brlt .L153
1135:quantum/rgblight.c ****         } else {
 3209               		.loc 1 1135 13 is_stmt 1 view .LVU747
 3210               	.LVL212:
 3211               	.LBB106:
 3212               	.LBI106:
 132:quantum/rgblight.c **** 
 3213               		.loc 1 132 6 view .LVU748
 3214               	.LBB107:
 132:quantum/rgblight.c **** 
 3215               		.loc 1 132 70 view .LVU749
 3216               	.LBE107:
 3217               	.LBE106:
1135:quantum/rgblight.c ****         } else {
 3218               		.loc 1 1135 13 is_stmt 0 view .LVU750
 3219 00b2 8D9F      		mul r24,r29
 3220 00b4 9001      		movw r18,r0
 3221 00b6 1124      		clr __zero_reg__
 3222 00b8 2050      		subi r18,lo8(-(led))
 3223 00ba 3040      		sbci r19,hi8(-(led))
 3224               	.LBB109:
 3225               	.LBB108:
 132:quantum/rgblight.c **** 
 3226               		.loc 1 132 70 view .LVU751
 3227 00bc 4091 0000 		lds r20,rgblight_config+3
 3228 00c0 6091 0000 		lds r22,rgblight_config+2
 3229 00c4 8091 0000 		lds r24,rgblight_config+1
 3230               	.LVL213:
 132:quantum/rgblight.c **** 
 3231               		.loc 1 132 70 view .LVU752
 3232 00c8 0E94 0000 		call sethsv_raw
 3233               	.LVL214:
 3234               	.L154:
 132:quantum/rgblight.c **** 
 3235               		.loc 1 132 70 view .LVU753
 3236               	.LBE108:
 3237               	.LBE109:
1131:quantum/rgblight.c ****         cur = (i + RGBLIGHT_EFFECT_KNIGHT_OFFSET) % rgblight_ranges.effect_num_leds + rgblight_rang
 3238               		.loc 1 1131 53 is_stmt 1 discriminator 2 view .LVU754
1131:quantum/rgblight.c ****         cur = (i + RGBLIGHT_EFFECT_KNIGHT_OFFSET) % rgblight_ranges.effect_num_leds + rgblight_rang
 3239               		.loc 1 1131 54 is_stmt 0 discriminator 2 view .LVU755
 3240 00cc CF5F      		subi r28,lo8(-(1))
 3241               	.LVL215:
1131:quantum/rgblight.c ****         cur = (i + RGBLIGHT_EFFECT_KNIGHT_OFFSET) % rgblight_ranges.effect_num_leds + rgblight_rang
 3242               		.loc 1 1131 54 discriminator 2 view .LVU756
 3243 00ce 00C0      		rjmp .L152
 3244               	.LVL216:
 3245               	.L153:
1137:quantum/rgblight.c ****             led[cur].g = 0;
 3246               		.loc 1 1137 13 is_stmt 1 view .LVU757
1137:quantum/rgblight.c ****             led[cur].g = 0;
 3247               		.loc 1 1137 24 is_stmt 0 view .LVU758
 3248 00d0 FA01      		movw r30,r20
 3249 00d2 EE0F      		lsl r30
 3250 00d4 FF1F      		rol r31
 3251 00d6 E40F      		add r30,r20
 3252 00d8 F51F      		adc r31,r21
 3253 00da E050      		subi r30,lo8(-(led))
 3254 00dc F040      		sbci r31,hi8(-(led))
 3255 00de 1182      		std Z+1,__zero_reg__
1138:quantum/rgblight.c ****             led[cur].b = 0;
 3256               		.loc 1 1138 13 is_stmt 1 view .LVU759
1138:quantum/rgblight.c ****             led[cur].b = 0;
 3257               		.loc 1 1138 24 is_stmt 0 view .LVU760
 3258 00e0 1082      		st Z,__zero_reg__
1139:quantum/rgblight.c **** #    ifdef RGBW
 3259               		.loc 1 1139 13 is_stmt 1 view .LVU761
1139:quantum/rgblight.c **** #    ifdef RGBW
 3260               		.loc 1 1139 24 is_stmt 0 view .LVU762
 3261 00e2 1282      		std Z+2,__zero_reg__
 3262 00e4 00C0      		rjmp .L154
 3263               		.cfi_endproc
 3264               	.LFE176:
 3266               		.section	.text.rgblight_effect_christmas,"ax",@progbits
 3267               	.global	rgblight_effect_christmas
 3269               	rgblight_effect_christmas:
 3270               	.LVL217:
 3271               	.LFB177:
1169:quantum/rgblight.c ****     static int8_t increment = 1;
 3272               		.loc 1 1169 58 is_stmt 1 view -0
 3273               		.cfi_startproc
1169:quantum/rgblight.c ****     static int8_t increment = 1;
 3274               		.loc 1 1169 58 is_stmt 0 view .LVU764
 3275 0000 8F92      		push r8
 3276               	.LCFI67:
 3277               		.cfi_def_cfa_offset 3
 3278               		.cfi_offset 8, -2
 3279 0002 9F92      		push r9
 3280               	.LCFI68:
 3281               		.cfi_def_cfa_offset 4
 3282               		.cfi_offset 9, -3
 3283 0004 AF92      		push r10
 3284               	.LCFI69:
 3285               		.cfi_def_cfa_offset 5
 3286               		.cfi_offset 10, -4
 3287 0006 BF92      		push r11
 3288               	.LCFI70:
 3289               		.cfi_def_cfa_offset 6
 3290               		.cfi_offset 11, -5
 3291 0008 CF92      		push r12
 3292               	.LCFI71:
 3293               		.cfi_def_cfa_offset 7
 3294               		.cfi_offset 12, -6
 3295 000a DF92      		push r13
 3296               	.LCFI72:
 3297               		.cfi_def_cfa_offset 8
 3298               		.cfi_offset 13, -7
 3299 000c EF92      		push r14
 3300               	.LCFI73:
 3301               		.cfi_def_cfa_offset 9
 3302               		.cfi_offset 14, -8
 3303 000e FF92      		push r15
 3304               	.LCFI74:
 3305               		.cfi_def_cfa_offset 10
 3306               		.cfi_offset 15, -9
 3307 0010 0F93      		push r16
 3308               	.LCFI75:
 3309               		.cfi_def_cfa_offset 11
 3310               		.cfi_offset 16, -10
 3311 0012 1F93      		push r17
 3312               	.LCFI76:
 3313               		.cfi_def_cfa_offset 12
 3314               		.cfi_offset 17, -11
 3315 0014 CF93      		push r28
 3316               	.LCFI77:
 3317               		.cfi_def_cfa_offset 13
 3318               		.cfi_offset 28, -12
 3319 0016 DF93      		push r29
 3320               	.LCFI78:
 3321               		.cfi_def_cfa_offset 14
 3322               		.cfi_offset 29, -13
 3323               	/* prologue: function */
 3324               	/* frame size = 0 */
 3325               	/* stack size = 12 */
 3326               	.L__stack_usage = 12
 3327 0018 EC01      		movw r28,r24
1170:quantum/rgblight.c ****     const uint8_t max_pos   = 32;
 3328               		.loc 1 1170 5 is_stmt 1 view .LVU765
1171:quantum/rgblight.c ****     const uint8_t hue_green = 85;
 3329               		.loc 1 1171 5 view .LVU766
 3330               	.LVL218:
1172:quantum/rgblight.c **** 
 3331               		.loc 1 1172 5 view .LVU767
1174:quantum/rgblight.c ****     uint8_t  hue, val;
 3332               		.loc 1 1174 5 view .LVU768
1175:quantum/rgblight.c ****     uint8_t  i;
 3333               		.loc 1 1175 5 view .LVU769
1176:quantum/rgblight.c **** 
 3334               		.loc 1 1176 5 view .LVU770
1180:quantum/rgblight.c ****     hue = ((uint32_t)hue_green) * xa / (xa + CUBED((uint32_t)(max_pos - anim->pos)));
 3335               		.loc 1 1180 5 view .LVU771
1180:quantum/rgblight.c ****     hue = ((uint32_t)hue_green) * xa / (xa + CUBED((uint32_t)(max_pos - anim->pos)));
 3336               		.loc 1 1180 11 is_stmt 0 view .LVU772
 3337 001a 4C81      		ldd r20,Y+4
 3338 001c 042F      		mov r16,r20
 3339 001e 10E0      		ldi r17,0
 3340 0020 9801      		movw r18,r16
 3341 0022 D801      		movw r26,r16
 3342 0024 0E94 0000 		call __umulhisi3
1180:quantum/rgblight.c ****     hue = ((uint32_t)hue_green) * xa / (xa + CUBED((uint32_t)(max_pos - anim->pos)));
 3343               		.loc 1 1180 9 view .LVU773
 3344 0028 9B01      		movw r18,r22
 3345 002a AC01      		movw r20,r24
 3346 002c 0E94 0000 		call __muluhisi3
 3347 0030 4B01      		movw r8,r22
 3348 0032 5C01      		movw r10,r24
 3349               	.LVL219:
1181:quantum/rgblight.c ****     // Additionally, these interpolated colors get shown with a slightly darker value, to make them
 3350               		.loc 1 1181 5 is_stmt 1 view .LVU774
1181:quantum/rgblight.c ****     // Additionally, these interpolated colors get shown with a slightly darker value, to make them
 3351               		.loc 1 1181 46 is_stmt 0 view .LVU775
 3352 0034 E0E2      		ldi r30,lo8(32)
 3353 0036 F0E0      		ldi r31,0
 3354 0038 E01B      		sub r30,r16
 3355 003a F10B      		sbc r31,r17
1181:quantum/rgblight.c ****     // Additionally, these interpolated colors get shown with a slightly darker value, to make them
 3356               		.loc 1 1181 33 view .LVU776
 3357 003c A5E5      		ldi r26,lo8(85)
 3358 003e B0E0      		ldi r27,0
 3359 0040 AC01      		movw r20,r24
 3360 0042 9B01      		movw r18,r22
 3361 0044 0E94 0000 		call __muluhisi3
 3362 0048 6B01      		movw r12,r22
 3363 004a 7C01      		movw r14,r24
1181:quantum/rgblight.c ****     // Additionally, these interpolated colors get shown with a slightly darker value, to make them
 3364               		.loc 1 1181 46 view .LVU777
 3365 004c 9F01      		movw r18,r30
 3366 004e DF01      		movw r26,r30
 3367 0050 0E94 0000 		call __mulhisi3
 3368 0054 9B01      		movw r18,r22
 3369 0056 AC01      		movw r20,r24
 3370 0058 0E94 0000 		call __mulshisi3
1181:quantum/rgblight.c ****     // Additionally, these interpolated colors get shown with a slightly darker value, to make them
 3371               		.loc 1 1181 44 view .LVU778
 3372 005c 9B01      		movw r18,r22
 3373 005e AC01      		movw r20,r24
 3374 0060 280D      		add r18,r8
 3375 0062 391D      		adc r19,r9
 3376 0064 4A1D      		adc r20,r10
 3377 0066 5B1D      		adc r21,r11
1181:quantum/rgblight.c ****     // Additionally, these interpolated colors get shown with a slightly darker value, to make them
 3378               		.loc 1 1181 38 view .LVU779
 3379 0068 C701      		movw r24,r14
 3380               	.LVL220:
1181:quantum/rgblight.c ****     // Additionally, these interpolated colors get shown with a slightly darker value, to make them
 3381               		.loc 1 1181 38 view .LVU780
 3382 006a B601      		movw r22,r12
 3383 006c 0E94 0000 		call __udivmodsi4
1181:quantum/rgblight.c ****     // Additionally, these interpolated colors get shown with a slightly darker value, to make them
 3384               		.loc 1 1181 9 view .LVU781
 3385 0070 F22E      		mov r15,r18
 3386               	.LVL221:
1183:quantum/rgblight.c **** 
 3387               		.loc 1 1183 5 is_stmt 1 view .LVU782
 3388 0072 822F      		mov r24,r18
 3389 0074 90E0      		ldi r25,0
1183:quantum/rgblight.c **** 
 3390               		.loc 1 1183 9 is_stmt 0 view .LVU783
 3391 0076 39E2      		ldi r19,lo8(41)
 3392 0078 3F15      		cp r19,r15
 3393 007a 00F0      		brlo .L159
 3394               	.LVL222:
1183:quantum/rgblight.c **** 
 3395               		.loc 1 1183 20 discriminator 1 view .LVU784
 3396 007c 43E0      		ldi r20,lo8(3)
 3397 007e 249F      		mul r18,r20
 3398 0080 9001      		movw r18,r0
 3399 0082 1124      		clr __zero_reg__
 3400               	.L162:
1183:quantum/rgblight.c **** 
 3401               		.loc 1 1183 68 discriminator 2 view .LVU785
 3402 0084 3595      		asr r19
 3403 0086 2795      		ror r18
1183:quantum/rgblight.c **** 
 3404               		.loc 1 1183 9 discriminator 2 view .LVU786
 3405 0088 122F      		mov r17,r18
 3406 008a 1095      		com r17
 3407               	.LVL223:
1185:quantum/rgblight.c ****         uint8_t local_hue = (i / RGBLIGHT_EFFECT_CHRISTMAS_STEP) % 2 ? hue : hue_green - hue;
 3408               		.loc 1 1185 5 is_stmt 1 discriminator 2 view .LVU787
1185:quantum/rgblight.c ****         uint8_t local_hue = (i / RGBLIGHT_EFFECT_CHRISTMAS_STEP) % 2 ? hue : hue_green - hue;
 3409               		.loc 1 1185 12 is_stmt 0 discriminator 2 view .LVU788
 3410 008c 00E0      		ldi r16,0
 3411               	.LBB113:
1186:quantum/rgblight.c ****         sethsv(local_hue, rgblight_config.sat, val, (LED_TYPE *)&led[i + rgblight_ranges.effect_sta
 3412               		.loc 1 1186 17 discriminator 2 view .LVU789
 3413 008e 85E5      		ldi r24,lo8(85)
 3414 0090 E82E      		mov r14,r24
 3415 0092 EF18      		sub r14,r15
 3416               	.LVL224:
 3417               	.L163:
1186:quantum/rgblight.c ****         sethsv(local_hue, rgblight_config.sat, val, (LED_TYPE *)&led[i + rgblight_ranges.effect_sta
 3418               		.loc 1 1186 17 discriminator 2 view .LVU790
 3419               	.LBE113:
1185:quantum/rgblight.c ****         uint8_t local_hue = (i / RGBLIGHT_EFFECT_CHRISTMAS_STEP) % 2 ? hue : hue_green - hue;
 3420               		.loc 1 1185 17 is_stmt 1 discriminator 2 view .LVU791
1185:quantum/rgblight.c ****         uint8_t local_hue = (i / RGBLIGHT_EFFECT_CHRISTMAS_STEP) % 2 ? hue : hue_green - hue;
 3421               		.loc 1 1185 5 is_stmt 0 discriminator 2 view .LVU792
 3422 0094 8091 0000 		lds r24,rgblight_ranges+4
 3423 0098 0817      		cp r16,r24
 3424 009a 00F0      		brlo .L165
1189:quantum/rgblight.c **** 
 3425               		.loc 1 1189 5 is_stmt 1 view .LVU793
 3426 009c 0E94 0000 		call rgblight_set
 3427               	.LVL225:
1191:quantum/rgblight.c ****         increment = 1;
 3428               		.loc 1 1191 5 view .LVU794
1191:quantum/rgblight.c ****         increment = 1;
 3429               		.loc 1 1191 13 is_stmt 0 view .LVU795
 3430 00a0 9C81      		ldd r25,Y+4
1192:quantum/rgblight.c ****     } else if (anim->pos == max_pos) {
 3431               		.loc 1 1192 19 view .LVU796
 3432 00a2 81E0      		ldi r24,lo8(1)
1191:quantum/rgblight.c ****         increment = 1;
 3433               		.loc 1 1191 8 view .LVU797
 3434 00a4 9923      		tst r25
 3435 00a6 01F0      		breq .L169
1193:quantum/rgblight.c ****         increment = -1;
 3436               		.loc 1 1193 12 is_stmt 1 view .LVU798
1193:quantum/rgblight.c ****         increment = -1;
 3437               		.loc 1 1193 15 is_stmt 0 view .LVU799
 3438 00a8 9032      		cpi r25,lo8(32)
 3439 00aa 01F4      		brne .L167
1194:quantum/rgblight.c ****     }
 3440               		.loc 1 1194 9 is_stmt 1 view .LVU800
1194:quantum/rgblight.c ****     }
 3441               		.loc 1 1194 19 is_stmt 0 view .LVU801
 3442 00ac 8FEF      		ldi r24,lo8(-1)
 3443               	.L169:
 3444 00ae 8093 0000 		sts increment.3432,r24
 3445               	.L167:
1196:quantum/rgblight.c **** }
 3446               		.loc 1 1196 5 is_stmt 1 view .LVU802
1196:quantum/rgblight.c **** }
 3447               		.loc 1 1196 15 is_stmt 0 view .LVU803
 3448 00b2 8091 0000 		lds r24,increment.3432
 3449 00b6 890F      		add r24,r25
 3450 00b8 8C83      		std Y+4,r24
 3451               	/* epilogue start */
1197:quantum/rgblight.c **** #endif
 3452               		.loc 1 1197 1 view .LVU804
 3453 00ba DF91      		pop r29
 3454 00bc CF91      		pop r28
 3455 00be 1F91      		pop r17
 3456               	.LVL226:
1197:quantum/rgblight.c **** #endif
 3457               		.loc 1 1197 1 view .LVU805
 3458 00c0 0F91      		pop r16
 3459               	.LVL227:
1197:quantum/rgblight.c **** #endif
 3460               		.loc 1 1197 1 view .LVU806
 3461 00c2 FF90      		pop r15
 3462               	.LVL228:
1197:quantum/rgblight.c **** #endif
 3463               		.loc 1 1197 1 view .LVU807
 3464 00c4 EF90      		pop r14
 3465 00c6 DF90      		pop r13
 3466 00c8 CF90      		pop r12
 3467 00ca BF90      		pop r11
 3468 00cc AF90      		pop r10
 3469               	.LVL229:
1197:quantum/rgblight.c **** #endif
 3470               		.loc 1 1197 1 view .LVU808
 3471 00ce 9F90      		pop r9
 3472 00d0 8F90      		pop r8
 3473               	.LVL230:
1197:quantum/rgblight.c **** #endif
 3474               		.loc 1 1197 1 view .LVU809
 3475 00d2 0895      		ret
 3476               	.LVL231:
 3477               	.L159:
1183:quantum/rgblight.c **** 
 3478               		.loc 1 1183 61 discriminator 2 view .LVU810
 3479 00d4 25E5      		ldi r18,lo8(85)
 3480 00d6 30E0      		ldi r19,0
 3481 00d8 B901      		movw r22,r18
 3482 00da 681B      		sub r22,r24
 3483 00dc 790B      		sbc r23,r25
1183:quantum/rgblight.c **** 
 3484               		.loc 1 1183 20 discriminator 2 view .LVU811
 3485 00de 9B01      		movw r18,r22
 3486 00e0 220F      		lsl r18
 3487 00e2 331F      		rol r19
 3488 00e4 260F      		add r18,r22
 3489 00e6 371F      		adc r19,r23
1183:quantum/rgblight.c **** 
 3490               		.loc 1 1183 68 discriminator 2 view .LVU812
 3491 00e8 37FF      		sbrs r19,7
 3492 00ea 00C0      		rjmp .L162
 3493 00ec 2F5F      		subi r18,-1
 3494 00ee 3F4F      		sbci r19,-1
 3495 00f0 00C0      		rjmp .L162
 3496               	.LVL232:
 3497               	.L165:
 3498               	.LBB118:
1186:quantum/rgblight.c ****         sethsv(local_hue, rgblight_config.sat, val, (LED_TYPE *)&led[i + rgblight_ranges.effect_sta
 3499               		.loc 1 1186 9 is_stmt 1 view .LVU813
1186:quantum/rgblight.c ****         sethsv(local_hue, rgblight_config.sat, val, (LED_TYPE *)&led[i + rgblight_ranges.effect_sta
 3500               		.loc 1 1186 17 is_stmt 0 view .LVU814
 3501 00f2 8E2D      		mov r24,r14
 3502 00f4 01FD      		sbrc r16,1
 3503               	.LBE118:
1181:quantum/rgblight.c ****     // Additionally, these interpolated colors get shown with a slightly darker value, to make them
 3504               		.loc 1 1181 9 view .LVU815
 3505 00f6 8F2D      		mov r24,r15
 3506               	.L164:
 3507               	.LVL233:
 3508               	.LBB119:
1187:quantum/rgblight.c ****     }
 3509               		.loc 1 1187 9 is_stmt 1 discriminator 4 view .LVU816
 3510               	.LBB114:
 3511               	.LBI114:
 132:quantum/rgblight.c **** 
 3512               		.loc 1 132 6 discriminator 4 view .LVU817
 3513               	.LBB115:
 132:quantum/rgblight.c **** 
 3514               		.loc 1 132 70 discriminator 4 view .LVU818
 3515               	.LBE115:
 3516               	.LBE114:
1187:quantum/rgblight.c ****     }
 3517               		.loc 1 1187 89 is_stmt 0 discriminator 4 view .LVU819
 3518 00f8 2091 0000 		lds r18,rgblight_ranges+2
1187:quantum/rgblight.c ****     }
 3519               		.loc 1 1187 72 discriminator 4 view .LVU820
 3520 00fc 622F      		mov r22,r18
 3521 00fe 600F      		add r22,r16
 3522 0100 7727      		clr r23
 3523 0102 771F      		rol r23
1187:quantum/rgblight.c ****     }
 3524               		.loc 1 1187 9 discriminator 4 view .LVU821
 3525 0104 9B01      		movw r18,r22
 3526 0106 220F      		lsl r18
 3527 0108 331F      		rol r19
 3528 010a 260F      		add r18,r22
 3529 010c 371F      		adc r19,r23
 3530 010e 2050      		subi r18,lo8(-(led))
 3531 0110 3040      		sbci r19,hi8(-(led))
 3532               	.LBB117:
 3533               	.LBB116:
 132:quantum/rgblight.c **** 
 3534               		.loc 1 132 70 discriminator 4 view .LVU822
 3535 0112 412F      		mov r20,r17
 3536 0114 6091 0000 		lds r22,rgblight_config+2
 3537 0118 0E94 0000 		call sethsv_raw
 3538               	.LVL234:
 132:quantum/rgblight.c **** 
 3539               		.loc 1 132 70 discriminator 4 view .LVU823
 3540               	.LBE116:
 3541               	.LBE117:
 3542               	.LBE119:
1185:quantum/rgblight.c ****         uint8_t local_hue = (i / RGBLIGHT_EFFECT_CHRISTMAS_STEP) % 2 ? hue : hue_green - hue;
 3543               		.loc 1 1185 54 is_stmt 1 discriminator 4 view .LVU824
1185:quantum/rgblight.c ****         uint8_t local_hue = (i / RGBLIGHT_EFFECT_CHRISTMAS_STEP) % 2 ? hue : hue_green - hue;
 3544               		.loc 1 1185 55 is_stmt 0 discriminator 4 view .LVU825
 3545 011c 0F5F      		subi r16,lo8(-(1))
 3546               	.LVL235:
1185:quantum/rgblight.c ****         uint8_t local_hue = (i / RGBLIGHT_EFFECT_CHRISTMAS_STEP) % 2 ? hue : hue_green - hue;
 3547               		.loc 1 1185 55 discriminator 4 view .LVU826
 3548 011e 00C0      		rjmp .L163
 3549               		.cfi_endproc
 3550               	.LFE177:
 3552               		.section	.text.rgblight_effect_alternating,"ax",@progbits
 3553               	.global	rgblight_effect_alternating
 3555               	rgblight_effect_alternating:
 3556               	.LVL236:
 3557               	.LFB179:
1229:quantum/rgblight.c **** #endif
1230:quantum/rgblight.c **** 
1231:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_ALTERNATING
1232:quantum/rgblight.c **** void rgblight_effect_alternating(animation_status_t *anim) {
 3558               		.loc 1 1232 60 is_stmt 1 view -0
 3559               		.cfi_startproc
 3560               		.loc 1 1232 60 is_stmt 0 view .LVU828
 3561 0000 0F93      		push r16
 3562               	.LCFI79:
 3563               		.cfi_def_cfa_offset 3
 3564               		.cfi_offset 16, -2
 3565 0002 1F93      		push r17
 3566               	.LCFI80:
 3567               		.cfi_def_cfa_offset 4
 3568               		.cfi_offset 17, -3
 3569 0004 CF93      		push r28
 3570               	.LCFI81:
 3571               		.cfi_def_cfa_offset 5
 3572               		.cfi_offset 28, -4
 3573 0006 DF93      		push r29
 3574               	.LCFI82:
 3575               		.cfi_def_cfa_offset 6
 3576               		.cfi_offset 29, -5
 3577               	/* prologue: function */
 3578               	/* frame size = 0 */
 3579               	/* stack size = 4 */
 3580               	.L__stack_usage = 4
 3581 0008 EC01      		movw r28,r24
1233:quantum/rgblight.c ****     for (int i = 0; i < rgblight_ranges.effect_num_leds; i++) {
 3582               		.loc 1 1233 5 is_stmt 1 view .LVU829
 3583               	.LBB128:
 3584               		.loc 1 1233 10 view .LVU830
 3585               	.LVL237:
 3586               		.loc 1 1233 14 is_stmt 0 view .LVU831
 3587 000a 10E0      		ldi r17,0
 3588 000c 00E0      		ldi r16,0
 3589               	.LVL238:
 3590               	.L171:
 3591               		.loc 1 1233 21 is_stmt 1 discriminator 1 view .LVU832
 3592               		.loc 1 1233 40 is_stmt 0 discriminator 1 view .LVU833
 3593 000e 9091 0000 		lds r25,rgblight_ranges+4
 3594               		.loc 1 1233 5 discriminator 1 view .LVU834
 3595 0012 9017      		cp r25,r16
 3596 0014 1106      		cpc __zero_reg__,r17
 3597 0016 01F0      		breq .+2
 3598 0018 04F4      		brge .L175
 3599               	.LBE128:
1234:quantum/rgblight.c ****         LED_TYPE *ledp = led + i + rgblight_ranges.effect_start_pos;
1235:quantum/rgblight.c ****         if (i < rgblight_ranges.effect_num_leds / 2 && anim->pos) {
1236:quantum/rgblight.c ****             sethsv(rgblight_config.hue, rgblight_config.sat, rgblight_config.val, ledp);
1237:quantum/rgblight.c ****         } else if (i >= rgblight_ranges.effect_num_leds / 2 && !anim->pos) {
1238:quantum/rgblight.c ****             sethsv(rgblight_config.hue, rgblight_config.sat, rgblight_config.val, ledp);
1239:quantum/rgblight.c ****         } else {
1240:quantum/rgblight.c ****             sethsv(rgblight_config.hue, rgblight_config.sat, 0, ledp);
1241:quantum/rgblight.c ****         }
1242:quantum/rgblight.c ****     }
1243:quantum/rgblight.c ****     rgblight_set();
 3600               		.loc 1 1243 5 is_stmt 1 view .LVU835
 3601 001a 0E94 0000 		call rgblight_set
 3602               	.LVL239:
1244:quantum/rgblight.c ****     anim->pos = (anim->pos + 1) % 2;
 3603               		.loc 1 1244 5 view .LVU836
 3604               		.loc 1 1244 22 is_stmt 0 view .LVU837
 3605 001e 8C81      		ldd r24,Y+4
 3606 0020 90E0      		ldi r25,0
 3607               		.loc 1 1244 28 view .LVU838
 3608 0022 0196      		adiw r24,1
 3609               		.loc 1 1244 33 view .LVU839
 3610 0024 8170      		andi r24,1
 3611 0026 9927      		clr r25
 3612               		.loc 1 1244 15 view .LVU840
 3613 0028 8C83      		std Y+4,r24
 3614               	/* epilogue start */
1245:quantum/rgblight.c **** }
 3615               		.loc 1 1245 1 view .LVU841
 3616 002a DF91      		pop r29
 3617 002c CF91      		pop r28
 3618               	.LVL240:
 3619               		.loc 1 1245 1 view .LVU842
 3620 002e 1F91      		pop r17
 3621 0030 0F91      		pop r16
 3622               	.LVL241:
 3623               		.loc 1 1245 1 view .LVU843
 3624 0032 0895      		ret
 3625               	.LVL242:
 3626               	.L175:
 3627               	.LBB137:
 3628               	.LBB129:
1234:quantum/rgblight.c ****         LED_TYPE *ledp = led + i + rgblight_ranges.effect_start_pos;
 3629               		.loc 1 1234 9 is_stmt 1 view .LVU844
1234:quantum/rgblight.c ****         LED_TYPE *ledp = led + i + rgblight_ranges.effect_start_pos;
 3630               		.loc 1 1234 34 is_stmt 0 view .LVU845
 3631 0034 2091 0000 		lds r18,rgblight_ranges+2
 3632 0038 A801      		movw r20,r16
 3633 003a 420F      		add r20,r18
 3634 003c 511D      		adc r21,__zero_reg__
 3635 003e 9A01      		movw r18,r20
 3636 0040 220F      		lsl r18
 3637 0042 331F      		rol r19
 3638 0044 240F      		add r18,r20
 3639 0046 351F      		adc r19,r21
1234:quantum/rgblight.c ****         LED_TYPE *ledp = led + i + rgblight_ranges.effect_start_pos;
 3640               		.loc 1 1234 19 view .LVU846
 3641 0048 2050      		subi r18,lo8(-(led))
 3642 004a 3040      		sbci r19,hi8(-(led))
 3643               	.LVL243:
1235:quantum/rgblight.c ****             sethsv(rgblight_config.hue, rgblight_config.sat, rgblight_config.val, ledp);
 3644               		.loc 1 1235 9 is_stmt 1 view .LVU847
 3645 004c 4C81      		ldd r20,Y+4
 3646 004e 6091 0000 		lds r22,rgblight_config+2
 3647 0052 8091 0000 		lds r24,rgblight_config+1
1235:quantum/rgblight.c ****             sethsv(rgblight_config.hue, rgblight_config.sat, rgblight_config.val, ledp);
 3648               		.loc 1 1235 49 is_stmt 0 view .LVU848
 3649 0056 9695      		lsr r25
1235:quantum/rgblight.c ****             sethsv(rgblight_config.hue, rgblight_config.sat, rgblight_config.val, ledp);
 3650               		.loc 1 1235 12 view .LVU849
 3651 0058 9017      		cp r25,r16
 3652 005a 1106      		cpc __zero_reg__,r17
 3653 005c 01F0      		breq .L172
 3654 005e 04F0      		brlt .L172
1235:quantum/rgblight.c ****             sethsv(rgblight_config.hue, rgblight_config.sat, rgblight_config.val, ledp);
 3655               		.loc 1 1235 53 discriminator 1 view .LVU850
 3656 0060 4423      		tst r20
 3657 0062 01F0      		breq .L173
 3658               	.L180:
1238:quantum/rgblight.c ****         } else {
 3659               		.loc 1 1238 13 is_stmt 1 view .LVU851
 3660               	.LVL244:
 3661               	.LBB130:
 3662               	.LBI130:
 132:quantum/rgblight.c **** 
 3663               		.loc 1 132 6 view .LVU852
 3664               	.LBB131:
 132:quantum/rgblight.c **** 
 3665               		.loc 1 132 70 view .LVU853
 3666 0064 4091 0000 		lds r20,rgblight_config+3
 3667               	.LVL245:
 3668               	.L179:
 132:quantum/rgblight.c **** 
 3669               		.loc 1 132 70 is_stmt 0 view .LVU854
 3670               	.LBE131:
 3671               	.LBE130:
 3672               	.LBB132:
 3673               	.LBB133:
 3674 0068 0E94 0000 		call sethsv_raw
 3675               	.LVL246:
 132:quantum/rgblight.c **** 
 3676               		.loc 1 132 70 view .LVU855
 3677               	.LBE133:
 3678               	.LBE132:
 3679               	.LBE129:
1233:quantum/rgblight.c ****         LED_TYPE *ledp = led + i + rgblight_ranges.effect_start_pos;
 3680               		.loc 1 1233 58 is_stmt 1 view .LVU856
1233:quantum/rgblight.c ****         LED_TYPE *ledp = led + i + rgblight_ranges.effect_start_pos;
 3681               		.loc 1 1233 59 is_stmt 0 view .LVU857
 3682 006c 0F5F      		subi r16,-1
 3683 006e 1F4F      		sbci r17,-1
 3684               	.LVL247:
1233:quantum/rgblight.c ****         LED_TYPE *ledp = led + i + rgblight_ranges.effect_start_pos;
 3685               		.loc 1 1233 59 view .LVU858
 3686 0070 00C0      		rjmp .L171
 3687               	.LVL248:
 3688               	.L172:
 3689               	.LBB136:
1237:quantum/rgblight.c ****             sethsv(rgblight_config.hue, rgblight_config.sat, rgblight_config.val, ledp);
 3690               		.loc 1 1237 16 is_stmt 1 discriminator 1 view .LVU859
1237:quantum/rgblight.c ****             sethsv(rgblight_config.hue, rgblight_config.sat, rgblight_config.val, ledp);
 3691               		.loc 1 1237 61 is_stmt 0 discriminator 1 view .LVU860
 3692 0072 4423      		tst r20
 3693 0074 01F0      		breq .L180
 3694               	.L173:
1240:quantum/rgblight.c ****         }
 3695               		.loc 1 1240 13 is_stmt 1 view .LVU861
 3696               	.LVL249:
 3697               	.LBB135:
 3698               	.LBI132:
 132:quantum/rgblight.c **** 
 3699               		.loc 1 132 6 view .LVU862
 3700               	.LBB134:
 132:quantum/rgblight.c **** 
 3701               		.loc 1 132 70 view .LVU863
 3702 0076 40E0      		ldi r20,0
 3703 0078 00C0      		rjmp .L179
 3704               	.LBE134:
 3705               	.LBE135:
 3706               	.LBE136:
 3707               	.LBE137:
 3708               		.cfi_endproc
 3709               	.LFE179:
 3711               		.section	.text.rgblight_effect_twinkle,"ax",@progbits
 3712               	.global	rgblight_effect_twinkle
 3714               	rgblight_effect_twinkle:
 3715               	.LVL250:
 3716               	.LFB180:
1246:quantum/rgblight.c **** #endif
1247:quantum/rgblight.c **** 
1248:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_TWINKLE
1249:quantum/rgblight.c **** __attribute__((weak)) const uint8_t RGBLED_TWINKLE_INTERVALS[] PROGMEM = {50, 25, 10};
1250:quantum/rgblight.c **** 
1251:quantum/rgblight.c **** typedef struct PACKED {
1252:quantum/rgblight.c ****     HSV     hsv;
1253:quantum/rgblight.c ****     uint8_t life;
1254:quantum/rgblight.c ****     bool    up;
1255:quantum/rgblight.c **** } TwinkleState;
1256:quantum/rgblight.c **** 
1257:quantum/rgblight.c **** static TwinkleState led_twinkle_state[RGBLED_NUM];
1258:quantum/rgblight.c **** 
1259:quantum/rgblight.c **** void rgblight_effect_twinkle(animation_status_t *anim) {
 3717               		.loc 1 1259 56 view -0
 3718               		.cfi_startproc
 3719               		.loc 1 1259 56 is_stmt 0 view .LVU865
 3720 0000 8F92      		push r8
 3721               	.LCFI83:
 3722               		.cfi_def_cfa_offset 3
 3723               		.cfi_offset 8, -2
 3724 0002 9F92      		push r9
 3725               	.LCFI84:
 3726               		.cfi_def_cfa_offset 4
 3727               		.cfi_offset 9, -3
 3728 0004 AF92      		push r10
 3729               	.LCFI85:
 3730               		.cfi_def_cfa_offset 5
 3731               		.cfi_offset 10, -4
 3732 0006 BF92      		push r11
 3733               	.LCFI86:
 3734               		.cfi_def_cfa_offset 6
 3735               		.cfi_offset 11, -5
 3736 0008 CF92      		push r12
 3737               	.LCFI87:
 3738               		.cfi_def_cfa_offset 7
 3739               		.cfi_offset 12, -6
 3740 000a DF92      		push r13
 3741               	.LCFI88:
 3742               		.cfi_def_cfa_offset 8
 3743               		.cfi_offset 13, -7
 3744 000c EF92      		push r14
 3745               	.LCFI89:
 3746               		.cfi_def_cfa_offset 9
 3747               		.cfi_offset 14, -8
 3748 000e FF92      		push r15
 3749               	.LCFI90:
 3750               		.cfi_def_cfa_offset 10
 3751               		.cfi_offset 15, -9
 3752 0010 0F93      		push r16
 3753               	.LCFI91:
 3754               		.cfi_def_cfa_offset 11
 3755               		.cfi_offset 16, -10
 3756 0012 1F93      		push r17
 3757               	.LCFI92:
 3758               		.cfi_def_cfa_offset 12
 3759               		.cfi_offset 17, -11
 3760 0014 CF93      		push r28
 3761               	.LCFI93:
 3762               		.cfi_def_cfa_offset 13
 3763               		.cfi_offset 28, -12
 3764 0016 DF93      		push r29
 3765               	.LCFI94:
 3766               		.cfi_def_cfa_offset 14
 3767               		.cfi_offset 29, -13
 3768               	/* prologue: function */
 3769               	/* frame size = 0 */
 3770               	/* stack size = 12 */
 3771               	.L__stack_usage = 12
 3772 0018 FC01      		movw r30,r24
1260:quantum/rgblight.c ****     bool random_color = anim->delta / 3;
 3773               		.loc 1 1260 5 is_stmt 1 view .LVU866
 3774               		.loc 1 1260 29 is_stmt 0 view .LVU867
 3775 001a B280      		ldd r11,Z+2
 3776               	.LVL251:
1261:quantum/rgblight.c ****     bool restart      = anim->pos == 0;
 3777               		.loc 1 1261 5 is_stmt 1 view .LVU868
 3778               		.loc 1 1261 29 is_stmt 0 view .LVU869
 3779 001c 9480      		ldd r9,Z+4
 3780               	.LVL252:
1262:quantum/rgblight.c ****     anim->pos         = 1;
 3781               		.loc 1 1262 5 is_stmt 1 view .LVU870
 3782               		.loc 1 1262 23 is_stmt 0 view .LVU871
 3783 001e 81E0      		ldi r24,lo8(1)
 3784               	.LVL253:
 3785               		.loc 1 1262 23 view .LVU872
 3786 0020 8483      		std Z+4,r24
1263:quantum/rgblight.c **** 
1264:quantum/rgblight.c ****     for (uint8_t i = 0; i < rgblight_ranges.effect_num_leds; i++) {
 3787               		.loc 1 1264 5 is_stmt 1 view .LVU873
 3788               	.LBB143:
 3789               		.loc 1 1264 10 view .LVU874
 3790               	.LVL254:
 3791               		.loc 1 1264 18 is_stmt 0 view .LVU875
 3792 0022 00E0      		ldi r16,0
 3793               	.LBB144:
1265:quantum/rgblight.c ****         TwinkleState *t = &(led_twinkle_state[i]);
1266:quantum/rgblight.c ****         HSV *         c = &(t->hsv);
1267:quantum/rgblight.c ****         if (restart) {
1268:quantum/rgblight.c ****             // Restart
1269:quantum/rgblight.c ****             t->life  = 0;
1270:quantum/rgblight.c ****             t->hsv.v = 0;
1271:quantum/rgblight.c ****         } else if (t->life) {
 3794               		.loc 1 1271 21 view .LVU876
 3795 0024 15E0      		ldi r17,lo8(5)
1272:quantum/rgblight.c ****             // This LED is already on, either brightening or dimming
1273:quantum/rgblight.c ****             t->life--;
1274:quantum/rgblight.c ****             uint8_t on = t->up ? RGBLIGHT_EFFECT_TWINKLE_LIFE - t->life : t->life;
1275:quantum/rgblight.c ****             c->v       = (uint16_t)rgblight_config.val * on / RGBLIGHT_EFFECT_TWINKLE_LIFE;
1276:quantum/rgblight.c ****             if (t->life == 0 && t->up) {
1277:quantum/rgblight.c ****                 t->up   = false;
1278:quantum/rgblight.c ****                 t->life = RGBLIGHT_EFFECT_TWINKLE_LIFE;
1279:quantum/rgblight.c ****             }
1280:quantum/rgblight.c ****             if (!random_color) {
1281:quantum/rgblight.c ****                 c->h = rgblight_config.hue;
1282:quantum/rgblight.c ****                 c->s = rgblight_config.sat;
1283:quantum/rgblight.c ****             }
1284:quantum/rgblight.c ****         } else if (rand() < RAND_MAX * RGBLIGHT_EFFECT_TWINKLE_PROBABILITY) {
1285:quantum/rgblight.c ****             // This LED is off, but was randomly selected to start brightening
1286:quantum/rgblight.c ****             c->h    = random_color ? rand() % 0xFF : rgblight_config.hue;
1287:quantum/rgblight.c ****             c->s    = random_color ? (rand() % (rgblight_config.sat / 2)) + (rgblight_config.sat / 
1288:quantum/rgblight.c ****             c->v    = 0;
1289:quantum/rgblight.c ****             t->life = RGBLIGHT_EFFECT_TWINKLE_LIFE;
 3796               		.loc 1 1289 21 view .LVU877
 3797 0026 5BE4      		ldi r21,lo8(75)
 3798 0028 A52E      		mov r10,r21
1290:quantum/rgblight.c ****             t->up   = true;
 3799               		.loc 1 1290 21 view .LVU878
 3800 002a 8824      		clr r8
 3801 002c 8394      		inc r8
1286:quantum/rgblight.c ****             c->s    = random_color ? (rand() % (rgblight_config.sat / 2)) + (rgblight_config.sat / 
 3802               		.loc 1 1286 45 view .LVU879
 3803 002e EE24      		clr r14
 3804 0030 EA94      		dec r14
 3805 0032 F12C      		mov r15,__zero_reg__
 3806               	.LBB145:
1275:quantum/rgblight.c ****             if (t->life == 0 && t->up) {
 3807               		.loc 1 1275 61 view .LVU880
 3808 0034 7BE4      		ldi r23,lo8(75)
 3809 0036 C72E      		mov r12,r23
 3810 0038 D12C      		mov r13,__zero_reg__
 3811               	.LVL255:
 3812               	.L182:
1275:quantum/rgblight.c ****             if (t->life == 0 && t->up) {
 3813               		.loc 1 1275 61 view .LVU881
 3814               	.LBE145:
 3815               	.LBE144:
1264:quantum/rgblight.c ****         TwinkleState *t = &(led_twinkle_state[i]);
 3816               		.loc 1 1264 25 is_stmt 1 discriminator 1 view .LVU882
1264:quantum/rgblight.c ****         TwinkleState *t = &(led_twinkle_state[i]);
 3817               		.loc 1 1264 5 is_stmt 0 discriminator 1 view .LVU883
 3818 003a 8091 0000 		lds r24,rgblight_ranges+4
 3819 003e 0817      		cp r16,r24
 3820 0040 00F0      		brlo .L194
 3821               	.LBE143:
1291:quantum/rgblight.c ****         } else {
1292:quantum/rgblight.c ****             // This LED is off, and was NOT selected to start brightening
1293:quantum/rgblight.c ****         }
1294:quantum/rgblight.c **** 
1295:quantum/rgblight.c ****         LED_TYPE *ledp = led + i + rgblight_ranges.effect_start_pos;
1296:quantum/rgblight.c ****         sethsv(c->h, c->s, c->v, ledp);
1297:quantum/rgblight.c ****     }
1298:quantum/rgblight.c **** 
1299:quantum/rgblight.c ****     rgblight_set();
 3822               		.loc 1 1299 5 is_stmt 1 view .LVU884
 3823               	/* epilogue start */
1300:quantum/rgblight.c **** }
 3824               		.loc 1 1300 1 is_stmt 0 view .LVU885
 3825 0042 DF91      		pop r29
 3826 0044 CF91      		pop r28
 3827 0046 1F91      		pop r17
 3828 0048 0F91      		pop r16
 3829               	.LVL256:
 3830               		.loc 1 1300 1 view .LVU886
 3831 004a FF90      		pop r15
 3832 004c EF90      		pop r14
 3833 004e DF90      		pop r13
 3834 0050 CF90      		pop r12
 3835 0052 BF90      		pop r11
 3836               	.LVL257:
 3837               		.loc 1 1300 1 view .LVU887
 3838 0054 AF90      		pop r10
 3839 0056 9F90      		pop r9
 3840               	.LVL258:
 3841               		.loc 1 1300 1 view .LVU888
 3842 0058 8F90      		pop r8
1299:quantum/rgblight.c **** }
 3843               		.loc 1 1299 5 view .LVU889
 3844 005a 0C94 0000 		jmp rgblight_set
 3845               	.LVL259:
 3846               	.L194:
 3847               	.LBB153:
 3848               	.LBB151:
1265:quantum/rgblight.c ****         HSV *         c = &(t->hsv);
 3849               		.loc 1 1265 9 is_stmt 1 view .LVU890
1265:quantum/rgblight.c ****         HSV *         c = &(t->hsv);
 3850               		.loc 1 1265 46 is_stmt 0 view .LVU891
 3851 005e C02F      		mov r28,r16
 3852 0060 D0E0      		ldi r29,0
 3853               	.LVL260:
1266:quantum/rgblight.c ****         if (restart) {
 3854               		.loc 1 1266 9 is_stmt 1 view .LVU892
1267:quantum/rgblight.c ****             // Restart
 3855               		.loc 1 1267 9 view .LVU893
1269:quantum/rgblight.c ****             t->hsv.v = 0;
 3856               		.loc 1 1269 22 is_stmt 0 view .LVU894
 3857 0062 1C9F      		mul r17,r28
 3858 0064 F001      		movw r30,r0
 3859 0066 1D9F      		mul r17,r29
 3860 0068 F00D      		add r31,r0
 3861 006a 1124      		clr __zero_reg__
 3862 006c E050      		subi r30,lo8(-(led_twinkle_state))
 3863 006e F040      		sbci r31,hi8(-(led_twinkle_state))
1267:quantum/rgblight.c ****             // Restart
 3864               		.loc 1 1267 12 view .LVU895
 3865 0070 9110      		cpse r9,__zero_reg__
 3866 0072 00C0      		rjmp .L183
1269:quantum/rgblight.c ****             t->hsv.v = 0;
 3867               		.loc 1 1269 13 is_stmt 1 view .LVU896
1269:quantum/rgblight.c ****             t->hsv.v = 0;
 3868               		.loc 1 1269 22 is_stmt 0 view .LVU897
 3869 0074 1382      		std Z+3,__zero_reg__
1270:quantum/rgblight.c ****         } else if (t->life) {
 3870               		.loc 1 1270 13 is_stmt 1 view .LVU898
1270:quantum/rgblight.c ****         } else if (t->life) {
 3871               		.loc 1 1270 22 is_stmt 0 view .LVU899
 3872 0076 1282      		std Z+2,__zero_reg__
 3873               	.L184:
1293:quantum/rgblight.c **** 
 3874               		.loc 1 1293 9 is_stmt 1 discriminator 2 view .LVU900
1295:quantum/rgblight.c ****         sethsv(c->h, c->s, c->v, ledp);
 3875               		.loc 1 1295 9 discriminator 2 view .LVU901
 3876               	.LVL261:
1296:quantum/rgblight.c ****     }
 3877               		.loc 1 1296 9 discriminator 2 view .LVU902
 3878               	.LBB146:
 3879               	.LBI146:
 132:quantum/rgblight.c **** 
 3880               		.loc 1 132 6 discriminator 2 view .LVU903
 3881               	.LBB147:
 132:quantum/rgblight.c **** 
 3882               		.loc 1 132 70 discriminator 2 view .LVU904
 3883               	.LBE147:
 3884               	.LBE146:
1295:quantum/rgblight.c ****         sethsv(c->h, c->s, c->v, ledp);
 3885               		.loc 1 1295 34 is_stmt 0 discriminator 2 view .LVU905
 3886 0078 2091 0000 		lds r18,rgblight_ranges+2
 3887 007c CE01      		movw r24,r28
 3888 007e 820F      		add r24,r18
 3889 0080 911D      		adc r25,__zero_reg__
 3890 0082 9C01      		movw r18,r24
 3891 0084 220F      		lsl r18
 3892 0086 331F      		rol r19
 3893 0088 280F      		add r18,r24
 3894 008a 391F      		adc r19,r25
1295:quantum/rgblight.c ****         sethsv(c->h, c->s, c->v, ledp);
 3895               		.loc 1 1295 19 discriminator 2 view .LVU906
 3896 008c 2050      		subi r18,lo8(-(led))
 3897 008e 3040      		sbci r19,hi8(-(led))
1296:quantum/rgblight.c ****     }
 3898               		.loc 1 1296 9 discriminator 2 view .LVU907
 3899 0090 1C9F      		mul r17,r28
 3900 0092 F001      		movw r30,r0
 3901 0094 1D9F      		mul r17,r29
 3902 0096 F00D      		add r31,r0
 3903 0098 1124      		clr __zero_reg__
 3904 009a E050      		subi r30,lo8(-(led_twinkle_state))
 3905 009c F040      		sbci r31,hi8(-(led_twinkle_state))
 3906               	.LBB149:
 3907               	.LBB148:
 132:quantum/rgblight.c **** 
 3908               		.loc 1 132 70 discriminator 2 view .LVU908
 3909 009e 4281      		ldd r20,Z+2
 3910 00a0 6181      		ldd r22,Z+1
 3911 00a2 8081      		ld r24,Z
 3912 00a4 0E94 0000 		call sethsv_raw
 3913               	.LVL262:
 132:quantum/rgblight.c **** 
 3914               		.loc 1 132 70 discriminator 2 view .LVU909
 3915               	.LBE148:
 3916               	.LBE149:
 3917               	.LBE151:
1264:quantum/rgblight.c ****         TwinkleState *t = &(led_twinkle_state[i]);
 3918               		.loc 1 1264 62 is_stmt 1 discriminator 2 view .LVU910
1264:quantum/rgblight.c ****         TwinkleState *t = &(led_twinkle_state[i]);
 3919               		.loc 1 1264 63 is_stmt 0 discriminator 2 view .LVU911
 3920 00a8 0F5F      		subi r16,lo8(-(1))
 3921               	.LVL263:
1264:quantum/rgblight.c ****         TwinkleState *t = &(led_twinkle_state[i]);
 3922               		.loc 1 1264 63 discriminator 2 view .LVU912
 3923 00aa 00C0      		rjmp .L182
 3924               	.L183:
 3925               	.LBB152:
1271:quantum/rgblight.c ****             // This LED is already on, either brightening or dimming
 3926               		.loc 1 1271 16 is_stmt 1 view .LVU913
1271:quantum/rgblight.c ****             // This LED is already on, either brightening or dimming
 3927               		.loc 1 1271 21 is_stmt 0 view .LVU914
 3928 00ac 2381      		ldd r18,Z+3
1271:quantum/rgblight.c ****             // This LED is already on, either brightening or dimming
 3929               		.loc 1 1271 19 view .LVU915
 3930 00ae 2223      		tst r18
 3931 00b0 01F0      		breq .L185
 3932               	.LBB150:
1273:quantum/rgblight.c ****             uint8_t on = t->up ? RGBLIGHT_EFFECT_TWINKLE_LIFE - t->life : t->life;
 3933               		.loc 1 1273 13 is_stmt 1 view .LVU916
1273:quantum/rgblight.c ****             uint8_t on = t->up ? RGBLIGHT_EFFECT_TWINKLE_LIFE - t->life : t->life;
 3934               		.loc 1 1273 20 is_stmt 0 view .LVU917
 3935 00b2 2150      		subi r18,lo8(-(-1))
 3936 00b4 2383      		std Z+3,r18
1274:quantum/rgblight.c ****             c->v       = (uint16_t)rgblight_config.val * on / RGBLIGHT_EFFECT_TWINKLE_LIFE;
 3937               		.loc 1 1274 13 is_stmt 1 view .LVU918
1274:quantum/rgblight.c ****             c->v       = (uint16_t)rgblight_config.val * on / RGBLIGHT_EFFECT_TWINKLE_LIFE;
 3938               		.loc 1 1274 27 is_stmt 0 view .LVU919
 3939 00b6 3481      		ldd r19,Z+4
1274:quantum/rgblight.c ****             c->v       = (uint16_t)rgblight_config.val * on / RGBLIGHT_EFFECT_TWINKLE_LIFE;
 3940               		.loc 1 1274 21 view .LVU920
 3941 00b8 8A2D      		mov r24,r10
 3942 00ba 821B      		sub r24,r18
 3943 00bc 3111      		cpse r19,__zero_reg__
 3944 00be 00C0      		rjmp .L186
 3945 00c0 822F      		mov r24,r18
 3946               	.L186:
 3947               	.LVL264:
1275:quantum/rgblight.c ****             if (t->life == 0 && t->up) {
 3948               		.loc 1 1275 13 is_stmt 1 discriminator 4 view .LVU921
1275:quantum/rgblight.c ****             if (t->life == 0 && t->up) {
 3949               		.loc 1 1275 24 is_stmt 0 discriminator 4 view .LVU922
 3950 00c2 1C9F      		mul r17,r28
 3951 00c4 F001      		movw r30,r0
 3952 00c6 1D9F      		mul r17,r29
 3953 00c8 F00D      		add r31,r0
 3954 00ca 1124      		clr __zero_reg__
 3955 00cc E050      		subi r30,lo8(-(led_twinkle_state))
 3956 00ce F040      		sbci r31,hi8(-(led_twinkle_state))
1275:quantum/rgblight.c ****             if (t->life == 0 && t->up) {
 3957               		.loc 1 1275 56 discriminator 4 view .LVU923
 3958 00d0 9091 0000 		lds r25,rgblight_config+3
 3959 00d4 899F      		mul r24,r25
 3960 00d6 C001      		movw r24,r0
 3961 00d8 1124      		clr __zero_reg__
 3962               	.LVL265:
1275:quantum/rgblight.c ****             if (t->life == 0 && t->up) {
 3963               		.loc 1 1275 61 discriminator 4 view .LVU924
 3964 00da B601      		movw r22,r12
 3965 00dc 0E94 0000 		call __udivmodhi4
1275:quantum/rgblight.c ****             if (t->life == 0 && t->up) {
 3966               		.loc 1 1275 24 discriminator 4 view .LVU925
 3967 00e0 6283      		std Z+2,r22
1276:quantum/rgblight.c ****                 t->up   = false;
 3968               		.loc 1 1276 13 is_stmt 1 discriminator 4 view .LVU926
1276:quantum/rgblight.c ****                 t->up   = false;
 3969               		.loc 1 1276 16 is_stmt 0 discriminator 4 view .LVU927
 3970 00e2 2111      		cpse r18,__zero_reg__
 3971 00e4 00C0      		rjmp .L187
1276:quantum/rgblight.c ****                 t->up   = false;
 3972               		.loc 1 1276 30 discriminator 1 view .LVU928
 3973 00e6 3323      		tst r19
 3974 00e8 01F0      		breq .L187
1277:quantum/rgblight.c ****                 t->life = RGBLIGHT_EFFECT_TWINKLE_LIFE;
 3975               		.loc 1 1277 17 is_stmt 1 view .LVU929
1277:quantum/rgblight.c ****                 t->life = RGBLIGHT_EFFECT_TWINKLE_LIFE;
 3976               		.loc 1 1277 25 is_stmt 0 view .LVU930
 3977 00ea 1482      		std Z+4,__zero_reg__
1278:quantum/rgblight.c ****             }
 3978               		.loc 1 1278 17 is_stmt 1 view .LVU931
1278:quantum/rgblight.c ****             }
 3979               		.loc 1 1278 25 is_stmt 0 view .LVU932
 3980 00ec A382      		std Z+3,r10
 3981               	.L187:
1280:quantum/rgblight.c ****                 c->h = rgblight_config.hue;
 3982               		.loc 1 1280 13 is_stmt 1 view .LVU933
1280:quantum/rgblight.c ****                 c->h = rgblight_config.hue;
 3983               		.loc 1 1280 16 is_stmt 0 view .LVU934
 3984 00ee 22E0      		ldi r18,lo8(2)
 3985 00f0 2B15      		cp r18,r11
 3986 00f2 00F0      		brlo .L184
1281:quantum/rgblight.c ****                 c->s = rgblight_config.sat;
 3987               		.loc 1 1281 17 is_stmt 1 view .LVU935
1281:quantum/rgblight.c ****                 c->s = rgblight_config.sat;
 3988               		.loc 1 1281 22 is_stmt 0 view .LVU936
 3989 00f4 1C9F      		mul r17,r28
 3990 00f6 F001      		movw r30,r0
 3991 00f8 1D9F      		mul r17,r29
 3992 00fa F00D      		add r31,r0
 3993 00fc 1124      		clr __zero_reg__
 3994 00fe E050      		subi r30,lo8(-(led_twinkle_state))
 3995 0100 F040      		sbci r31,hi8(-(led_twinkle_state))
 3996 0102 8091 0000 		lds r24,rgblight_config+1
 3997 0106 8083      		st Z,r24
1282:quantum/rgblight.c ****             }
 3998               		.loc 1 1282 17 is_stmt 1 view .LVU937
1282:quantum/rgblight.c ****             }
 3999               		.loc 1 1282 22 is_stmt 0 view .LVU938
 4000 0108 8091 0000 		lds r24,rgblight_config+2
 4001 010c 8183      		std Z+1,r24
 4002 010e 00C0      		rjmp .L184
 4003               	.L185:
1282:quantum/rgblight.c ****             }
 4004               		.loc 1 1282 22 view .LVU939
 4005               	.LBE150:
1284:quantum/rgblight.c ****             // This LED is off, but was randomly selected to start brightening
 4006               		.loc 1 1284 16 is_stmt 1 view .LVU940
1284:quantum/rgblight.c ****             // This LED is off, but was randomly selected to start brightening
 4007               		.loc 1 1284 20 is_stmt 0 view .LVU941
 4008 0110 0E94 0000 		call rand
 4009               	.LVL266:
1284:quantum/rgblight.c ****             // This LED is off, but was randomly selected to start brightening
 4010               		.loc 1 1284 19 view .LVU942
 4011 0114 8230      		cpi r24,2
 4012 0116 9140      		sbci r25,1
 4013 0118 04F0      		brlt .+2
 4014 011a 00C0      		rjmp .L184
1286:quantum/rgblight.c ****             c->s    = random_color ? (rand() % (rgblight_config.sat / 2)) + (rgblight_config.sat / 
 4015               		.loc 1 1286 13 is_stmt 1 view .LVU943
1286:quantum/rgblight.c ****             c->s    = random_color ? (rand() % (rgblight_config.sat / 2)) + (rgblight_config.sat / 
 4016               		.loc 1 1286 21 is_stmt 0 view .LVU944
 4017 011c 82E0      		ldi r24,lo8(2)
 4018 011e 8B15      		cp r24,r11
 4019 0120 00F4      		brsh .L190
1286:quantum/rgblight.c ****             c->s    = random_color ? (rand() % (rgblight_config.sat / 2)) + (rgblight_config.sat / 
 4020               		.loc 1 1286 38 discriminator 1 view .LVU945
 4021 0122 0E94 0000 		call rand
 4022               	.LVL267:
1286:quantum/rgblight.c ****             c->s    = random_color ? (rand() % (rgblight_config.sat / 2)) + (rgblight_config.sat / 
 4023               		.loc 1 1286 45 discriminator 1 view .LVU946
 4024 0126 B701      		movw r22,r14
 4025 0128 0E94 0000 		call __divmodhi4
 4026               	.L191:
1286:quantum/rgblight.c ****             c->s    = random_color ? (rand() % (rgblight_config.sat / 2)) + (rgblight_config.sat / 
 4027               		.loc 1 1286 21 discriminator 4 view .LVU947
 4028 012c 1C9F      		mul r17,r28
 4029 012e F001      		movw r30,r0
 4030 0130 1D9F      		mul r17,r29
 4031 0132 F00D      		add r31,r0
 4032 0134 1124      		clr __zero_reg__
 4033 0136 E050      		subi r30,lo8(-(led_twinkle_state))
 4034 0138 F040      		sbci r31,hi8(-(led_twinkle_state))
 4035 013a 8083      		st Z,r24
1287:quantum/rgblight.c ****             c->v    = 0;
 4036               		.loc 1 1287 13 is_stmt 1 discriminator 4 view .LVU948
1287:quantum/rgblight.c ****             c->v    = 0;
 4037               		.loc 1 1287 21 is_stmt 0 discriminator 4 view .LVU949
 4038 013c 22E0      		ldi r18,lo8(2)
 4039 013e 2B15      		cp r18,r11
 4040 0140 00F4      		brsh .L192
1287:quantum/rgblight.c ****             c->v    = 0;
 4041               		.loc 1 1287 39 discriminator 1 view .LVU950
 4042 0142 0E94 0000 		call rand
 4043               	.LVL268:
1287:quantum/rgblight.c ****             c->v    = 0;
 4044               		.loc 1 1287 69 discriminator 1 view .LVU951
 4045 0146 2091 0000 		lds r18,rgblight_config+2
 4046 014a 2695      		lsr r18
 4047 014c 622F      		mov r22,r18
 4048 014e 70E0      		ldi r23,0
1287:quantum/rgblight.c ****             c->v    = 0;
 4049               		.loc 1 1287 46 discriminator 1 view .LVU952
 4050 0150 0E94 0000 		call __divmodhi4
1287:quantum/rgblight.c ****             c->v    = 0;
 4051               		.loc 1 1287 21 discriminator 1 view .LVU953
 4052 0154 280F      		add r18,r24
 4053               	.L193:
1287:quantum/rgblight.c ****             c->v    = 0;
 4054               		.loc 1 1287 21 discriminator 4 view .LVU954
 4055 0156 1C9F      		mul r17,r28
 4056 0158 F001      		movw r30,r0
 4057 015a 1D9F      		mul r17,r29
 4058 015c F00D      		add r31,r0
 4059 015e 1124      		clr __zero_reg__
 4060 0160 E050      		subi r30,lo8(-(led_twinkle_state))
 4061 0162 F040      		sbci r31,hi8(-(led_twinkle_state))
 4062 0164 2183      		std Z+1,r18
1288:quantum/rgblight.c ****             t->life = RGBLIGHT_EFFECT_TWINKLE_LIFE;
 4063               		.loc 1 1288 13 is_stmt 1 discriminator 4 view .LVU955
1288:quantum/rgblight.c ****             t->life = RGBLIGHT_EFFECT_TWINKLE_LIFE;
 4064               		.loc 1 1288 21 is_stmt 0 discriminator 4 view .LVU956
 4065 0166 1282      		std Z+2,__zero_reg__
1289:quantum/rgblight.c ****             t->up   = true;
 4066               		.loc 1 1289 13 is_stmt 1 discriminator 4 view .LVU957
1289:quantum/rgblight.c ****             t->up   = true;
 4067               		.loc 1 1289 21 is_stmt 0 discriminator 4 view .LVU958
 4068 0168 A382      		std Z+3,r10
1290:quantum/rgblight.c ****         } else {
 4069               		.loc 1 1290 13 is_stmt 1 discriminator 4 view .LVU959
1290:quantum/rgblight.c ****         } else {
 4070               		.loc 1 1290 21 is_stmt 0 discriminator 4 view .LVU960
 4071 016a 8482      		std Z+4,r8
 4072 016c 00C0      		rjmp .L184
 4073               	.L190:
1286:quantum/rgblight.c ****             c->s    = random_color ? (rand() % (rgblight_config.sat / 2)) + (rgblight_config.sat / 
 4074               		.loc 1 1286 21 discriminator 2 view .LVU961
 4075 016e 8091 0000 		lds r24,rgblight_config+1
 4076 0172 00C0      		rjmp .L191
 4077               	.L192:
1287:quantum/rgblight.c ****             c->v    = 0;
 4078               		.loc 1 1287 21 discriminator 2 view .LVU962
 4079 0174 2091 0000 		lds r18,rgblight_config+2
 4080 0178 00C0      		rjmp .L193
 4081               	.LBE152:
 4082               	.LBE153:
 4083               		.cfi_endproc
 4084               	.LFE180:
 4086               		.section	.text.rgblight_disable,"ax",@progbits
 4087               	.global	rgblight_disable
 4089               	rgblight_disable:
 4090               	.LFB114:
 352:quantum/rgblight.c ****     rgblight_config.enable = 0;
 4091               		.loc 1 352 29 is_stmt 1 view -0
 4092               		.cfi_startproc
 4093               	/* prologue: function */
 4094               	/* frame size = 0 */
 4095               	/* stack size = 0 */
 4096               	.L__stack_usage = 0
 353:quantum/rgblight.c ****     eeconfig_update_rgblight(rgblight_config.raw);
 4097               		.loc 1 353 5 view .LVU964
 353:quantum/rgblight.c ****     eeconfig_update_rgblight(rgblight_config.raw);
 4098               		.loc 1 353 28 is_stmt 0 view .LVU965
 4099 0000 E0E0      		ldi r30,lo8(rgblight_config)
 4100 0002 F0E0      		ldi r31,hi8(rgblight_config)
 4101 0004 8081      		ld r24,Z
 4102 0006 8E7F      		andi r24,lo8(~(1<<0))
 4103 0008 8083      		st Z,r24
 354:quantum/rgblight.c ****     dprintf("rgblight disable [EEPROM]: rgblight_config.enable = %u\n", rgblight_config.enable);
 4104               		.loc 1 354 5 is_stmt 1 view .LVU966
 4105 000a 6081      		ld r22,Z
 4106 000c 7181      		ldd r23,Z+1
 4107 000e 8281      		ldd r24,Z+2
 4108 0010 9381      		ldd r25,Z+3
 4109 0012 0E94 0000 		call eeconfig_update_rgblight
 4110               	.LVL269:
 355:quantum/rgblight.c ****     rgblight_timer_disable();
 4111               		.loc 1 355 96 view .LVU967
 356:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_MODE;
 4112               		.loc 1 356 5 view .LVU968
 4113               	.LBB158:
 4114               	.LBI158:
 809:quantum/rgblight.c ****     // OLD!!!! Animation timer -- AVR Timer3
 4115               		.loc 1 809 6 view .LVU969
 4116               	.LBB159:
 826:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 4117               		.loc 1 826 5 view .LVU970
 826:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 4118               		.loc 1 826 35 is_stmt 0 view .LVU971
 4119 0016 1092 0000 		sts rgblight_status+1,__zero_reg__
 827:quantum/rgblight.c **** }
 4120               		.loc 1 827 43 is_stmt 1 view .LVU972
 4121               	.LBE159:
 4122               	.LBE158:
 357:quantum/rgblight.c ****     wait_ms(50);
 4123               		.loc 1 357 35 view .LVU973
 358:quantum/rgblight.c ****     rgblight_set();
 4124               		.loc 1 358 5 view .LVU974
 4125               	.LVL270:
 4126               	.LBB160:
 4127               	.LBI160:
 166:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** {
 4128               		.loc 3 166 1 view .LVU975
 4129               	.LBB161:
 168:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 4130               		.loc 3 168 2 view .LVU976
 172:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 4131               		.loc 3 172 2 view .LVU977
 173:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 4132               		.loc 3 173 2 view .LVU978
 174:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
 4133               		.loc 3 174 2 view .LVU979
 184:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 	#endif
 4134               		.loc 3 184 3 view .LVU980
 4135               		.loc 3 187 2 view .LVU981
 4136 001a 2FEF      		ldi r18,lo8(159999)
 4137 001c 80E7      		ldi r24,hi8(159999)
 4138 001e 92E0      		ldi r25,hlo8(159999)
 4139 0020 2150      	1:	subi r18,1
 4140 0022 8040      		sbci r24,0
 4141 0024 9040      		sbci r25,0
 4142 0026 01F4      		brne 1b
 4143 0028 00C0      		rjmp .
 4144 002a 0000      		nop
 4145               	.LVL271:
 4146               		.loc 3 187 2 is_stmt 0 view .LVU982
 4147               	.LBE161:
 4148               	.LBE160:
 359:quantum/rgblight.c **** }
 4149               		.loc 1 359 5 is_stmt 1 view .LVU983
 4150 002c 0C94 0000 		jmp rgblight_set
 4151               	.LVL272:
 4152               		.cfi_endproc
 4153               	.LFE114:
 4155               		.section	.text.rgblight_disable_noeeprom,"ax",@progbits
 4156               	.global	rgblight_disable_noeeprom
 4158               	rgblight_disable_noeeprom:
 4159               	.LFB115:
 362:quantum/rgblight.c ****     rgblight_config.enable = 0;
 4160               		.loc 1 362 38 view -0
 4161               		.cfi_startproc
 4162               	/* prologue: function */
 4163               	/* frame size = 0 */
 4164               	/* stack size = 0 */
 4165               	.L__stack_usage = 0
 363:quantum/rgblight.c ****     dprintf("rgblight disable [NOEEPROM]: rgblight_config.enable = %u\n", rgblight_config.enable);
 4166               		.loc 1 363 5 view .LVU985
 363:quantum/rgblight.c ****     dprintf("rgblight disable [NOEEPROM]: rgblight_config.enable = %u\n", rgblight_config.enable);
 4167               		.loc 1 363 28 is_stmt 0 view .LVU986
 4168 0000 E0E0      		ldi r30,lo8(rgblight_config)
 4169 0002 F0E0      		ldi r31,hi8(rgblight_config)
 4170 0004 8081      		ld r24,Z
 4171 0006 8E7F      		andi r24,lo8(~(1<<0))
 4172 0008 8083      		st Z,r24
 364:quantum/rgblight.c ****     rgblight_timer_disable();
 4173               		.loc 1 364 98 is_stmt 1 view .LVU987
 365:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_MODE;
 4174               		.loc 1 365 5 view .LVU988
 4175               	.LBB166:
 4176               	.LBI166:
 809:quantum/rgblight.c ****     // OLD!!!! Animation timer -- AVR Timer3
 4177               		.loc 1 809 6 view .LVU989
 4178               	.LBB167:
 826:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 4179               		.loc 1 826 5 view .LVU990
 826:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 4180               		.loc 1 826 35 is_stmt 0 view .LVU991
 4181 000a 1092 0000 		sts rgblight_status+1,__zero_reg__
 827:quantum/rgblight.c **** }
 4182               		.loc 1 827 43 is_stmt 1 view .LVU992
 4183               	.LBE167:
 4184               	.LBE166:
 366:quantum/rgblight.c ****     wait_ms(50);
 4185               		.loc 1 366 35 view .LVU993
 367:quantum/rgblight.c ****     rgblight_set();
 4186               		.loc 1 367 5 view .LVU994
 4187               	.LVL273:
 4188               	.LBB168:
 4189               	.LBI168:
 166:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** {
 4190               		.loc 3 166 1 view .LVU995
 4191               	.LBB169:
 168:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 4192               		.loc 3 168 2 view .LVU996
 172:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 4193               		.loc 3 172 2 view .LVU997
 173:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 4194               		.loc 3 173 2 view .LVU998
 174:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 
 4195               		.loc 3 174 2 view .LVU999
 184:/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/util/delay.h **** 	#endif
 4196               		.loc 3 184 3 view .LVU1000
 4197               		.loc 3 187 2 view .LVU1001
 4198 000e 2FEF      		ldi r18,lo8(159999)
 4199 0010 80E7      		ldi r24,hi8(159999)
 4200 0012 92E0      		ldi r25,hlo8(159999)
 4201 0014 2150      	1:	subi r18,1
 4202 0016 8040      		sbci r24,0
 4203 0018 9040      		sbci r25,0
 4204 001a 01F4      		brne 1b
 4205 001c 00C0      		rjmp .
 4206 001e 0000      		nop
 4207               	.LVL274:
 4208               		.loc 3 187 2 is_stmt 0 view .LVU1002
 4209               	.LBE169:
 4210               	.LBE168:
 368:quantum/rgblight.c **** }
 4211               		.loc 1 368 5 is_stmt 1 view .LVU1003
 4212 0020 0C94 0000 		jmp rgblight_set
 4213               	.LVL275:
 4214               		.cfi_endproc
 4215               	.LFE115:
 4217               		.section	.text.rgblight_timer_init,"ax",@progbits
 4218               	.global	rgblight_timer_init
 4220               	rgblight_timer_init:
 4221               	.LFB165:
 809:quantum/rgblight.c ****     // OLD!!!! Animation timer -- AVR Timer3
 4222               		.loc 1 809 32 view -0
 4223               		.cfi_startproc
 4224               	/* prologue: function */
 4225               	/* frame size = 0 */
 4226               	/* stack size = 0 */
 4227               	.L__stack_usage = 0
 826:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 4228               		.loc 1 826 5 view .LVU1005
 826:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 4229               		.loc 1 826 35 is_stmt 0 view .LVU1006
 4230 0000 1092 0000 		sts rgblight_status+1,__zero_reg__
 827:quantum/rgblight.c **** }
 4231               		.loc 1 827 43 is_stmt 1 view .LVU1007
 4232               	/* epilogue start */
 828:quantum/rgblight.c **** void rgblight_timer_enable(void) {
 4233               		.loc 1 828 1 is_stmt 0 view .LVU1008
 4234 0004 0895      		ret
 4235               		.cfi_endproc
 4236               	.LFE165:
 4238               		.section	.text.rgblight_timer_enable,"ax",@progbits
 4239               	.global	rgblight_timer_enable
 4241               	rgblight_timer_enable:
 4242               	.LFB166:
 829:quantum/rgblight.c ****     if (!is_static_effect(rgblight_config.mode)) {
 4243               		.loc 1 829 34 is_stmt 1 view -0
 4244               		.cfi_startproc
 4245               	/* prologue: function */
 4246               	/* frame size = 0 */
 4247               	/* stack size = 0 */
 4248               	.L__stack_usage = 0
 830:quantum/rgblight.c ****         rgblight_status.timer_enabled = true;
 4249               		.loc 1 830 5 view .LVU1010
 4250               	.LVL276:
 4251               	.LBB172:
 4252               	.LBI172:
  84:quantum/rgblight.c **** 
 4253               		.loc 1 84 19 view .LVU1011
 4254               	.LBB173:
  84:quantum/rgblight.c **** 
 4255               		.loc 1 84 52 view .LVU1012
 4256               	.LBE173:
 4257               	.LBE172:
 830:quantum/rgblight.c ****         rgblight_status.timer_enabled = true;
 4258               		.loc 1 830 42 is_stmt 0 view .LVU1013
 4259 0000 6091 0000 		lds r22,rgblight_config
 4260 0004 6695      		lsr r22
 4261               	.LBB175:
 4262               	.LBB174:
  84:quantum/rgblight.c **** 
 4263               		.loc 1 84 59 view .LVU1014
 4264 0006 70E0      		ldi r23,0
 4265 0008 4BE0      		ldi r20,lo8(11)
 4266 000a 50E0      		ldi r21,0
 4267 000c 80E0      		ldi r24,lo8(static_effect_table)
 4268 000e 90E0      		ldi r25,hi8(static_effect_table)
 4269 0010 0E94 0000 		call memchr
 4270               	.LVL277:
  84:quantum/rgblight.c **** 
 4271               		.loc 1 84 59 view .LVU1015
 4272               	.LBE174:
 4273               	.LBE175:
 830:quantum/rgblight.c ****         rgblight_status.timer_enabled = true;
 4274               		.loc 1 830 8 view .LVU1016
 4275 0014 892B      		or r24,r25
 4276 0016 01F4      		brne .L203
 831:quantum/rgblight.c ****     }
 4277               		.loc 1 831 9 is_stmt 1 view .LVU1017
 831:quantum/rgblight.c ****     }
 4278               		.loc 1 831 39 is_stmt 0 view .LVU1018
 4279 0018 81E0      		ldi r24,lo8(1)
 4280 001a 8093 0000 		sts rgblight_status+1,r24
 4281               	.L203:
 833:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 4282               		.loc 1 833 5 is_stmt 1 view .LVU1019
 833:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 4283               		.loc 1 833 35 is_stmt 0 view .LVU1020
 4284 001e 0E94 0000 		call timer_read
 4285               	.LVL278:
 833:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 4286               		.loc 1 833 33 view .LVU1021
 4287 0022 9093 0000 		sts animation_status+1,r25
 4288 0026 8093 0000 		sts animation_status,r24
 834:quantum/rgblight.c ****     dprintf("rgblight timer enabled.\n");
 4289               		.loc 1 834 43 is_stmt 1 view .LVU1022
 835:quantum/rgblight.c **** }
 4290               		.loc 1 835 41 view .LVU1023
 4291               	/* epilogue start */
 836:quantum/rgblight.c **** void rgblight_timer_disable(void) {
 4292               		.loc 1 836 1 is_stmt 0 view .LVU1024
 4293 002a 0895      		ret
 4294               		.cfi_endproc
 4295               	.LFE166:
 4297               		.section	.text.rgblight_mode_eeprom_helper,"ax",@progbits
 4298               	.global	rgblight_mode_eeprom_helper
 4300               	rgblight_mode_eeprom_helper:
 4301               	.LVL279:
 4302               	.LFB107:
 287:quantum/rgblight.c ****     if (!rgblight_config.enable) {
 4303               		.loc 1 287 70 is_stmt 1 view -0
 4304               		.cfi_startproc
 4305               	/* prologue: function */
 4306               	/* frame size = 0 */
 4307               	/* stack size = 0 */
 4308               	.L__stack_usage = 0
 288:quantum/rgblight.c ****         return;
 4309               		.loc 1 288 5 view .LVU1026
 288:quantum/rgblight.c ****         return;
 4310               		.loc 1 288 25 is_stmt 0 view .LVU1027
 4311 0000 9091 0000 		lds r25,rgblight_config
 288:quantum/rgblight.c ****         return;
 4312               		.loc 1 288 8 view .LVU1028
 4313 0004 90FF      		sbrs r25,0
 4314 0006 00C0      		rjmp .L204
 291:quantum/rgblight.c ****         rgblight_config.mode = RGBLIGHT_MODE_STATIC_LIGHT;
 4315               		.loc 1 291 5 is_stmt 1 view .LVU1029
 4316 0008 9170      		andi r25,lo8(1)
 291:quantum/rgblight.c ****         rgblight_config.mode = RGBLIGHT_MODE_STATIC_LIGHT;
 4317               		.loc 1 291 8 is_stmt 0 view .LVU1030
 4318 000a 8111      		cpse r24,__zero_reg__
 4319 000c 00C0      		rjmp .L206
 292:quantum/rgblight.c ****     } else if (mode > RGBLIGHT_MODES) {
 4320               		.loc 1 292 9 is_stmt 1 view .LVU1031
 292:quantum/rgblight.c ****     } else if (mode > RGBLIGHT_MODES) {
 4321               		.loc 1 292 30 is_stmt 0 view .LVU1032
 4322 000e 9260      		ori r25,lo8(2)
 4323               	.LVL280:
 4324               	.L215:
 296:quantum/rgblight.c ****     }
 4325               		.loc 1 296 30 view .LVU1033
 4326 0010 9093 0000 		sts rgblight_config,r25
 298:quantum/rgblight.c ****     if (write_to_eeprom) {
 4327               		.loc 1 298 35 is_stmt 1 view .LVU1034
 299:quantum/rgblight.c ****         eeconfig_update_rgblight(rgblight_config.raw);
 4328               		.loc 1 299 5 view .LVU1035
 299:quantum/rgblight.c ****         eeconfig_update_rgblight(rgblight_config.raw);
 4329               		.loc 1 299 8 is_stmt 0 view .LVU1036
 4330 0014 6623      		tst r22
 4331 0016 01F0      		breq .L209
 300:quantum/rgblight.c ****         dprintf("rgblight mode [EEPROM]: %u\n", rgblight_config.mode);
 4332               		.loc 1 300 9 is_stmt 1 view .LVU1037
 4333 0018 6091 0000 		lds r22,rgblight_config
 4334 001c 7091 0000 		lds r23,rgblight_config+1
 4335 0020 8091 0000 		lds r24,rgblight_config+2
 4336 0024 9091 0000 		lds r25,rgblight_config+3
 4337               	.LVL281:
 300:quantum/rgblight.c ****         dprintf("rgblight mode [EEPROM]: %u\n", rgblight_config.mode);
 4338               		.loc 1 300 9 is_stmt 0 view .LVU1038
 4339 0028 0E94 0000 		call eeconfig_update_rgblight
 4340               	.LVL282:
 301:quantum/rgblight.c ****     } else {
 4341               		.loc 1 301 70 is_stmt 1 view .LVU1039
 4342               	.L209:
 303:quantum/rgblight.c ****     }
 4343               		.loc 1 303 72 view .LVU1040
 305:quantum/rgblight.c ****         rgblight_timer_disable();
 4344               		.loc 1 305 5 view .LVU1041
 4345               	.LBB180:
 4346               	.LBI180:
  84:quantum/rgblight.c **** 
 4347               		.loc 1 84 19 view .LVU1042
 4348               	.LBB181:
  84:quantum/rgblight.c **** 
 4349               		.loc 1 84 52 view .LVU1043
 4350               	.LBE181:
 4351               	.LBE180:
 305:quantum/rgblight.c ****         rgblight_timer_disable();
 4352               		.loc 1 305 41 is_stmt 0 view .LVU1044
 4353 002c 6091 0000 		lds r22,rgblight_config
 4354 0030 6695      		lsr r22
 4355               	.LBB183:
 4356               	.LBB182:
  84:quantum/rgblight.c **** 
 4357               		.loc 1 84 59 view .LVU1045
 4358 0032 70E0      		ldi r23,0
 4359 0034 4BE0      		ldi r20,lo8(11)
 4360 0036 50E0      		ldi r21,0
 4361 0038 80E0      		ldi r24,lo8(static_effect_table)
 4362 003a 90E0      		ldi r25,hi8(static_effect_table)
 4363 003c 0E94 0000 		call memchr
 4364               	.LVL283:
  84:quantum/rgblight.c **** 
 4365               		.loc 1 84 59 view .LVU1046
 4366               	.LBE182:
 4367               	.LBE183:
 305:quantum/rgblight.c ****         rgblight_timer_disable();
 4368               		.loc 1 305 8 view .LVU1047
 4369 0040 892B      		or r24,r25
 4370 0042 01F0      		breq .L210
 306:quantum/rgblight.c ****     } else {
 4371               		.loc 1 306 9 is_stmt 1 view .LVU1048
 4372               	.LBB184:
 4373               	.LBI184:
 809:quantum/rgblight.c ****     // OLD!!!! Animation timer -- AVR Timer3
 4374               		.loc 1 809 6 view .LVU1049
 4375               	.LBB185:
 826:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 4376               		.loc 1 826 5 view .LVU1050
 826:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 4377               		.loc 1 826 35 is_stmt 0 view .LVU1051
 4378 0044 1092 0000 		sts rgblight_status+1,__zero_reg__
 827:quantum/rgblight.c **** }
 4379               		.loc 1 827 43 is_stmt 1 view .LVU1052
 4380               	.L211:
 4381               	.LBE185:
 4382               	.LBE184:
 311:quantum/rgblight.c **** #endif
 4383               		.loc 1 311 5 view .LVU1053
 311:quantum/rgblight.c **** #endif
 4384               		.loc 1 311 30 is_stmt 0 view .LVU1054
 4385 0048 81E0      		ldi r24,lo8(1)
 4386 004a 8093 0000 		sts animation_status+3,r24
 313:quantum/rgblight.c **** }
 4387               		.loc 1 313 5 is_stmt 1 view .LVU1055
 4388 004e 4091 0000 		lds r20,rgblight_config+3
 4389 0052 6091 0000 		lds r22,rgblight_config+2
 4390 0056 8091 0000 		lds r24,rgblight_config+1
 4391 005a 0C94 0000 		jmp rgblight_sethsv_noeeprom
 4392               	.LVL284:
 4393               	.L206:
 293:quantum/rgblight.c ****         rgblight_config.mode = RGBLIGHT_MODES;
 4394               		.loc 1 293 12 view .LVU1056
 293:quantum/rgblight.c ****         rgblight_config.mode = RGBLIGHT_MODES;
 4395               		.loc 1 293 15 is_stmt 0 view .LVU1057
 4396 005e 8B32      		cpi r24,lo8(43)
 4397 0060 00F0      		brlo .L208
 294:quantum/rgblight.c ****     } else {
 4398               		.loc 1 294 9 is_stmt 1 view .LVU1058
 294:quantum/rgblight.c ****     } else {
 4399               		.loc 1 294 30 is_stmt 0 view .LVU1059
 4400 0062 9465      		ori r25,lo8(84)
 4401 0064 00C0      		rjmp .L215
 4402               	.L208:
 296:quantum/rgblight.c ****     }
 4403               		.loc 1 296 9 is_stmt 1 view .LVU1060
 296:quantum/rgblight.c ****     }
 4404               		.loc 1 296 30 is_stmt 0 view .LVU1061
 4405 0066 880F      		lsl r24
 4406               	.LVL285:
 296:quantum/rgblight.c ****     }
 4407               		.loc 1 296 30 view .LVU1062
 4408 0068 982B      		or r25,r24
 4409 006a 00C0      		rjmp .L215
 4410               	.LVL286:
 4411               	.L210:
 308:quantum/rgblight.c ****     }
 4412               		.loc 1 308 9 is_stmt 1 view .LVU1063
 4413 006c 0E94 0000 		call rgblight_timer_enable
 4414               	.LVL287:
 4415 0070 00C0      		rjmp .L211
 4416               	.LVL288:
 4417               	.L204:
 4418               	/* epilogue start */
 314:quantum/rgblight.c **** 
 4419               		.loc 1 314 1 is_stmt 0 view .LVU1064
 4420 0072 0895      		ret
 4421               		.cfi_endproc
 4422               	.LFE107:
 4424               		.section	.text.rgblight_step_helper,"ax",@progbits
 4425               	.global	rgblight_step_helper
 4427               	rgblight_step_helper:
 4428               	.LVL289:
 4429               	.LFB100:
 258:quantum/rgblight.c ****     uint8_t mode = 0;
 4430               		.loc 1 258 49 is_stmt 1 view -0
 4431               		.cfi_startproc
 4432               	/* prologue: function */
 4433               	/* frame size = 0 */
 4434               	/* stack size = 0 */
 4435               	.L__stack_usage = 0
 258:quantum/rgblight.c ****     uint8_t mode = 0;
 4436               		.loc 1 258 49 is_stmt 0 view .LVU1066
 4437 0000 682F      		mov r22,r24
 259:quantum/rgblight.c ****     mode         = rgblight_config.mode + 1;
 4438               		.loc 1 259 5 is_stmt 1 view .LVU1067
 4439               	.LVL290:
 260:quantum/rgblight.c ****     if (mode > RGBLIGHT_MODES) {
 4440               		.loc 1 260 5 view .LVU1068
 260:quantum/rgblight.c ****     if (mode > RGBLIGHT_MODES) {
 4441               		.loc 1 260 35 is_stmt 0 view .LVU1069
 4442 0002 9091 0000 		lds r25,rgblight_config
 4443 0006 9695      		lsr r25
 260:quantum/rgblight.c ****     if (mode > RGBLIGHT_MODES) {
 4444               		.loc 1 260 18 view .LVU1070
 4445 0008 81E0      		ldi r24,lo8(1)
 4446               	.LVL291:
 260:quantum/rgblight.c ****     if (mode > RGBLIGHT_MODES) {
 4447               		.loc 1 260 18 view .LVU1071
 4448 000a 890F      		add r24,r25
 4449               	.LVL292:
 261:quantum/rgblight.c ****         mode = 1;
 4450               		.loc 1 261 5 is_stmt 1 view .LVU1072
 261:quantum/rgblight.c ****         mode = 1;
 4451               		.loc 1 261 8 is_stmt 0 view .LVU1073
 4452 000c 8B32      		cpi r24,lo8(43)
 4453 000e 00F0      		brlo .L217
 262:quantum/rgblight.c ****     }
 4454               		.loc 1 262 14 view .LVU1074
 4455 0010 81E0      		ldi r24,lo8(1)
 4456               	.LVL293:
 4457               	.L217:
 264:quantum/rgblight.c **** }
 4458               		.loc 1 264 5 is_stmt 1 view .LVU1075
 4459 0012 0C94 0000 		jmp rgblight_mode_eeprom_helper
 4460               	.LVL294:
 264:quantum/rgblight.c **** }
 4461               		.loc 1 264 5 is_stmt 0 view .LVU1076
 4462               		.cfi_endproc
 4463               	.LFE100:
 4465               		.section	.text.rgblight_step_noeeprom,"ax",@progbits
 4466               	.global	rgblight_step_noeeprom
 4468               	rgblight_step_noeeprom:
 4469               	.LFB101:
 266:quantum/rgblight.c **** void rgblight_step(void) { rgblight_step_helper(true); }
 4470               		.loc 1 266 35 is_stmt 1 view -0
 4471               		.cfi_startproc
 4472               	/* prologue: function */
 4473               	/* frame size = 0 */
 4474               	/* stack size = 0 */
 4475               	.L__stack_usage = 0
 266:quantum/rgblight.c **** void rgblight_step(void) { rgblight_step_helper(true); }
 4476               		.loc 1 266 37 view .LVU1078
 4477 0000 80E0      		ldi r24,0
 4478 0002 0C94 0000 		jmp rgblight_step_helper
 4479               	.LVL295:
 4480               		.cfi_endproc
 4481               	.LFE101:
 4483               		.section	.text.rgblight_step,"ax",@progbits
 4484               	.global	rgblight_step
 4486               	rgblight_step:
 4487               	.LFB102:
 267:quantum/rgblight.c **** void rgblight_step_reverse_helper(bool write_to_eeprom) {
 4488               		.loc 1 267 26 view -0
 4489               		.cfi_startproc
 4490               	/* prologue: function */
 4491               	/* frame size = 0 */
 4492               	/* stack size = 0 */
 4493               	.L__stack_usage = 0
 267:quantum/rgblight.c **** void rgblight_step_reverse_helper(bool write_to_eeprom) {
 4494               		.loc 1 267 28 view .LVU1080
 4495 0000 81E0      		ldi r24,lo8(1)
 4496 0002 0C94 0000 		jmp rgblight_step_helper
 4497               	.LVL296:
 4498               		.cfi_endproc
 4499               	.LFE102:
 4501               		.section	.text.rgblight_step_reverse_helper,"ax",@progbits
 4502               	.global	rgblight_step_reverse_helper
 4504               	rgblight_step_reverse_helper:
 4505               	.LVL297:
 4506               	.LFB103:
 268:quantum/rgblight.c ****     uint8_t mode = 0;
 4507               		.loc 1 268 57 view -0
 4508               		.cfi_startproc
 4509               	/* prologue: function */
 4510               	/* frame size = 0 */
 4511               	/* stack size = 0 */
 4512               	.L__stack_usage = 0
 268:quantum/rgblight.c ****     uint8_t mode = 0;
 4513               		.loc 1 268 57 is_stmt 0 view .LVU1082
 4514 0000 682F      		mov r22,r24
 269:quantum/rgblight.c ****     mode         = rgblight_config.mode - 1;
 4515               		.loc 1 269 5 is_stmt 1 view .LVU1083
 4516               	.LVL298:
 270:quantum/rgblight.c ****     if (mode < 1) {
 4517               		.loc 1 270 5 view .LVU1084
 270:quantum/rgblight.c ****     if (mode < 1) {
 4518               		.loc 1 270 35 is_stmt 0 view .LVU1085
 4519 0002 9091 0000 		lds r25,rgblight_config
 4520 0006 9695      		lsr r25
 270:quantum/rgblight.c ****     if (mode < 1) {
 4521               		.loc 1 270 18 view .LVU1086
 4522 0008 8FEF      		ldi r24,lo8(-1)
 4523               	.LVL299:
 270:quantum/rgblight.c ****     if (mode < 1) {
 4524               		.loc 1 270 18 view .LVU1087
 4525 000a 890F      		add r24,r25
 4526               	.LVL300:
 271:quantum/rgblight.c ****         mode = RGBLIGHT_MODES;
 4527               		.loc 1 271 5 is_stmt 1 view .LVU1088
 271:quantum/rgblight.c ****         mode = RGBLIGHT_MODES;
 4528               		.loc 1 271 8 is_stmt 0 view .LVU1089
 4529 000c 01F4      		brne .L221
 272:quantum/rgblight.c ****     }
 4530               		.loc 1 272 14 view .LVU1090
 4531 000e 8AE2      		ldi r24,lo8(42)
 4532               	.LVL301:
 4533               	.L221:
 274:quantum/rgblight.c **** }
 4534               		.loc 1 274 5 is_stmt 1 view .LVU1091
 4535 0010 0C94 0000 		jmp rgblight_mode_eeprom_helper
 4536               	.LVL302:
 274:quantum/rgblight.c **** }
 4537               		.loc 1 274 5 is_stmt 0 view .LVU1092
 4538               		.cfi_endproc
 4539               	.LFE103:
 4541               		.section	.text.rgblight_step_reverse_noeeprom,"ax",@progbits
 4542               	.global	rgblight_step_reverse_noeeprom
 4544               	rgblight_step_reverse_noeeprom:
 4545               	.LFB104:
 276:quantum/rgblight.c **** void rgblight_step_reverse(void) { rgblight_step_reverse_helper(true); }
 4546               		.loc 1 276 43 is_stmt 1 view -0
 4547               		.cfi_startproc
 4548               	/* prologue: function */
 4549               	/* frame size = 0 */
 4550               	/* stack size = 0 */
 4551               	.L__stack_usage = 0
 276:quantum/rgblight.c **** void rgblight_step_reverse(void) { rgblight_step_reverse_helper(true); }
 4552               		.loc 1 276 45 view .LVU1094
 4553 0000 80E0      		ldi r24,0
 4554 0002 0C94 0000 		jmp rgblight_step_reverse_helper
 4555               	.LVL303:
 4556               		.cfi_endproc
 4557               	.LFE104:
 4559               		.section	.text.rgblight_step_reverse,"ax",@progbits
 4560               	.global	rgblight_step_reverse
 4562               	rgblight_step_reverse:
 4563               	.LFB105:
 277:quantum/rgblight.c **** 
 4564               		.loc 1 277 34 view -0
 4565               		.cfi_startproc
 4566               	/* prologue: function */
 4567               	/* frame size = 0 */
 4568               	/* stack size = 0 */
 4569               	.L__stack_usage = 0
 277:quantum/rgblight.c **** 
 4570               		.loc 1 277 36 view .LVU1096
 4571 0000 81E0      		ldi r24,lo8(1)
 4572 0002 0C94 0000 		jmp rgblight_step_reverse_helper
 4573               	.LVL304:
 4574               		.cfi_endproc
 4575               	.LFE105:
 4577               		.section	.text.rgblight_mode,"ax",@progbits
 4578               	.global	rgblight_mode
 4580               	rgblight_mode:
 4581               	.LVL305:
 4582               	.LFB108:
 316:quantum/rgblight.c **** 
 4583               		.loc 1 316 34 view -0
 4584               		.cfi_startproc
 4585               	/* prologue: function */
 4586               	/* frame size = 0 */
 4587               	/* stack size = 0 */
 4588               	.L__stack_usage = 0
 316:quantum/rgblight.c **** 
 4589               		.loc 1 316 36 view .LVU1098
 4590 0000 61E0      		ldi r22,lo8(1)
 4591 0002 0C94 0000 		jmp rgblight_mode_eeprom_helper
 4592               	.LVL306:
 316:quantum/rgblight.c **** 
 4593               		.loc 1 316 36 is_stmt 0 view .LVU1099
 4594               		.cfi_endproc
 4595               	.LFE108:
 4597               		.section	.text.rgblight_increase,"ax",@progbits
 4598               	.global	rgblight_increase
 4600               	rgblight_increase:
 4601               	.LFB98:
 243:quantum/rgblight.c ****     uint8_t mode = 0;
 4602               		.loc 1 243 30 is_stmt 1 view -0
 4603               		.cfi_startproc
 4604               	/* prologue: function */
 4605               	/* frame size = 0 */
 4606               	/* stack size = 0 */
 4607               	.L__stack_usage = 0
 244:quantum/rgblight.c ****     if (rgblight_config.mode < RGBLIGHT_MODES) {
 4608               		.loc 1 244 5 view .LVU1101
 4609               	.LVL307:
 245:quantum/rgblight.c ****         mode = rgblight_config.mode + 1;
 4610               		.loc 1 245 5 view .LVU1102
 245:quantum/rgblight.c ****         mode = rgblight_config.mode + 1;
 4611               		.loc 1 245 24 is_stmt 0 view .LVU1103
 4612 0000 8091 0000 		lds r24,rgblight_config
 4613 0004 8695      		lsr r24
 245:quantum/rgblight.c ****         mode = rgblight_config.mode + 1;
 4614               		.loc 1 245 8 view .LVU1104
 4615 0006 8A32      		cpi r24,lo8(42)
 4616 0008 00F4      		brsh .L227
 246:quantum/rgblight.c ****     }
 4617               		.loc 1 246 9 is_stmt 1 view .LVU1105
 246:quantum/rgblight.c ****     }
 4618               		.loc 1 246 14 is_stmt 0 view .LVU1106
 4619 000a 8F5F      		subi r24,lo8(-(1))
 4620               	.LVL308:
 4621               	.L226:
 248:quantum/rgblight.c **** }
 4622               		.loc 1 248 5 is_stmt 1 view .LVU1107
 4623 000c 0C94 0000 		jmp rgblight_mode
 4624               	.LVL309:
 4625               	.L227:
 244:quantum/rgblight.c ****     if (rgblight_config.mode < RGBLIGHT_MODES) {
 4626               		.loc 1 244 13 is_stmt 0 view .LVU1108
 4627 0010 80E0      		ldi r24,0
 4628 0012 00C0      		rjmp .L226
 4629               		.cfi_endproc
 4630               	.LFE98:
 4632               		.section	.text.rgblight_decrease,"ax",@progbits
 4633               	.global	rgblight_decrease
 4635               	rgblight_decrease:
 4636               	.LFB99:
 250:quantum/rgblight.c ****     uint8_t mode = 0;
 4637               		.loc 1 250 30 is_stmt 1 view -0
 4638               		.cfi_startproc
 4639               	/* prologue: function */
 4640               	/* frame size = 0 */
 4641               	/* stack size = 0 */
 4642               	.L__stack_usage = 0
 251:quantum/rgblight.c ****     // Mode will never be < 1. If it ever is, eeprom needs to be initialized.
 4643               		.loc 1 251 5 view .LVU1110
 4644               	.LVL310:
 253:quantum/rgblight.c ****         mode = rgblight_config.mode - 1;
 4645               		.loc 1 253 5 view .LVU1111
 253:quantum/rgblight.c ****         mode = rgblight_config.mode - 1;
 4646               		.loc 1 253 24 is_stmt 0 view .LVU1112
 4647 0000 8091 0000 		lds r24,rgblight_config
 4648 0004 8695      		lsr r24
 253:quantum/rgblight.c ****         mode = rgblight_config.mode - 1;
 4649               		.loc 1 253 8 view .LVU1113
 4650 0006 8230      		cpi r24,lo8(2)
 4651 0008 00F0      		brlo .L230
 254:quantum/rgblight.c ****     }
 4652               		.loc 1 254 9 is_stmt 1 view .LVU1114
 254:quantum/rgblight.c ****     }
 4653               		.loc 1 254 14 is_stmt 0 view .LVU1115
 4654 000a 8150      		subi r24,lo8(-(-1))
 4655               	.LVL311:
 4656               	.L229:
 256:quantum/rgblight.c **** }
 4657               		.loc 1 256 5 is_stmt 1 view .LVU1116
 4658 000c 0C94 0000 		jmp rgblight_mode
 4659               	.LVL312:
 4660               	.L230:
 251:quantum/rgblight.c ****     // Mode will never be < 1. If it ever is, eeprom needs to be initialized.
 4661               		.loc 1 251 13 is_stmt 0 view .LVU1117
 4662 0010 80E0      		ldi r24,0
 4663 0012 00C0      		rjmp .L229
 4664               		.cfi_endproc
 4665               	.LFE99:
 4667               		.section	.text.rgblight_enable,"ax",@progbits
 4668               	.global	rgblight_enable
 4670               	rgblight_enable:
 4671               	.LFB112:
 338:quantum/rgblight.c ****     rgblight_config.enable = 1;
 4672               		.loc 1 338 28 is_stmt 1 view -0
 4673               		.cfi_startproc
 4674               	/* prologue: function */
 4675               	/* frame size = 0 */
 4676               	/* stack size = 0 */
 4677               	.L__stack_usage = 0
 339:quantum/rgblight.c ****     // No need to update EEPROM here. rgblight_mode() will do that, actually
 4678               		.loc 1 339 5 view .LVU1119
 339:quantum/rgblight.c ****     // No need to update EEPROM here. rgblight_mode() will do that, actually
 4679               		.loc 1 339 28 is_stmt 0 view .LVU1120
 4680 0000 E0E0      		ldi r30,lo8(rgblight_config)
 4681 0002 F0E0      		ldi r31,hi8(rgblight_config)
 4682 0004 8081      		ld r24,Z
 4683 0006 8160      		ori r24,lo8(1<<0)
 4684 0008 8083      		st Z,r24
 342:quantum/rgblight.c ****     rgblight_mode(rgblight_config.mode);
 4685               		.loc 1 342 95 is_stmt 1 view .LVU1121
 343:quantum/rgblight.c **** }
 4686               		.loc 1 343 5 view .LVU1122
 4687 000a 8695      		lsr r24
 4688 000c 0C94 0000 		jmp rgblight_mode
 4689               	.LVL313:
 4690               		.cfi_endproc
 4691               	.LFE112:
 4693               		.section	.text.rgblight_toggle,"ax",@progbits
 4694               	.global	rgblight_toggle
 4696               	rgblight_toggle:
 4697               	.LFB110:
 320:quantum/rgblight.c ****     dprintf("rgblight toggle [EEPROM]: rgblight_config.enable = %u\n", !rgblight_config.enable);
 4698               		.loc 1 320 28 view -0
 4699               		.cfi_startproc
 4700               	/* prologue: function */
 4701               	/* frame size = 0 */
 4702               	/* stack size = 0 */
 4703               	.L__stack_usage = 0
 321:quantum/rgblight.c ****     if (rgblight_config.enable) {
 4704               		.loc 1 321 96 view .LVU1124
 322:quantum/rgblight.c ****         rgblight_disable();
 4705               		.loc 1 322 5 view .LVU1125
 322:quantum/rgblight.c ****         rgblight_disable();
 4706               		.loc 1 322 9 is_stmt 0 view .LVU1126
 4707 0000 8091 0000 		lds r24,rgblight_config
 322:quantum/rgblight.c ****         rgblight_disable();
 4708               		.loc 1 322 8 view .LVU1127
 4709 0004 80FD      		sbrc r24,0
 323:quantum/rgblight.c ****     } else {
 4710               		.loc 1 323 9 is_stmt 1 view .LVU1128
 4711 0006 0C94 0000 		jmp rgblight_disable
 4712               	.LVL314:
 4713               	.L233:
 325:quantum/rgblight.c ****     }
 4714               		.loc 1 325 9 view .LVU1129
 4715 000a 0C94 0000 		jmp rgblight_enable
 4716               	.LVL315:
 4717               		.cfi_endproc
 4718               	.LFE110:
 4720               		.section	.text.rgblight_mode_noeeprom,"ax",@progbits
 4721               	.global	rgblight_mode_noeeprom
 4723               	rgblight_mode_noeeprom:
 4724               	.LVL316:
 4725               	.LFB109:
 318:quantum/rgblight.c **** 
 4726               		.loc 1 318 43 view -0
 4727               		.cfi_startproc
 4728               	/* prologue: function */
 4729               	/* frame size = 0 */
 4730               	/* stack size = 0 */
 4731               	.L__stack_usage = 0
 318:quantum/rgblight.c **** 
 4732               		.loc 1 318 45 view .LVU1131
 4733 0000 60E0      		ldi r22,0
 4734 0002 0C94 0000 		jmp rgblight_mode_eeprom_helper
 4735               	.LVL317:
 318:quantum/rgblight.c **** 
 4736               		.loc 1 318 45 is_stmt 0 view .LVU1132
 4737               		.cfi_endproc
 4738               	.LFE109:
 4740               		.section	.text.rgblight_init,"ax",@progbits
 4741               	.global	rgblight_init
 4743               	rgblight_init:
 4744               	.LFB95:
 195:quantum/rgblight.c ****     /* if already initialized, don't do it again.
 4745               		.loc 1 195 26 is_stmt 1 view -0
 4746               		.cfi_startproc
 4747               	/* prologue: function */
 4748               	/* frame size = 0 */
 4749               	/* stack size = 0 */
 4750               	.L__stack_usage = 0
 199:quantum/rgblight.c ****         return;
 4751               		.loc 1 199 5 view .LVU1134
 199:quantum/rgblight.c ****         return;
 4752               		.loc 1 199 8 is_stmt 0 view .LVU1135
 4753 0000 8091 0000 		lds r24,is_rgblight_initialized
 4754 0004 8111      		cpse r24,__zero_reg__
 4755 0006 00C0      		rjmp .L235
 203:quantum/rgblight.c ****     dprintf("rgblight_init start!\n");
 4756               		.loc 1 203 39 is_stmt 1 view .LVU1136
 204:quantum/rgblight.c ****     if (!eeconfig_is_enabled()) {
 4757               		.loc 1 204 38 view .LVU1137
 205:quantum/rgblight.c ****         dprintf("rgblight_init eeconfig is not enabled.\n");
 4758               		.loc 1 205 5 view .LVU1138
 205:quantum/rgblight.c ****         dprintf("rgblight_init eeconfig is not enabled.\n");
 4759               		.loc 1 205 10 is_stmt 0 view .LVU1139
 4760 0008 0E94 0000 		call eeconfig_is_enabled
 4761               	.LVL318:
 205:quantum/rgblight.c ****         dprintf("rgblight_init eeconfig is not enabled.\n");
 4762               		.loc 1 205 8 view .LVU1140
 4763 000c 8111      		cpse r24,__zero_reg__
 4764 000e 00C0      		rjmp .L237
 206:quantum/rgblight.c ****         eeconfig_init();
 4765               		.loc 1 206 60 is_stmt 1 view .LVU1141
 207:quantum/rgblight.c ****         eeconfig_update_rgblight_default();
 4766               		.loc 1 207 9 view .LVU1142
 4767 0010 0E94 0000 		call eeconfig_init
 4768               	.LVL319:
 208:quantum/rgblight.c ****     }
 4769               		.loc 1 208 9 view .LVU1143
 4770 0014 0E94 0000 		call eeconfig_update_rgblight_default
 4771               	.LVL320:
 4772               	.L237:
 210:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_MODEHSVS;
 4773               		.loc 1 210 5 view .LVU1144
 210:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_MODEHSVS;
 4774               		.loc 1 210 27 is_stmt 0 view .LVU1145
 4775 0018 0E94 0000 		call eeconfig_read_rgblight
 4776               	.LVL321:
 210:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_MODEHSVS;
 4777               		.loc 1 210 25 view .LVU1146
 4778 001c 6093 0000 		sts rgblight_config,r22
 4779 0020 7093 0000 		sts rgblight_config+1,r23
 4780 0024 8093 0000 		sts rgblight_config+2,r24
 4781 0028 9093 0000 		sts rgblight_config+3,r25
 211:quantum/rgblight.c ****     if (!rgblight_config.mode) {
 4782               		.loc 1 211 39 is_stmt 1 view .LVU1147
 212:quantum/rgblight.c ****         dprintf("rgblight_init rgblight_config.mode = 0. Write default values to EEPROM.\n");
 4783               		.loc 1 212 5 view .LVU1148
 212:quantum/rgblight.c ****         dprintf("rgblight_init rgblight_config.mode = 0. Write default values to EEPROM.\n");
 4784               		.loc 1 212 9 is_stmt 0 view .LVU1149
 4785 002c 6E7F      		andi r22,lo8(-2)
 212:quantum/rgblight.c ****         dprintf("rgblight_init rgblight_config.mode = 0. Write default values to EEPROM.\n");
 4786               		.loc 1 212 8 view .LVU1150
 4787 002e 01F4      		brne .L238
 213:quantum/rgblight.c ****         eeconfig_update_rgblight_default();
 4788               		.loc 1 213 93 is_stmt 1 view .LVU1151
 214:quantum/rgblight.c ****         rgblight_config.raw = eeconfig_read_rgblight();
 4789               		.loc 1 214 9 view .LVU1152
 4790 0030 0E94 0000 		call eeconfig_update_rgblight_default
 4791               	.LVL322:
 215:quantum/rgblight.c ****     }
 4792               		.loc 1 215 9 view .LVU1153
 215:quantum/rgblight.c ****     }
 4793               		.loc 1 215 31 is_stmt 0 view .LVU1154
 4794 0034 0E94 0000 		call eeconfig_read_rgblight
 4795               	.LVL323:
 215:quantum/rgblight.c ****     }
 4796               		.loc 1 215 29 view .LVU1155
 4797 0038 6093 0000 		sts rgblight_config,r22
 4798 003c 7093 0000 		sts rgblight_config+1,r23
 4799 0040 8093 0000 		sts rgblight_config+2,r24
 4800 0044 9093 0000 		sts rgblight_config+3,r25
 4801               	.L238:
 217:quantum/rgblight.c **** 
 4802               		.loc 1 217 5 is_stmt 1 view .LVU1156
 4803 0048 0E94 0000 		call rgblight_check_config
 4804               	.LVL324:
 219:quantum/rgblight.c **** 
 4805               		.loc 1 219 5 view .LVU1157
 221:quantum/rgblight.c **** 
 4806               		.loc 1 221 5 view .LVU1158
 4807               	.LBB188:
 4808               	.LBI188:
 809:quantum/rgblight.c ****     // OLD!!!! Animation timer -- AVR Timer3
 4809               		.loc 1 809 6 view .LVU1159
 4810               	.LBB189:
 826:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 4811               		.loc 1 826 5 view .LVU1160
 826:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 4812               		.loc 1 826 35 is_stmt 0 view .LVU1161
 4813 004c 1092 0000 		sts rgblight_status+1,__zero_reg__
 827:quantum/rgblight.c **** }
 4814               		.loc 1 827 43 is_stmt 1 view .LVU1162
 4815               	.LBE189:
 4816               	.LBE188:
 223:quantum/rgblight.c ****         rgblight_mode_noeeprom(rgblight_config.mode);
 4817               		.loc 1 223 5 view .LVU1163
 223:quantum/rgblight.c ****         rgblight_mode_noeeprom(rgblight_config.mode);
 4818               		.loc 1 223 9 is_stmt 0 view .LVU1164
 4819 0050 8091 0000 		lds r24,rgblight_config
 223:quantum/rgblight.c ****         rgblight_mode_noeeprom(rgblight_config.mode);
 4820               		.loc 1 223 8 view .LVU1165
 4821 0054 80FF      		sbrs r24,0
 4822 0056 00C0      		rjmp .L239
 224:quantum/rgblight.c ****     }
 4823               		.loc 1 224 9 is_stmt 1 view .LVU1166
 4824 0058 8695      		lsr r24
 4825 005a 0E94 0000 		call rgblight_mode_noeeprom
 4826               	.LVL325:
 4827               	.L239:
 227:quantum/rgblight.c **** }
 4828               		.loc 1 227 5 view .LVU1167
 227:quantum/rgblight.c **** }
 4829               		.loc 1 227 29 is_stmt 0 view .LVU1168
 4830 005e 81E0      		ldi r24,lo8(1)
 4831 0060 8093 0000 		sts is_rgblight_initialized,r24
 4832               	.L235:
 4833               	/* epilogue start */
 228:quantum/rgblight.c **** 
 4834               		.loc 1 228 1 view .LVU1169
 4835 0064 0895      		ret
 4836               		.cfi_endproc
 4837               	.LFE95:
 4839               		.section	.text.rgblight_enable_noeeprom,"ax",@progbits
 4840               	.global	rgblight_enable_noeeprom
 4842               	rgblight_enable_noeeprom:
 4843               	.LFB113:
 346:quantum/rgblight.c ****     rgblight_config.enable = 1;
 4844               		.loc 1 346 37 is_stmt 1 view -0
 4845               		.cfi_startproc
 4846               	/* prologue: function */
 4847               	/* frame size = 0 */
 4848               	/* stack size = 0 */
 4849               	.L__stack_usage = 0
 347:quantum/rgblight.c ****     dprintf("rgblight enable [NOEEPROM]: rgblight_config.enable = %u\n", rgblight_config.enable);
 4850               		.loc 1 347 5 view .LVU1171
 347:quantum/rgblight.c ****     dprintf("rgblight enable [NOEEPROM]: rgblight_config.enable = %u\n", rgblight_config.enable);
 4851               		.loc 1 347 28 is_stmt 0 view .LVU1172
 4852 0000 E0E0      		ldi r30,lo8(rgblight_config)
 4853 0002 F0E0      		ldi r31,hi8(rgblight_config)
 4854 0004 8081      		ld r24,Z
 4855 0006 8160      		ori r24,lo8(1<<0)
 4856 0008 8083      		st Z,r24
 348:quantum/rgblight.c ****     rgblight_mode_noeeprom(rgblight_config.mode);
 4857               		.loc 1 348 97 is_stmt 1 view .LVU1173
 349:quantum/rgblight.c **** }
 4858               		.loc 1 349 5 view .LVU1174
 4859 000a 8695      		lsr r24
 4860 000c 0C94 0000 		jmp rgblight_mode_noeeprom
 4861               	.LVL326:
 4862               		.cfi_endproc
 4863               	.LFE113:
 4865               		.section	.text.rgblight_toggle_noeeprom,"ax",@progbits
 4866               	.global	rgblight_toggle_noeeprom
 4868               	rgblight_toggle_noeeprom:
 4869               	.LFB111:
 329:quantum/rgblight.c ****     dprintf("rgblight toggle [NOEEPROM]: rgblight_config.enable = %u\n", !rgblight_config.enable);
 4870               		.loc 1 329 37 view -0
 4871               		.cfi_startproc
 4872               	/* prologue: function */
 4873               	/* frame size = 0 */
 4874               	/* stack size = 0 */
 4875               	.L__stack_usage = 0
 330:quantum/rgblight.c ****     if (rgblight_config.enable) {
 4876               		.loc 1 330 98 view .LVU1176
 331:quantum/rgblight.c ****         rgblight_disable_noeeprom();
 4877               		.loc 1 331 5 view .LVU1177
 331:quantum/rgblight.c ****         rgblight_disable_noeeprom();
 4878               		.loc 1 331 9 is_stmt 0 view .LVU1178
 4879 0000 8091 0000 		lds r24,rgblight_config
 331:quantum/rgblight.c ****         rgblight_disable_noeeprom();
 4880               		.loc 1 331 8 view .LVU1179
 4881 0004 80FD      		sbrc r24,0
 332:quantum/rgblight.c ****     } else {
 4882               		.loc 1 332 9 is_stmt 1 view .LVU1180
 4883 0006 0C94 0000 		jmp rgblight_disable_noeeprom
 4884               	.LVL327:
 4885               	.L245:
 334:quantum/rgblight.c ****     }
 4886               		.loc 1 334 9 view .LVU1181
 4887 000a 0C94 0000 		jmp rgblight_enable_noeeprom
 4888               	.LVL328:
 4889               		.cfi_endproc
 4890               	.LFE111:
 4892               		.section	.text.rgblight_update_dword,"ax",@progbits
 4893               	.global	rgblight_update_dword
 4895               	rgblight_update_dword:
 4896               	.LVL329:
 4897               	.LFB97:
 232:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_MODEHSVS;
 4898               		.loc 1 232 44 view -0
 4899               		.cfi_startproc
 4900               	/* prologue: function */
 4901               	/* frame size = 0 */
 4902               	/* stack size = 0 */
 4903               	.L__stack_usage = 0
 233:quantum/rgblight.c ****     rgblight_config.raw = dword;
 4904               		.loc 1 233 39 view .LVU1183
 234:quantum/rgblight.c ****     if (rgblight_config.enable)
 4905               		.loc 1 234 5 view .LVU1184
 234:quantum/rgblight.c ****     if (rgblight_config.enable)
 4906               		.loc 1 234 25 is_stmt 0 view .LVU1185
 4907 0000 6093 0000 		sts rgblight_config,r22
 4908 0004 7093 0000 		sts rgblight_config+1,r23
 4909 0008 8093 0000 		sts rgblight_config+2,r24
 4910 000c 9093 0000 		sts rgblight_config+3,r25
 235:quantum/rgblight.c ****         rgblight_mode_noeeprom(rgblight_config.mode);
 4911               		.loc 1 235 5 is_stmt 1 view .LVU1186
 235:quantum/rgblight.c ****         rgblight_mode_noeeprom(rgblight_config.mode);
 4912               		.loc 1 235 8 is_stmt 0 view .LVU1187
 4913 0010 60FF      		sbrs r22,0
 4914 0012 00C0      		rjmp .L247
 236:quantum/rgblight.c ****     else {
 4915               		.loc 1 236 9 is_stmt 1 view .LVU1188
 4916 0014 862F      		mov r24,r22
 4917 0016 8695      		lsr r24
 4918 0018 0C94 0000 		jmp rgblight_mode_noeeprom
 4919               	.LVL330:
 4920               	.L247:
 238:quantum/rgblight.c ****         rgblight_set();
 4921               		.loc 1 238 9 view .LVU1189
 4922               	.LBB192:
 4923               	.LBI192:
 809:quantum/rgblight.c ****     // OLD!!!! Animation timer -- AVR Timer3
 4924               		.loc 1 809 6 view .LVU1190
 4925               	.LBB193:
 826:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 4926               		.loc 1 826 5 view .LVU1191
 826:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 4927               		.loc 1 826 35 is_stmt 0 view .LVU1192
 4928 001c 1092 0000 		sts rgblight_status+1,__zero_reg__
 827:quantum/rgblight.c **** }
 4929               		.loc 1 827 43 is_stmt 1 view .LVU1193
 4930               	.LBE193:
 4931               	.LBE192:
 239:quantum/rgblight.c ****     }
 4932               		.loc 1 239 9 view .LVU1194
 4933 0020 0C94 0000 		jmp rgblight_set
 4934               	.LVL331:
 239:quantum/rgblight.c ****     }
 4935               		.loc 1 239 9 is_stmt 0 view .LVU1195
 4936               		.cfi_endproc
 4937               	.LFE97:
 4939               		.section	.text.rgblight_timer_disable,"ax",@progbits
 4940               	.global	rgblight_timer_disable
 4942               	rgblight_timer_disable:
 4943               	.LFB183:
 4944               		.cfi_startproc
 4945               	/* prologue: function */
 4946               	/* frame size = 0 */
 4947               	/* stack size = 0 */
 4948               	.L__stack_usage = 0
 4949 0000 1092 0000 		sts rgblight_status+1,__zero_reg__
 4950               	/* epilogue start */
 4951 0004 0895      		ret
 4952               		.cfi_endproc
 4953               	.LFE183:
 4955               		.section	.text.rgblight_timer_toggle,"ax",@progbits
 4956               	.global	rgblight_timer_toggle
 4958               	rgblight_timer_toggle:
 4959               	.LFB168:
 842:quantum/rgblight.c ****     dprintf("rgblight timer toggle.\n");
 4960               		.loc 1 842 34 is_stmt 1 view -0
 4961               		.cfi_startproc
 4962               	/* prologue: function */
 4963               	/* frame size = 0 */
 4964               	/* stack size = 0 */
 4965               	.L__stack_usage = 0
 843:quantum/rgblight.c ****     if (rgblight_status.timer_enabled) {
 4966               		.loc 1 843 40 view .LVU1197
 844:quantum/rgblight.c ****         rgblight_timer_disable();
 4967               		.loc 1 844 5 view .LVU1198
 844:quantum/rgblight.c ****         rgblight_timer_disable();
 4968               		.loc 1 844 8 is_stmt 0 view .LVU1199
 4969 0000 8091 0000 		lds r24,rgblight_status+1
 4970 0004 8823      		tst r24
 4971 0006 01F0      		breq .L250
 845:quantum/rgblight.c ****     } else {
 4972               		.loc 1 845 9 is_stmt 1 view .LVU1200
 4973               	.LBB196:
 4974               	.LBI196:
 809:quantum/rgblight.c ****     // OLD!!!! Animation timer -- AVR Timer3
 4975               		.loc 1 809 6 view .LVU1201
 4976               	.LBB197:
 826:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 4977               		.loc 1 826 5 view .LVU1202
 826:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 4978               		.loc 1 826 35 is_stmt 0 view .LVU1203
 4979 0008 1092 0000 		sts rgblight_status+1,__zero_reg__
 827:quantum/rgblight.c **** }
 4980               		.loc 1 827 43 is_stmt 1 view .LVU1204
 4981               	/* epilogue start */
 4982               	.LBE197:
 4983               	.LBE196:
 849:quantum/rgblight.c **** 
 4984               		.loc 1 849 1 is_stmt 0 view .LVU1205
 4985 000c 0895      		ret
 4986               	.L250:
 847:quantum/rgblight.c ****     }
 4987               		.loc 1 847 9 is_stmt 1 view .LVU1206
 4988 000e 0C94 0000 		jmp rgblight_timer_enable
 4989               	.LVL332:
 4990               		.cfi_endproc
 4991               	.LFE168:
 4993               		.section	.text.rgblight_show_solid_color,"ax",@progbits
 4994               	.global	rgblight_show_solid_color
 4996               	rgblight_show_solid_color:
 4997               	.LVL333:
 4998               	.LFB169:
 851:quantum/rgblight.c ****     rgblight_enable();
 4999               		.loc 1 851 65 view -0
 5000               		.cfi_startproc
 851:quantum/rgblight.c ****     rgblight_enable();
 5001               		.loc 1 851 65 is_stmt 0 view .LVU1208
 5002 0000 1F93      		push r17
 5003               	.LCFI95:
 5004               		.cfi_def_cfa_offset 3
 5005               		.cfi_offset 17, -2
 5006 0002 CF93      		push r28
 5007               	.LCFI96:
 5008               		.cfi_def_cfa_offset 4
 5009               		.cfi_offset 28, -3
 5010 0004 DF93      		push r29
 5011               	.LCFI97:
 5012               		.cfi_def_cfa_offset 5
 5013               		.cfi_offset 29, -4
 5014               	/* prologue: function */
 5015               	/* frame size = 0 */
 5016               	/* stack size = 3 */
 5017               	.L__stack_usage = 3
 5018 0006 C82F      		mov r28,r24
 5019 0008 D62F      		mov r29,r22
 5020 000a 142F      		mov r17,r20
 852:quantum/rgblight.c ****     rgblight_mode(RGBLIGHT_MODE_STATIC_LIGHT);
 5021               		.loc 1 852 5 is_stmt 1 view .LVU1209
 5022 000c 0E94 0000 		call rgblight_enable
 5023               	.LVL334:
 853:quantum/rgblight.c ****     rgblight_setrgb(r, g, b);
 5024               		.loc 1 853 5 view .LVU1210
 5025 0010 81E0      		ldi r24,lo8(1)
 5026 0012 0E94 0000 		call rgblight_mode
 5027               	.LVL335:
 854:quantum/rgblight.c **** }
 5028               		.loc 1 854 5 view .LVU1211
 5029 0016 412F      		mov r20,r17
 5030 0018 6D2F      		mov r22,r29
 5031 001a 8C2F      		mov r24,r28
 5032               	/* epilogue start */
 855:quantum/rgblight.c **** 
 5033               		.loc 1 855 1 is_stmt 0 view .LVU1212
 5034 001c DF91      		pop r29
 5035               	.LVL336:
 855:quantum/rgblight.c **** 
 5036               		.loc 1 855 1 view .LVU1213
 5037 001e CF91      		pop r28
 5038               	.LVL337:
 855:quantum/rgblight.c **** 
 5039               		.loc 1 855 1 view .LVU1214
 5040 0020 1F91      		pop r17
 5041               	.LVL338:
 854:quantum/rgblight.c **** }
 5042               		.loc 1 854 5 view .LVU1215
 5043 0022 0C94 0000 		jmp rgblight_setrgb
 5044               	.LVL339:
 854:quantum/rgblight.c **** }
 5045               		.loc 1 854 5 view .LVU1216
 5046               		.cfi_endproc
 5047               	.LFE169:
 5049               		.section	.text.rgblight_task,"ax",@progbits
 5050               	.global	rgblight_task
 5052               	rgblight_task:
 5053               	.LFB171:
 869:quantum/rgblight.c ****     if (rgblight_status.timer_enabled) {
 5054               		.loc 1 869 26 is_stmt 1 view -0
 5055               		.cfi_startproc
 5056 0000 0F93      		push r16
 5057               	.LCFI98:
 5058               		.cfi_def_cfa_offset 3
 5059               		.cfi_offset 16, -2
 5060 0002 1F93      		push r17
 5061               	.LCFI99:
 5062               		.cfi_def_cfa_offset 4
 5063               		.cfi_offset 17, -3
 5064 0004 CF93      		push r28
 5065               	.LCFI100:
 5066               		.cfi_def_cfa_offset 5
 5067               		.cfi_offset 28, -4
 5068 0006 DF93      		push r29
 5069               	.LCFI101:
 5070               		.cfi_def_cfa_offset 6
 5071               		.cfi_offset 29, -5
 5072               	/* prologue: function */
 5073               	/* frame size = 0 */
 5074               	/* stack size = 4 */
 5075               	.L__stack_usage = 4
 870:quantum/rgblight.c ****         effect_func_t effect_func   = rgblight_effect_dummy;
 5076               		.loc 1 870 5 view .LVU1218
 870:quantum/rgblight.c ****         effect_func_t effect_func   = rgblight_effect_dummy;
 5077               		.loc 1 870 8 is_stmt 0 view .LVU1219
 5078 0008 8091 0000 		lds r24,rgblight_status+1
 5079 000c 8823      		tst r24
 5080 000e 01F4      		brne .+2
 5081 0010 00C0      		rjmp .L254
 5082               	.LBB218:
 871:quantum/rgblight.c ****         uint16_t      interval_time = 2000;  // dummy interval
 5083               		.loc 1 871 9 is_stmt 1 view .LVU1220
 5084               	.LVL340:
 872:quantum/rgblight.c ****         uint8_t       delta         = rgblight_config.mode - rgblight_status.base_mode;
 5085               		.loc 1 872 9 view .LVU1221
 873:quantum/rgblight.c ****         animation_status.delta      = delta;
 5086               		.loc 1 873 9 view .LVU1222
 873:quantum/rgblight.c ****         animation_status.delta      = delta;
 5087               		.loc 1 873 77 is_stmt 0 view .LVU1223
 5088 0012 8091 0000 		lds r24,rgblight_status
 873:quantum/rgblight.c ****         animation_status.delta      = delta;
 5089               		.loc 1 873 54 view .LVU1224
 5090 0016 E091 0000 		lds r30,rgblight_config
 5091 001a E695      		lsr r30
 873:quantum/rgblight.c ****         animation_status.delta      = delta;
 5092               		.loc 1 873 23 view .LVU1225
 5093 001c E81B      		sub r30,r24
 5094               	.LVL341:
 874:quantum/rgblight.c **** 
 5095               		.loc 1 874 9 is_stmt 1 view .LVU1226
 874:quantum/rgblight.c **** 
 5096               		.loc 1 874 37 is_stmt 0 view .LVU1227
 5097 001e E093 0000 		sts animation_status+2,r30
 877:quantum/rgblight.c ****         }
 5098               		.loc 1 877 9 is_stmt 1 view .LVU1228
 880:quantum/rgblight.c ****             // breathing mode
 5099               		.loc 1 880 14 view .LVU1229
 880:quantum/rgblight.c ****             // breathing mode
 5100               		.loc 1 880 17 is_stmt 0 view .LVU1230
 5101 0022 8230      		cpi r24,lo8(2)
 5102 0024 01F4      		brne .L257
 882:quantum/rgblight.c ****             effect_func   = rgblight_effect_breathing;
 5103               		.loc 1 882 13 is_stmt 1 view .LVU1231
 5104               	.LVL342:
 5105               	.LBB219:
 5106               	.LBI219:
 580:quantum/rgblight.c ****     return
 5107               		.loc 1 580 16 view .LVU1232
 580:quantum/rgblight.c ****     return
 5108               		.loc 1 580 16 is_stmt 0 view .LVU1233
 5109               	.LBE219:
 5110               	.LBE218:
 581:quantum/rgblight.c **** #    ifdef VELOCIKEY_ENABLE
 5111               		.loc 1 581 5 is_stmt 1 view .LVU1234
 5112               	.LBB250:
 5113               	.LBB222:
 5114               	.LBB220:
 585:quantum/rgblight.c **** }
 5115               		.loc 1 585 29 view .LVU1235
 585:quantum/rgblight.c **** }
 5116               		.loc 1 585 29 view .LVU1236
 585:quantum/rgblight.c **** }
 5117               		.loc 1 585 29 view .LVU1237
 5118               	.LBE220:
 5119               	.LBE222:
 882:quantum/rgblight.c ****             effect_func   = rgblight_effect_breathing;
 5120               		.loc 1 882 29 is_stmt 0 view .LVU1238
 5121 0026 F0E0      		ldi r31,0
 5122 0028 E050      		subi r30,lo8(-(RGBLED_BREATHING_INTERVALS))
 5123 002a F040      		sbci r31,hi8(-(RGBLED_BREATHING_INTERVALS))
 5124               	.LVL343:
 5125               	.LBB223:
 5126               	.LBB221:
 585:quantum/rgblight.c **** }
 5127               		.loc 1 585 29 view .LVU1239
 5128               	/* #APP */
 5129               	 ;  585 "quantum/rgblight.c" 1
 5130 002c E491      		lpm r30, Z
 5131               		
 5132               	 ;  0 "" 2
 5133               	.LVL344:
 585:quantum/rgblight.c **** }
 5134               		.loc 1 585 29 is_stmt 1 view .LVU1240
 585:quantum/rgblight.c **** }
 5135               		.loc 1 585 29 is_stmt 0 view .LVU1241
 5136               	/* #NOAPP */
 5137               	.LBE221:
 5138               	.LBE223:
 882:quantum/rgblight.c ****             effect_func   = rgblight_effect_breathing;
 5139               		.loc 1 882 27 view .LVU1242
 5140 002e CE2F      		mov r28,r30
 5141 0030 D0E0      		ldi r29,0
 5142               	.LVL345:
 883:quantum/rgblight.c ****         }
 5143               		.loc 1 883 13 is_stmt 1 view .LVU1243
 883:quantum/rgblight.c ****         }
 5144               		.loc 1 883 27 is_stmt 0 view .LVU1244
 5145 0032 00E0      		ldi r16,lo8(gs(rgblight_effect_breathing))
 5146 0034 10E0      		ldi r17,hi8(gs(rgblight_effect_breathing))
 5147               	.LVL346:
 5148               	.L258:
 940:quantum/rgblight.c ****             animation_status.restart    = false;
 5149               		.loc 1 940 9 is_stmt 1 view .LVU1245
 940:quantum/rgblight.c ****             animation_status.restart    = false;
 5150               		.loc 1 940 12 is_stmt 0 view .LVU1246
 5151 0036 8091 0000 		lds r24,animation_status+3
 5152 003a 8823      		tst r24
 5153 003c 01F0      		breq .L264
 941:quantum/rgblight.c ****             animation_status.last_timer = timer_read() - interval_time - 1;
 5154               		.loc 1 941 13 is_stmt 1 view .LVU1247
 941:quantum/rgblight.c ****             animation_status.last_timer = timer_read() - interval_time - 1;
 5155               		.loc 1 941 41 is_stmt 0 view .LVU1248
 5156 003e 1092 0000 		sts animation_status+3,__zero_reg__
 942:quantum/rgblight.c ****             animation_status.pos16      = 0;  // restart signal to local each effect
 5157               		.loc 1 942 13 is_stmt 1 view .LVU1249
 942:quantum/rgblight.c ****             animation_status.pos16      = 0;  // restart signal to local each effect
 5158               		.loc 1 942 43 is_stmt 0 view .LVU1250
 5159 0042 0E94 0000 		call timer_read
 5160               	.LVL347:
 942:quantum/rgblight.c ****             animation_status.pos16      = 0;  // restart signal to local each effect
 5161               		.loc 1 942 72 view .LVU1251
 5162 0046 9E01      		movw r18,r28
 5163 0048 2095      		com r18
 5164 004a 3095      		com r19
 5165 004c 820F      		add r24,r18
 5166 004e 931F      		adc r25,r19
 942:quantum/rgblight.c ****             animation_status.pos16      = 0;  // restart signal to local each effect
 5167               		.loc 1 942 41 view .LVU1252
 5168 0050 9093 0000 		sts animation_status+1,r25
 5169 0054 8093 0000 		sts animation_status,r24
 943:quantum/rgblight.c ****         }
 5170               		.loc 1 943 13 is_stmt 1 view .LVU1253
 943:quantum/rgblight.c ****         }
 5171               		.loc 1 943 41 is_stmt 0 view .LVU1254
 5172 0058 1092 0000 		sts animation_status+4+1,__zero_reg__
 5173 005c 1092 0000 		sts animation_status+4,__zero_reg__
 5174               	.L264:
 945:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 5175               		.loc 1 945 9 is_stmt 1 view .LVU1255
 945:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 5176               		.loc 1 945 13 is_stmt 0 view .LVU1256
 5177 0060 8091 0000 		lds r24,animation_status
 5178 0064 9091 0000 		lds r25,animation_status+1
 5179 0068 0E94 0000 		call timer_elapsed
 5180               	.LVL348:
 945:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 5181               		.loc 1 945 12 view .LVU1257
 5182 006c 8C17      		cp r24,r28
 5183 006e 9D07      		cpc r25,r29
 5184 0070 00F4      		brsh .+2
 5185 0072 00C0      		rjmp .L254
 960:quantum/rgblight.c ****             effect_func(&animation_status);
 5186               		.loc 1 960 13 is_stmt 1 view .LVU1258
 960:quantum/rgblight.c ****             effect_func(&animation_status);
 5187               		.loc 1 960 41 is_stmt 0 view .LVU1259
 5188 0074 E091 0000 		lds r30,animation_status
 5189 0078 F091 0000 		lds r31,animation_status+1
 5190 007c CE0F      		add r28,r30
 5191 007e DF1F      		adc r29,r31
 5192               	.LVL349:
 960:quantum/rgblight.c ****             effect_func(&animation_status);
 5193               		.loc 1 960 41 view .LVU1260
 5194 0080 D093 0000 		sts animation_status+1,r29
 5195 0084 C093 0000 		sts animation_status,r28
 961:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 5196               		.loc 1 961 13 is_stmt 1 view .LVU1261
 5197 0088 80E0      		ldi r24,lo8(animation_status)
 5198 008a 90E0      		ldi r25,hi8(animation_status)
 5199 008c F801      		movw r30,r16
 5200               	/* epilogue start */
 5201               	.LBE250:
 973:quantum/rgblight.c **** 
 5202               		.loc 1 973 1 is_stmt 0 view .LVU1262
 5203 008e DF91      		pop r29
 5204 0090 CF91      		pop r28
 5205 0092 1F91      		pop r17
 5206 0094 0F91      		pop r16
 5207               	.LVL350:
 5208               	.LBB251:
 961:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 5209               		.loc 1 961 13 view .LVU1263
 5210 0096 0994      		ijmp
 5211               	.LVL351:
 5212               	.L257:
 887:quantum/rgblight.c ****             // rainbow mood mode
 5213               		.loc 1 887 14 is_stmt 1 view .LVU1264
 887:quantum/rgblight.c ****             // rainbow mood mode
 5214               		.loc 1 887 17 is_stmt 0 view .LVU1265
 5215 0098 8630      		cpi r24,lo8(6)
 5216 009a 01F4      		brne .L259
 889:quantum/rgblight.c ****             effect_func   = rgblight_effect_rainbow_mood;
 5217               		.loc 1 889 13 is_stmt 1 view .LVU1266
 5218               	.LVL352:
 5219               	.LBB224:
 5220               	.LBI224:
 580:quantum/rgblight.c ****     return
 5221               		.loc 1 580 16 view .LVU1267
 580:quantum/rgblight.c ****     return
 5222               		.loc 1 580 16 is_stmt 0 view .LVU1268
 5223               	.LBE224:
 5224               	.LBE251:
 581:quantum/rgblight.c **** #    ifdef VELOCIKEY_ENABLE
 5225               		.loc 1 581 5 is_stmt 1 view .LVU1269
 5226               	.LBB252:
 5227               	.LBB227:
 5228               	.LBB225:
 585:quantum/rgblight.c **** }
 5229               		.loc 1 585 29 view .LVU1270
 585:quantum/rgblight.c **** }
 5230               		.loc 1 585 29 view .LVU1271
 585:quantum/rgblight.c **** }
 5231               		.loc 1 585 29 view .LVU1272
 5232               	.LBE225:
 5233               	.LBE227:
 889:quantum/rgblight.c ****             effect_func   = rgblight_effect_rainbow_mood;
 5234               		.loc 1 889 29 is_stmt 0 view .LVU1273
 5235 009c F0E0      		ldi r31,0
 5236 009e E050      		subi r30,lo8(-(RGBLED_RAINBOW_MOOD_INTERVALS))
 5237 00a0 F040      		sbci r31,hi8(-(RGBLED_RAINBOW_MOOD_INTERVALS))
 5238               	.LVL353:
 5239               	.LBB228:
 5240               	.LBB226:
 585:quantum/rgblight.c **** }
 5241               		.loc 1 585 29 view .LVU1274
 5242               	/* #APP */
 5243               	 ;  585 "quantum/rgblight.c" 1
 5244 00a2 E491      		lpm r30, Z
 5245               		
 5246               	 ;  0 "" 2
 5247               	.LVL354:
 585:quantum/rgblight.c **** }
 5248               		.loc 1 585 29 is_stmt 1 view .LVU1275
 585:quantum/rgblight.c **** }
 5249               		.loc 1 585 29 is_stmt 0 view .LVU1276
 5250               	/* #NOAPP */
 5251               	.LBE226:
 5252               	.LBE228:
 889:quantum/rgblight.c ****             effect_func   = rgblight_effect_rainbow_mood;
 5253               		.loc 1 889 27 view .LVU1277
 5254 00a4 CE2F      		mov r28,r30
 5255 00a6 D0E0      		ldi r29,0
 5256               	.LVL355:
 890:quantum/rgblight.c ****         }
 5257               		.loc 1 890 13 is_stmt 1 view .LVU1278
 890:quantum/rgblight.c ****         }
 5258               		.loc 1 890 27 is_stmt 0 view .LVU1279
 5259 00a8 00E0      		ldi r16,lo8(gs(rgblight_effect_rainbow_mood))
 5260 00aa 10E0      		ldi r17,hi8(gs(rgblight_effect_rainbow_mood))
 5261 00ac 00C0      		rjmp .L258
 5262               	.LVL356:
 5263               	.L259:
 894:quantum/rgblight.c ****             // rainbow swirl mode
 5264               		.loc 1 894 14 is_stmt 1 view .LVU1280
 894:quantum/rgblight.c ****             // rainbow swirl mode
 5265               		.loc 1 894 17 is_stmt 0 view .LVU1281
 5266 00ae 8930      		cpi r24,lo8(9)
 5267 00b0 01F4      		brne .L260
 896:quantum/rgblight.c ****             effect_func   = rgblight_effect_rainbow_swirl;
 5268               		.loc 1 896 13 is_stmt 1 view .LVU1282
 5269               	.LVL357:
 5270               	.LBB229:
 5271               	.LBI229:
 580:quantum/rgblight.c ****     return
 5272               		.loc 1 580 16 view .LVU1283
 580:quantum/rgblight.c ****     return
 5273               		.loc 1 580 16 is_stmt 0 view .LVU1284
 5274               	.LBE229:
 5275               	.LBE252:
 581:quantum/rgblight.c **** #    ifdef VELOCIKEY_ENABLE
 5276               		.loc 1 581 5 is_stmt 1 view .LVU1285
 5277               	.LBB253:
 5278               	.LBB232:
 5279               	.LBB230:
 585:quantum/rgblight.c **** }
 5280               		.loc 1 585 29 view .LVU1286
 585:quantum/rgblight.c **** }
 5281               		.loc 1 585 29 view .LVU1287
 585:quantum/rgblight.c **** }
 5282               		.loc 1 585 29 view .LVU1288
 5283               	.LBE230:
 5284               	.LBE232:
 896:quantum/rgblight.c ****             effect_func   = rgblight_effect_rainbow_swirl;
 5285               		.loc 1 896 85 is_stmt 0 view .LVU1289
 5286 00b2 E695      		lsr r30
 5287               	.LVL358:
 896:quantum/rgblight.c ****             effect_func   = rgblight_effect_rainbow_swirl;
 5288               		.loc 1 896 29 view .LVU1290
 5289 00b4 F0E0      		ldi r31,0
 5290 00b6 E050      		subi r30,lo8(-(RGBLED_RAINBOW_SWIRL_INTERVALS))
 5291 00b8 F040      		sbci r31,hi8(-(RGBLED_RAINBOW_SWIRL_INTERVALS))
 5292               	.LBB233:
 5293               	.LBB231:
 585:quantum/rgblight.c **** }
 5294               		.loc 1 585 29 view .LVU1291
 5295               	/* #APP */
 5296               	 ;  585 "quantum/rgblight.c" 1
 5297 00ba E491      		lpm r30, Z
 5298               		
 5299               	 ;  0 "" 2
 5300               	.LVL359:
 585:quantum/rgblight.c **** }
 5301               		.loc 1 585 29 is_stmt 1 view .LVU1292
 585:quantum/rgblight.c **** }
 5302               		.loc 1 585 29 is_stmt 0 view .LVU1293
 5303               	/* #NOAPP */
 5304               	.LBE231:
 5305               	.LBE233:
 896:quantum/rgblight.c ****             effect_func   = rgblight_effect_rainbow_swirl;
 5306               		.loc 1 896 27 view .LVU1294
 5307 00bc CE2F      		mov r28,r30
 5308 00be D0E0      		ldi r29,0
 5309               	.LVL360:
 897:quantum/rgblight.c ****         }
 5310               		.loc 1 897 13 is_stmt 1 view .LVU1295
 897:quantum/rgblight.c ****         }
 5311               		.loc 1 897 27 is_stmt 0 view .LVU1296
 5312 00c0 00E0      		ldi r16,lo8(gs(rgblight_effect_rainbow_swirl))
 5313 00c2 10E0      		ldi r17,hi8(gs(rgblight_effect_rainbow_swirl))
 5314 00c4 00C0      		rjmp .L258
 5315               	.LVL361:
 5316               	.L260:
 901:quantum/rgblight.c ****             // snake mode
 5317               		.loc 1 901 14 is_stmt 1 view .LVU1297
 901:quantum/rgblight.c ****             // snake mode
 5318               		.loc 1 901 17 is_stmt 0 view .LVU1298
 5319 00c6 8F30      		cpi r24,lo8(15)
 5320 00c8 01F4      		brne .L261
 903:quantum/rgblight.c ****             effect_func   = rgblight_effect_snake;
 5321               		.loc 1 903 13 is_stmt 1 view .LVU1299
 5322               	.LVL362:
 5323               	.LBB234:
 5324               	.LBI234:
 580:quantum/rgblight.c ****     return
 5325               		.loc 1 580 16 view .LVU1300
 580:quantum/rgblight.c ****     return
 5326               		.loc 1 580 16 is_stmt 0 view .LVU1301
 5327               	.LBE234:
 5328               	.LBE253:
 581:quantum/rgblight.c **** #    ifdef VELOCIKEY_ENABLE
 5329               		.loc 1 581 5 is_stmt 1 view .LVU1302
 5330               	.LBB254:
 5331               	.LBB237:
 5332               	.LBB235:
 585:quantum/rgblight.c **** }
 5333               		.loc 1 585 29 view .LVU1303
 585:quantum/rgblight.c **** }
 5334               		.loc 1 585 29 view .LVU1304
 585:quantum/rgblight.c **** }
 5335               		.loc 1 585 29 view .LVU1305
 5336               	.LBE235:
 5337               	.LBE237:
 903:quantum/rgblight.c ****             effect_func   = rgblight_effect_snake;
 5338               		.loc 1 903 77 is_stmt 0 view .LVU1306
 5339 00ca E695      		lsr r30
 5340               	.LVL363:
 903:quantum/rgblight.c ****             effect_func   = rgblight_effect_snake;
 5341               		.loc 1 903 29 view .LVU1307
 5342 00cc F0E0      		ldi r31,0
 5343 00ce E050      		subi r30,lo8(-(RGBLED_SNAKE_INTERVALS))
 5344 00d0 F040      		sbci r31,hi8(-(RGBLED_SNAKE_INTERVALS))
 5345               	.LBB238:
 5346               	.LBB236:
 585:quantum/rgblight.c **** }
 5347               		.loc 1 585 29 view .LVU1308
 5348               	/* #APP */
 5349               	 ;  585 "quantum/rgblight.c" 1
 5350 00d2 E491      		lpm r30, Z
 5351               		
 5352               	 ;  0 "" 2
 5353               	.LVL364:
 585:quantum/rgblight.c **** }
 5354               		.loc 1 585 29 is_stmt 1 view .LVU1309
 585:quantum/rgblight.c **** }
 5355               		.loc 1 585 29 is_stmt 0 view .LVU1310
 5356               	/* #NOAPP */
 5357               	.LBE236:
 5358               	.LBE238:
 903:quantum/rgblight.c ****             effect_func   = rgblight_effect_snake;
 5359               		.loc 1 903 27 view .LVU1311
 5360 00d4 CE2F      		mov r28,r30
 5361 00d6 D0E0      		ldi r29,0
 5362               	.LVL365:
 904:quantum/rgblight.c ****         }
 5363               		.loc 1 904 13 is_stmt 1 view .LVU1312
 904:quantum/rgblight.c ****         }
 5364               		.loc 1 904 27 is_stmt 0 view .LVU1313
 5365 00d8 00E0      		ldi r16,lo8(gs(rgblight_effect_snake))
 5366 00da 10E0      		ldi r17,hi8(gs(rgblight_effect_snake))
 5367 00dc 00C0      		rjmp .L258
 5368               	.LVL366:
 5369               	.L261:
 908:quantum/rgblight.c ****             // knight mode
 5370               		.loc 1 908 14 is_stmt 1 view .LVU1314
 908:quantum/rgblight.c ****             // knight mode
 5371               		.loc 1 908 17 is_stmt 0 view .LVU1315
 5372 00de 8531      		cpi r24,lo8(21)
 5373 00e0 01F4      		brne .L262
 910:quantum/rgblight.c ****             effect_func   = rgblight_effect_knight;
 5374               		.loc 1 910 13 is_stmt 1 view .LVU1316
 5375               	.LVL367:
 5376               	.LBB239:
 5377               	.LBI239:
 580:quantum/rgblight.c ****     return
 5378               		.loc 1 580 16 view .LVU1317
 580:quantum/rgblight.c ****     return
 5379               		.loc 1 580 16 is_stmt 0 view .LVU1318
 5380               	.LBE239:
 5381               	.LBE254:
 581:quantum/rgblight.c **** #    ifdef VELOCIKEY_ENABLE
 5382               		.loc 1 581 5 is_stmt 1 view .LVU1319
 5383               	.LBB255:
 5384               	.LBB242:
 5385               	.LBB240:
 585:quantum/rgblight.c **** }
 5386               		.loc 1 585 29 view .LVU1320
 585:quantum/rgblight.c **** }
 5387               		.loc 1 585 29 view .LVU1321
 585:quantum/rgblight.c **** }
 5388               		.loc 1 585 29 view .LVU1322
 5389               	.LBE240:
 5390               	.LBE242:
 910:quantum/rgblight.c ****             effect_func   = rgblight_effect_knight;
 5391               		.loc 1 910 29 is_stmt 0 view .LVU1323
 5392 00e2 F0E0      		ldi r31,0
 5393 00e4 E050      		subi r30,lo8(-(RGBLED_KNIGHT_INTERVALS))
 5394 00e6 F040      		sbci r31,hi8(-(RGBLED_KNIGHT_INTERVALS))
 5395               	.LVL368:
 5396               	.LBB243:
 5397               	.LBB241:
 585:quantum/rgblight.c **** }
 5398               		.loc 1 585 29 view .LVU1324
 5399               	/* #APP */
 5400               	 ;  585 "quantum/rgblight.c" 1
 5401 00e8 E491      		lpm r30, Z
 5402               		
 5403               	 ;  0 "" 2
 5404               	.LVL369:
 585:quantum/rgblight.c **** }
 5405               		.loc 1 585 29 is_stmt 1 view .LVU1325
 585:quantum/rgblight.c **** }
 5406               		.loc 1 585 29 is_stmt 0 view .LVU1326
 5407               	/* #NOAPP */
 5408               	.LBE241:
 5409               	.LBE243:
 910:quantum/rgblight.c ****             effect_func   = rgblight_effect_knight;
 5410               		.loc 1 910 27 view .LVU1327
 5411 00ea CE2F      		mov r28,r30
 5412 00ec D0E0      		ldi r29,0
 5413               	.LVL370:
 911:quantum/rgblight.c ****         }
 5414               		.loc 1 911 13 is_stmt 1 view .LVU1328
 911:quantum/rgblight.c ****         }
 5415               		.loc 1 911 27 is_stmt 0 view .LVU1329
 5416 00ee 00E0      		ldi r16,lo8(gs(rgblight_effect_knight))
 5417 00f0 10E0      		ldi r17,hi8(gs(rgblight_effect_knight))
 5418 00f2 00C0      		rjmp .L258
 5419               	.LVL371:
 5420               	.L262:
 915:quantum/rgblight.c ****             // christmas mode
 5421               		.loc 1 915 14 is_stmt 1 view .LVU1330
 917:quantum/rgblight.c ****             effect_func   = (effect_func_t)rgblight_effect_christmas;
 5422               		.loc 1 917 27 is_stmt 0 view .LVU1331
 5423 00f4 C8E2      		ldi r28,lo8(40)
 5424 00f6 D0E0      		ldi r29,0
 918:quantum/rgblight.c ****         }
 5425               		.loc 1 918 27 view .LVU1332
 5426 00f8 00E0      		ldi r16,lo8(gs(rgblight_effect_christmas))
 5427 00fa 10E0      		ldi r17,hi8(gs(rgblight_effect_christmas))
 915:quantum/rgblight.c ****             // christmas mode
 5428               		.loc 1 915 17 view .LVU1333
 5429 00fc 8831      		cpi r24,lo8(24)
 5430 00fe 01F4      		brne .+2
 5431 0100 00C0      		rjmp .L258
 922:quantum/rgblight.c ****             // RGB test mode
 5432               		.loc 1 922 14 is_stmt 1 view .LVU1334
 922:quantum/rgblight.c ****             // RGB test mode
 5433               		.loc 1 922 17 is_stmt 0 view .LVU1335
 5434 0102 8332      		cpi r24,lo8(35)
 5435 0104 01F4      		brne .L263
 924:quantum/rgblight.c ****             effect_func   = (effect_func_t)rgblight_effect_rgbtest;
 5436               		.loc 1 924 13 is_stmt 1 view .LVU1336
 5437               	.LBB244:
 924:quantum/rgblight.c ****             effect_func   = (effect_func_t)rgblight_effect_rgbtest;
 5438               		.loc 1 924 29 view .LVU1337
 5439               	.LVL372:
 924:quantum/rgblight.c ****             effect_func   = (effect_func_t)rgblight_effect_rgbtest;
 5440               		.loc 1 924 29 view .LVU1338
 924:quantum/rgblight.c ****             effect_func   = (effect_func_t)rgblight_effect_rgbtest;
 5441               		.loc 1 924 29 view .LVU1339
 5442 0106 E0E0      		ldi r30,lo8(RGBLED_RGBTEST_INTERVALS)
 5443 0108 F0E0      		ldi r31,hi8(RGBLED_RGBTEST_INTERVALS)
 5444               	.LVL373:
 924:quantum/rgblight.c ****             effect_func   = (effect_func_t)rgblight_effect_rgbtest;
 5445               		.loc 1 924 29 is_stmt 0 view .LVU1340
 5446               	/* #APP */
 5447               	 ;  924 "quantum/rgblight.c" 1
 5448 010a C591      		lpm r28, Z+
 5449 010c D491      		lpm r29, Z
 5450               		
 5451               	 ;  0 "" 2
 5452               	.LVL374:
 924:quantum/rgblight.c ****             effect_func   = (effect_func_t)rgblight_effect_rgbtest;
 5453               		.loc 1 924 29 is_stmt 1 view .LVU1341
 924:quantum/rgblight.c ****             effect_func   = (effect_func_t)rgblight_effect_rgbtest;
 5454               		.loc 1 924 29 is_stmt 0 view .LVU1342
 5455               	/* #NOAPP */
 5456               	.LBE244:
 925:quantum/rgblight.c ****         }
 5457               		.loc 1 925 13 is_stmt 1 view .LVU1343
 925:quantum/rgblight.c ****         }
 5458               		.loc 1 925 27 is_stmt 0 view .LVU1344
 5459 010e 00E0      		ldi r16,lo8(gs(rgblight_effect_rgbtest))
 5460 0110 10E0      		ldi r17,hi8(gs(rgblight_effect_rgbtest))
 5461 0112 00C0      		rjmp .L258
 5462               	.LVL375:
 5463               	.L263:
 929:quantum/rgblight.c ****             interval_time = 500;
 5464               		.loc 1 929 14 is_stmt 1 view .LVU1345
 930:quantum/rgblight.c ****             effect_func   = (effect_func_t)rgblight_effect_alternating;
 5465               		.loc 1 930 27 is_stmt 0 view .LVU1346
 5466 0114 C4EF      		ldi r28,lo8(-12)
 5467 0116 D1E0      		ldi r29,lo8(1)
 931:quantum/rgblight.c ****         }
 5468               		.loc 1 931 27 view .LVU1347
 5469 0118 00E0      		ldi r16,lo8(gs(rgblight_effect_alternating))
 5470 011a 10E0      		ldi r17,hi8(gs(rgblight_effect_alternating))
 929:quantum/rgblight.c ****             interval_time = 500;
 5471               		.loc 1 929 17 view .LVU1348
 5472 011c 8432      		cpi r24,lo8(36)
 5473 011e 01F4      		brne .+2
 5474 0120 00C0      		rjmp .L258
 935:quantum/rgblight.c ****             interval_time = get_interval_time(&RGBLED_TWINKLE_INTERVALS[delta % 3], 5, 50);
 5475               		.loc 1 935 14 is_stmt 1 view .LVU1349
 872:quantum/rgblight.c ****         uint8_t       delta         = rgblight_config.mode - rgblight_status.base_mode;
 5476               		.loc 1 872 23 is_stmt 0 view .LVU1350
 5477 0122 C0ED      		ldi r28,lo8(-48)
 5478 0124 D7E0      		ldi r29,lo8(7)
 871:quantum/rgblight.c ****         uint16_t      interval_time = 2000;  // dummy interval
 5479               		.loc 1 871 23 view .LVU1351
 5480 0126 00E0      		ldi r16,lo8(gs(rgblight_effect_dummy))
 5481 0128 10E0      		ldi r17,hi8(gs(rgblight_effect_dummy))
 935:quantum/rgblight.c ****             interval_time = get_interval_time(&RGBLED_TWINKLE_INTERVALS[delta % 3], 5, 50);
 5482               		.loc 1 935 17 view .LVU1352
 5483 012a 8532      		cpi r24,lo8(37)
 5484 012c 01F0      		breq .+2
 5485 012e 00C0      		rjmp .L258
 936:quantum/rgblight.c ****             effect_func   = (effect_func_t)rgblight_effect_twinkle;
 5486               		.loc 1 936 13 is_stmt 1 view .LVU1353
 5487               	.LVL376:
 5488               	.LBB245:
 5489               	.LBI245:
 580:quantum/rgblight.c ****     return
 5490               		.loc 1 580 16 view .LVU1354
 580:quantum/rgblight.c ****     return
 5491               		.loc 1 580 16 is_stmt 0 view .LVU1355
 5492               	.LBE245:
 5493               	.LBE255:
 581:quantum/rgblight.c **** #    ifdef VELOCIKEY_ENABLE
 5494               		.loc 1 581 5 is_stmt 1 view .LVU1356
 5495               	.LBB256:
 5496               	.LBB248:
 5497               	.LBB246:
 585:quantum/rgblight.c **** }
 5498               		.loc 1 585 29 view .LVU1357
 585:quantum/rgblight.c **** }
 5499               		.loc 1 585 29 view .LVU1358
 585:quantum/rgblight.c **** }
 5500               		.loc 1 585 29 view .LVU1359
 5501               	.LBE246:
 5502               	.LBE248:
 936:quantum/rgblight.c ****             effect_func   = (effect_func_t)rgblight_effect_twinkle;
 5503               		.loc 1 936 79 is_stmt 0 view .LVU1360
 5504 0130 8E2F      		mov r24,r30
 5505 0132 63E0      		ldi r22,lo8(3)
 5506 0134 0E94 0000 		call __udivmodqi4
 936:quantum/rgblight.c ****             effect_func   = (effect_func_t)rgblight_effect_twinkle;
 5507               		.loc 1 936 29 view .LVU1361
 5508 0138 E92F      		mov r30,r25
 5509               	.LVL377:
 936:quantum/rgblight.c ****             effect_func   = (effect_func_t)rgblight_effect_twinkle;
 5510               		.loc 1 936 29 view .LVU1362
 5511 013a F0E0      		ldi r31,0
 5512 013c E050      		subi r30,lo8(-(RGBLED_TWINKLE_INTERVALS))
 5513 013e F040      		sbci r31,hi8(-(RGBLED_TWINKLE_INTERVALS))
 5514               	.LBB249:
 5515               	.LBB247:
 585:quantum/rgblight.c **** }
 5516               		.loc 1 585 29 view .LVU1363
 5517               	/* #APP */
 5518               	 ;  585 "quantum/rgblight.c" 1
 5519 0140 E491      		lpm r30, Z
 5520               		
 5521               	 ;  0 "" 2
 5522               	.LVL378:
 585:quantum/rgblight.c **** }
 5523               		.loc 1 585 29 is_stmt 1 view .LVU1364
 585:quantum/rgblight.c **** }
 5524               		.loc 1 585 29 is_stmt 0 view .LVU1365
 5525               	/* #NOAPP */
 5526               	.LBE247:
 5527               	.LBE249:
 936:quantum/rgblight.c ****             effect_func   = (effect_func_t)rgblight_effect_twinkle;
 5528               		.loc 1 936 27 view .LVU1366
 5529 0142 CE2F      		mov r28,r30
 5530 0144 D0E0      		ldi r29,0
 5531               	.LVL379:
 937:quantum/rgblight.c ****         }
 5532               		.loc 1 937 13 is_stmt 1 view .LVU1367
 937:quantum/rgblight.c ****         }
 5533               		.loc 1 937 27 is_stmt 0 view .LVU1368
 5534 0146 00E0      		ldi r16,lo8(gs(rgblight_effect_twinkle))
 5535 0148 10E0      		ldi r17,hi8(gs(rgblight_effect_twinkle))
 5536 014a 00C0      		rjmp .L258
 5537               	.LVL380:
 5538               	.L254:
 5539               	/* epilogue start */
 937:quantum/rgblight.c ****         }
 5540               		.loc 1 937 27 view .LVU1369
 5541               	.LBE256:
 973:quantum/rgblight.c **** 
 5542               		.loc 1 973 1 view .LVU1370
 5543 014c DF91      		pop r29
 5544 014e CF91      		pop r28
 5545 0150 1F91      		pop r17
 5546 0152 0F91      		pop r16
 5547 0154 0895      		ret
 5548               		.cfi_endproc
 5549               	.LFE171:
 5551               		.section	.bss.maxval.3447,"aw",@nobits
 5554               	maxval.3447:
 5555 0000 00        		.zero	1
 5556               		.section	.data.increment.3432,"aw"
 5559               	increment.3432:
 5560 0000 01        		.byte	1
 5561               		.section	.data.increment.3420,"aw"
 5564               	increment.3420:
 5565 0000 01        		.byte	1
 5566               		.section	.data.high_bound.3419,"aw"
 5569               	high_bound.3419:
 5570 0000 02        		.byte	2
 5571               		.section	.bss.low_bound.3418,"aw",@nobits
 5574               	low_bound.3418:
 5575 0000 00        		.zero	1
 5576               		.section	.bss.pos.3402,"aw",@nobits
 5579               	pos.3402:
 5580 0000 00        		.zero	1
 5581               		.section	.bss.led_twinkle_state,"aw",@nobits
 5584               	led_twinkle_state:
 5585 0000 0000 0000 		.zero	150
 5585      0000 0000 
 5585      0000 0000 
 5585      0000 0000 
 5585      0000 0000 
 5586               		.weak	RGBLED_TWINKLE_INTERVALS
 5587               		.section	.progmem.data.RGBLED_TWINKLE_INTERVALS,"a"
 5590               	RGBLED_TWINKLE_INTERVALS:
 5591 0000 32        		.byte	50
 5592 0001 19        		.byte	25
 5593 0002 0A        		.byte	10
 5594               		.weak	RGBLED_RGBTEST_INTERVALS
 5595               		.section	.progmem.data.RGBLED_RGBTEST_INTERVALS,"a"
 5598               	RGBLED_RGBTEST_INTERVALS:
 5599 0000 0004      		.word	1024
 5600               		.weak	RGBLED_KNIGHT_INTERVALS
 5601               		.section	.progmem.data.RGBLED_KNIGHT_INTERVALS,"a"
 5604               	RGBLED_KNIGHT_INTERVALS:
 5605 0000 7F        		.byte	127
 5606 0001 3F        		.byte	63
 5607 0002 1F        		.byte	31
 5608               		.weak	RGBLED_SNAKE_INTERVALS
 5609               		.section	.progmem.data.RGBLED_SNAKE_INTERVALS,"a"
 5612               	RGBLED_SNAKE_INTERVALS:
 5613 0000 64        		.byte	100
 5614 0001 32        		.byte	50
 5615 0002 14        		.byte	20
 5616               		.weak	RGBLED_RAINBOW_SWIRL_INTERVALS
 5617               		.section	.progmem.data.RGBLED_RAINBOW_SWIRL_INTERVALS,"a"
 5620               	RGBLED_RAINBOW_SWIRL_INTERVALS:
 5621 0000 64        		.byte	100
 5622 0001 32        		.byte	50
 5623 0002 14        		.byte	20
 5624               		.weak	RGBLED_RAINBOW_MOOD_INTERVALS
 5625               		.section	.progmem.data.RGBLED_RAINBOW_MOOD_INTERVALS,"a"
 5628               	RGBLED_RAINBOW_MOOD_INTERVALS:
 5629 0000 78        		.byte	120
 5630 0001 3C        		.byte	60
 5631 0002 1E        		.byte	30
 5632               		.weak	RGBLED_BREATHING_INTERVALS
 5633               		.section	.progmem.data.RGBLED_BREATHING_INTERVALS,"a"
 5636               	RGBLED_BREATHING_INTERVALS:
 5637 0000 1E        		.byte	30
 5638 0001 14        		.byte	20
 5639 0002 0A        		.byte	10
 5640 0003 05        		.byte	5
 5641               	.global	rgblight_effect_breathe_table
 5642               		.section	.progmem.data.rgblight_effect_breathe_table,"a"
 5645               	rgblight_effect_breathe_table:
 5646 0000 22        		.byte	34
 5647 0001 23        		.byte	35
 5648 0002 25        		.byte	37
 5649 0003 26        		.byte	38
 5650 0004 28        		.byte	40
 5651 0005 29        		.byte	41
 5652 0006 2A        		.byte	42
 5653 0007 2C        		.byte	44
 5654 0008 2D        		.byte	45
 5655 0009 2F        		.byte	47
 5656 000a 30        		.byte	48
 5657 000b 32        		.byte	50
 5658 000c 33        		.byte	51
 5659 000d 35        		.byte	53
 5660 000e 36        		.byte	54
 5661 000f 38        		.byte	56
 5662 0010 3A        		.byte	58
 5663 0011 3B        		.byte	59
 5664 0012 3D        		.byte	61
 5665 0013 3E        		.byte	62
 5666 0014 40        		.byte	64
 5667 0015 42        		.byte	66
 5668 0016 43        		.byte	67
 5669 0017 45        		.byte	69
 5670 0018 47        		.byte	71
 5671 0019 49        		.byte	73
 5672 001a 4A        		.byte	74
 5673 001b 4C        		.byte	76
 5674 001c 4E        		.byte	78
 5675 001d 50        		.byte	80
 5676 001e 51        		.byte	81
 5677 001f 53        		.byte	83
 5678 0020 55        		.byte	85
 5679 0021 57        		.byte	87
 5680 0022 59        		.byte	89
 5681 0023 5A        		.byte	90
 5682 0024 5C        		.byte	92
 5683 0025 5E        		.byte	94
 5684 0026 60        		.byte	96
 5685 0027 62        		.byte	98
 5686 0028 64        		.byte	100
 5687 0029 66        		.byte	102
 5688 002a 68        		.byte	104
 5689 002b 69        		.byte	105
 5690 002c 6B        		.byte	107
 5691 002d 6D        		.byte	109
 5692 002e 6F        		.byte	111
 5693 002f 71        		.byte	113
 5694 0030 73        		.byte	115
 5695 0031 75        		.byte	117
 5696 0032 77        		.byte	119
 5697 0033 79        		.byte	121
 5698 0034 7B        		.byte	123
 5699 0035 7D        		.byte	125
 5700 0036 7F        		.byte	127
 5701 0037 81        		.byte	-127
 5702 0038 83        		.byte	-125
 5703 0039 85        		.byte	-123
 5704 003a 87        		.byte	-121
 5705 003b 89        		.byte	-119
 5706 003c 8A        		.byte	-118
 5707 003d 8C        		.byte	-116
 5708 003e 8E        		.byte	-114
 5709 003f 90        		.byte	-112
 5710 0040 92        		.byte	-110
 5711 0041 94        		.byte	-108
 5712 0042 96        		.byte	-106
 5713 0043 98        		.byte	-104
 5714 0044 9A        		.byte	-102
 5715 0045 9C        		.byte	-100
 5716 0046 9E        		.byte	-98
 5717 0047 9F        		.byte	-97
 5718 0048 A1        		.byte	-95
 5719 0049 A3        		.byte	-93
 5720 004a A5        		.byte	-91
 5721 004b A7        		.byte	-89
 5722 004c A8        		.byte	-88
 5723 004d AA        		.byte	-86
 5724 004e AC        		.byte	-84
 5725 004f AE        		.byte	-82
 5726 0050 AF        		.byte	-81
 5727 0051 B1        		.byte	-79
 5728 0052 B3        		.byte	-77
 5729 0053 B4        		.byte	-76
 5730 0054 B6        		.byte	-74
 5731 0055 B8        		.byte	-72
 5732 0056 B9        		.byte	-71
 5733 0057 BB        		.byte	-69
 5734 0058 BC        		.byte	-68
 5735 0059 BE        		.byte	-66
 5736 005a BF        		.byte	-65
 5737 005b C1        		.byte	-63
 5738 005c C2        		.byte	-62
 5739 005d C3        		.byte	-61
 5740 005e C5        		.byte	-59
 5741 005f C6        		.byte	-58
 5742 0060 C7        		.byte	-57
 5743 0061 C9        		.byte	-55
 5744 0062 CA        		.byte	-54
 5745 0063 CB        		.byte	-53
 5746 0064 CC        		.byte	-52
 5747 0065 CD        		.byte	-51
 5748 0066 CE        		.byte	-50
 5749 0067 D0        		.byte	-48
 5750 0068 D1        		.byte	-47
 5751 0069 D2        		.byte	-46
 5752 006a D2        		.byte	-46
 5753 006b D3        		.byte	-45
 5754 006c D4        		.byte	-44
 5755 006d D5        		.byte	-43
 5756 006e D6        		.byte	-42
 5757 006f D7        		.byte	-41
 5758 0070 D7        		.byte	-41
 5759 0071 D8        		.byte	-40
 5760 0072 D9        		.byte	-39
 5761 0073 D9        		.byte	-39
 5762 0074 DA        		.byte	-38
 5763 0075 DA        		.byte	-38
 5764 0076 DB        		.byte	-37
 5765 0077 DB        		.byte	-37
 5766 0078 DB        		.byte	-37
 5767 0079 DC        		.byte	-36
 5768 007a DC        		.byte	-36
 5769 007b DC        		.byte	-36
 5770 007c DC        		.byte	-36
 5771 007d DC        		.byte	-36
 5772 007e DD        		.byte	-35
 5773 007f DD        		.byte	-35
 5774 0080 DD        		.byte	-35
 5775 0081 DD        		.byte	-35
 5776 0082 DC        		.byte	-36
 5777 0083 DC        		.byte	-36
 5778 0084 DC        		.byte	-36
 5779 0085 DC        		.byte	-36
 5780 0086 DC        		.byte	-36
 5781 0087 DB        		.byte	-37
 5782 0088 DB        		.byte	-37
 5783 0089 DB        		.byte	-37
 5784 008a DA        		.byte	-38
 5785 008b DA        		.byte	-38
 5786 008c D9        		.byte	-39
 5787 008d D9        		.byte	-39
 5788 008e D8        		.byte	-40
 5789 008f D7        		.byte	-41
 5790 0090 D7        		.byte	-41
 5791 0091 D6        		.byte	-42
 5792 0092 D5        		.byte	-43
 5793 0093 D4        		.byte	-44
 5794 0094 D3        		.byte	-45
 5795 0095 D2        		.byte	-46
 5796 0096 D2        		.byte	-46
 5797 0097 D1        		.byte	-47
 5798 0098 D0        		.byte	-48
 5799 0099 CE        		.byte	-50
 5800 009a CD        		.byte	-51
 5801 009b CC        		.byte	-52
 5802 009c CB        		.byte	-53
 5803 009d CA        		.byte	-54
 5804 009e C9        		.byte	-55
 5805 009f C7        		.byte	-57
 5806 00a0 C6        		.byte	-58
 5807 00a1 C5        		.byte	-59
 5808 00a2 C3        		.byte	-61
 5809 00a3 C2        		.byte	-62
 5810 00a4 C1        		.byte	-63
 5811 00a5 BF        		.byte	-65
 5812 00a6 BE        		.byte	-66
 5813 00a7 BC        		.byte	-68
 5814 00a8 BB        		.byte	-69
 5815 00a9 B9        		.byte	-71
 5816 00aa B8        		.byte	-72
 5817 00ab B6        		.byte	-74
 5818 00ac B4        		.byte	-76
 5819 00ad B3        		.byte	-77
 5820 00ae B1        		.byte	-79
 5821 00af AF        		.byte	-81
 5822 00b0 AE        		.byte	-82
 5823 00b1 AC        		.byte	-84
 5824 00b2 AA        		.byte	-86
 5825 00b3 A8        		.byte	-88
 5826 00b4 A7        		.byte	-89
 5827 00b5 A5        		.byte	-91
 5828 00b6 A3        		.byte	-93
 5829 00b7 A1        		.byte	-95
 5830 00b8 9F        		.byte	-97
 5831 00b9 9E        		.byte	-98
 5832 00ba 9C        		.byte	-100
 5833 00bb 9A        		.byte	-102
 5834 00bc 98        		.byte	-104
 5835 00bd 96        		.byte	-106
 5836 00be 94        		.byte	-108
 5837 00bf 92        		.byte	-110
 5838 00c0 90        		.byte	-112
 5839 00c1 8E        		.byte	-114
 5840 00c2 8C        		.byte	-116
 5841 00c3 8A        		.byte	-118
 5842 00c4 89        		.byte	-119
 5843 00c5 87        		.byte	-121
 5844 00c6 85        		.byte	-123
 5845 00c7 83        		.byte	-125
 5846 00c8 81        		.byte	-127
 5847 00c9 7F        		.byte	127
 5848 00ca 7D        		.byte	125
 5849 00cb 7B        		.byte	123
 5850 00cc 79        		.byte	121
 5851 00cd 77        		.byte	119
 5852 00ce 75        		.byte	117
 5853 00cf 73        		.byte	115
 5854 00d0 71        		.byte	113
 5855 00d1 6F        		.byte	111
 5856 00d2 6D        		.byte	109
 5857 00d3 6B        		.byte	107
 5858 00d4 69        		.byte	105
 5859 00d5 68        		.byte	104
 5860 00d6 66        		.byte	102
 5861 00d7 64        		.byte	100
 5862 00d8 62        		.byte	98
 5863 00d9 60        		.byte	96
 5864 00da 5E        		.byte	94
 5865 00db 5C        		.byte	92
 5866 00dc 5A        		.byte	90
 5867 00dd 59        		.byte	89
 5868 00de 57        		.byte	87
 5869 00df 55        		.byte	85
 5870 00e0 53        		.byte	83
 5871 00e1 51        		.byte	81
 5872 00e2 50        		.byte	80
 5873 00e3 4E        		.byte	78
 5874 00e4 4C        		.byte	76
 5875 00e5 4A        		.byte	74
 5876 00e6 49        		.byte	73
 5877 00e7 47        		.byte	71
 5878 00e8 45        		.byte	69
 5879 00e9 43        		.byte	67
 5880 00ea 42        		.byte	66
 5881 00eb 40        		.byte	64
 5882 00ec 3E        		.byte	62
 5883 00ed 3D        		.byte	61
 5884 00ee 3B        		.byte	59
 5885 00ef 3A        		.byte	58
 5886 00f0 38        		.byte	56
 5887 00f1 36        		.byte	54
 5888 00f2 35        		.byte	53
 5889 00f3 33        		.byte	51
 5890 00f4 32        		.byte	50
 5891 00f5 30        		.byte	48
 5892 00f6 2F        		.byte	47
 5893 00f7 2D        		.byte	45
 5894 00f8 2C        		.byte	44
 5895 00f9 2A        		.byte	42
 5896 00fa 29        		.byte	41
 5897 00fb 28        		.byte	40
 5898 00fc 26        		.byte	38
 5899 00fd 25        		.byte	37
 5900 00fe 23        		.byte	35
 5901 00ff 22        		.byte	34
 5902               	.global	rgblight_ranges
 5903               		.section	.data.rgblight_ranges,"aw"
 5906               	rgblight_ranges:
 5907 0000 00        		.byte	0
 5908 0001 1E        		.byte	30
 5909 0002 00        		.byte	0
 5910 0003 1E        		.byte	30
 5911 0004 1E        		.byte	30
 5912               		.comm	led,90,1
 5913               	.global	animation_status
 5914               		.section	.bss.animation_status,"aw",@nobits
 5917               	animation_status:
 5918 0000 0000 0000 		.zero	6
 5918      0000 
 5919               	.global	is_rgblight_initialized
 5920               		.section	.bss.is_rgblight_initialized,"aw",@nobits
 5923               	is_rgblight_initialized:
 5924 0000 00        		.zero	1
 5925               	.global	rgblight_status
 5926               		.section	.bss.rgblight_status,"aw",@nobits
 5929               	rgblight_status:
 5930 0000 0000      		.zero	2
 5931               		.comm	rgblight_config,5,1
 5932               		.weak	RGBLED_GRADIENT_RANGES
 5933               		.section	.progmem.data.RGBLED_GRADIENT_RANGES,"a"
 5936               	RGBLED_GRADIENT_RANGES:
 5937 0000 FF        		.byte	-1
 5938 0001 AA        		.byte	-86
 5939 0002 7F        		.byte	127
 5940 0003 55        		.byte	85
 5941 0004 40        		.byte	64
 5942               		.section	.rodata.mode_base_table,"a"
 5945               	mode_base_table:
 5946 0000 00        		.byte	0
 5947 0001 01        		.byte	1
 5948 0002 02        		.byte	2
 5949 0003 02        		.byte	2
 5950 0004 02        		.byte	2
 5951 0005 02        		.byte	2
 5952 0006 06        		.byte	6
 5953 0007 06        		.byte	6
 5954 0008 06        		.byte	6
 5955 0009 09        		.byte	9
 5956 000a 09        		.byte	9
 5957 000b 09        		.byte	9
 5958 000c 09        		.byte	9
 5959 000d 09        		.byte	9
 5960 000e 09        		.byte	9
 5961 000f 0F        		.byte	15
 5962 0010 0F        		.byte	15
 5963 0011 0F        		.byte	15
 5964 0012 0F        		.byte	15
 5965 0013 0F        		.byte	15
 5966 0014 0F        		.byte	15
 5967 0015 15        		.byte	21
 5968 0016 15        		.byte	21
 5969 0017 15        		.byte	21
 5970 0018 18        		.byte	24
 5971 0019 19        		.byte	25
 5972 001a 19        		.byte	25
 5973 001b 19        		.byte	25
 5974 001c 19        		.byte	25
 5975 001d 19        		.byte	25
 5976 001e 19        		.byte	25
 5977 001f 19        		.byte	25
 5978 0020 19        		.byte	25
 5979 0021 19        		.byte	25
 5980 0022 19        		.byte	25
 5981 0023 23        		.byte	35
 5982 0024 24        		.byte	36
 5983 0025 25        		.byte	37
 5984 0026 25        		.byte	37
 5985 0027 25        		.byte	37
 5986 0028 25        		.byte	37
 5987 0029 25        		.byte	37
 5988 002a 25        		.byte	37
 5989               		.section	.data.static_effect_table,"aw"
 5992               	static_effect_table:
 5993 0000 01        		.byte	1
 5994 0001 19        		.byte	25
 5995 0002 1A        		.byte	26
 5996 0003 1B        		.byte	27
 5997 0004 1C        		.byte	28
 5998 0005 1D        		.byte	29
 5999 0006 1E        		.byte	30
 6000 0007 1F        		.byte	31
 6001 0008 20        		.byte	32
 6002 0009 21        		.byte	33
 6003 000a 22        		.byte	34
 6004               		.text
 6005               	.Letext0:
 6006               		.file 4 "/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/stdint.h"
 6007               		.file 5 "/usr/local/Cellar/avr-gcc@8/8.4.0/lib/avr-gcc/8/gcc/avr/8.4.0/include/stddef.h"
 6008               		.file 6 "/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/stdlib.h"
 6009               		.file 7 "tmk_core/common/timer.h"
 6010               		.file 8 "./quantum/color.h"
 6011               		.file 9 "quantum/rgblight.h"
 6012               		.file 10 "tmk_core/common/debug.h"
 6013               		.file 11 "quantum/led_tables.h"
 6014               		.file 12 "./lib/lib8tion/random8.h"
 6015               		.file 13 "./lib/lib8tion/trig8.h"
 6016               		.file 14 "quantum/rgblight_breathe_table.h"
 6017               		.file 15 "/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/string.h"
 6018               		.file 16 "drivers/ws2812.h"
 6019               		.file 17 "tmk_core/common/eeconfig.h"
 6020               		.file 18 "/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/avr/eeprom.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 rgblight.c
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:2      *ABS*:000000000000003e __SP_H__
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:3      *ABS*:000000000000003d __SP_L__
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:4      *ABS*:000000000000003f __SREG__
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:5      *ABS*:0000000000000000 __tmp_reg__
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:6      *ABS*:0000000000000001 __zero_reg__
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:12     .text.rgblight_effect_dummy:0000000000000000 rgblight_effect_dummy
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:31     .text.rgblight_set_clipping_range:0000000000000000 rgblight_set_clipping_range
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:5906   .data.rgblight_ranges:0000000000000000 rgblight_ranges
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:57     .text.rgblight_set_effect_range:0000000000000000 rgblight_set_effect_range
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:103    .text.sethsv_raw:0000000000000000 sethsv_raw
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:165    .text.sethsv:0000000000000000 sethsv
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:184    .text.setrgb:0000000000000000 setrgb
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:213    .text.rgblight_check_config:0000000000000000 rgblight_check_config
                            *COM*:0000000000000005 rgblight_config
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:256    .text.eeconfig_read_rgblight:0000000000000000 eeconfig_read_rgblight
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:276    .text.eeconfig_update_rgblight:0000000000000000 eeconfig_update_rgblight
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:327    .text.eeconfig_update_rgblight_current:0000000000000000 eeconfig_update_rgblight_current
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:348    .text.eeconfig_update_rgblight_default:0000000000000000 eeconfig_update_rgblight_default
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:390    .text.eeconfig_debug_rgblight:0000000000000000 eeconfig_debug_rgblight
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:414    .text.rgblight_read_dword:0000000000000000 rgblight_read_dword
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:437    .text.rgblight_get_mode:0000000000000000 rgblight_get_mode
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:467    .text.rgblight_is_enabled:0000000000000000 rgblight_is_enabled
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:488    .text.rgblight_increase_speed_helper:0000000000000000 rgblight_increase_speed_helper
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:529    .text.rgblight_increase_speed:0000000000000000 rgblight_increase_speed
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:547    .text.rgblight_increase_speed_noeeprom:0000000000000000 rgblight_increase_speed_noeeprom
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:565    .text.rgblight_decrease_speed_helper:0000000000000000 rgblight_decrease_speed_helper
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:606    .text.rgblight_decrease_speed:0000000000000000 rgblight_decrease_speed
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:624    .text.rgblight_decrease_speed_noeeprom:0000000000000000 rgblight_decrease_speed_noeeprom
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:642    .text.rgblight_get_speed:0000000000000000 rgblight_get_speed
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:661    .text.rgblight_set_speed_eeprom_helper:0000000000000000 rgblight_set_speed_eeprom_helper
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:696    .text.rgblight_set_speed:0000000000000000 rgblight_set_speed
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:716    .text.rgblight_set_speed_noeeprom:0000000000000000 rgblight_set_speed_noeeprom
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:736    .text.rgblight_get_hue:0000000000000000 rgblight_get_hue
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:755    .text.rgblight_get_sat:0000000000000000 rgblight_get_sat
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:774    .text.rgblight_get_val:0000000000000000 rgblight_get_val
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:793    .text.rgblight_get_hsv:0000000000000000 rgblight_get_hsv
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:818    .text.rgblight_call_driver:0000000000000000 rgblight_call_driver
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:838    .text.rgblight_set:0000000000000000 rgblight_set
                            *COM*:000000000000005a led
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:915    .text.rgblight_setrgb:0000000000000000 rgblight_setrgb
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:985    .text.rgblight_sethsv_noeeprom_old:0000000000000000 rgblight_sethsv_noeeprom_old
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:1056   .text.rgblight_effect_breathing:0000000000000000 rgblight_effect_breathing
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:5645   .progmem.data.rgblight_effect_breathe_table:0000000000000000 rgblight_effect_breathe_table
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:1124   .text.rgblight_effect_rainbow_mood:0000000000000000 rgblight_effect_rainbow_mood
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:1171   .text.rgblight_effect_rgbtest:0000000000000000 rgblight_effect_rgbtest
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:5554   .bss.maxval.3447:0000000000000000 maxval.3447
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:1325   .text.rgblight_sethsv_eeprom_helper:0000000000000000 rgblight_sethsv_eeprom_helper
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:5945   .rodata.mode_base_table:0000000000000000 mode_base_table
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:5929   .bss.rgblight_status:0000000000000000 rgblight_status
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:5936   .progmem.data.RGBLED_GRADIENT_RANGES:0000000000000000 RGBLED_GRADIENT_RANGES
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:1668   .text.rgblight_increase_hue_helper:0000000000000000 rgblight_increase_hue_helper
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:1702   .text.rgblight_increase_hue_noeeprom:0000000000000000 rgblight_increase_hue_noeeprom
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:1720   .text.rgblight_increase_hue:0000000000000000 rgblight_increase_hue
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:1738   .text.rgblight_decrease_hue_helper:0000000000000000 rgblight_decrease_hue_helper
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:1772   .text.rgblight_decrease_hue_noeeprom:0000000000000000 rgblight_decrease_hue_noeeprom
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:1790   .text.rgblight_decrease_hue:0000000000000000 rgblight_decrease_hue
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:1808   .text.rgblight_increase_sat_helper:0000000000000000 rgblight_increase_sat_helper
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:1839   .text.rgblight_increase_sat_helper:000000000000000e L_1431
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:1862   .text.rgblight_increase_sat_noeeprom:0000000000000000 rgblight_increase_sat_noeeprom
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:1880   .text.rgblight_increase_sat:0000000000000000 rgblight_increase_sat
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:1898   .text.rgblight_decrease_sat_helper:0000000000000000 rgblight_decrease_sat_helper
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:1928   .text.rgblight_decrease_sat_helper:000000000000000e L_1487
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:1951   .text.rgblight_decrease_sat_noeeprom:0000000000000000 rgblight_decrease_sat_noeeprom
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:1969   .text.rgblight_decrease_sat:0000000000000000 rgblight_decrease_sat
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:1987   .text.rgblight_increase_val_helper:0000000000000000 rgblight_increase_val_helper
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:2017   .text.rgblight_increase_val_helper:000000000000000e L_1543
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:2040   .text.rgblight_increase_val_noeeprom:0000000000000000 rgblight_increase_val_noeeprom
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:2058   .text.rgblight_increase_val:0000000000000000 rgblight_increase_val
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:2076   .text.rgblight_decrease_val_helper:0000000000000000 rgblight_decrease_val_helper
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:2106   .text.rgblight_decrease_val_helper:000000000000000e L_1599
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:2129   .text.rgblight_decrease_val_noeeprom:0000000000000000 rgblight_decrease_val_noeeprom
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:2147   .text.rgblight_decrease_val:0000000000000000 rgblight_decrease_val
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:2165   .text.rgblight_sethsv:0000000000000000 rgblight_sethsv
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:2185   .text.rgblight_sethsv_noeeprom:0000000000000000 rgblight_sethsv_noeeprom
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:2205   .text.rgblight_setrgb_at:0000000000000000 rgblight_setrgb_at
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:2254   .text.rgblight_sethsv_at:0000000000000000 rgblight_sethsv_at
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:2334   .text.rgblight_setrgb_range:0000000000000000 rgblight_setrgb_range
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:2427   .text.rgblight_sethsv_range:0000000000000000 rgblight_sethsv_range
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:2514   .text.rgblight_sethsv_master:0000000000000000 rgblight_sethsv_master
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:2543   .text.rgblight_sethsv_slave:0000000000000000 rgblight_sethsv_slave
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:2572   .text.rgblight_setrgb_master:0000000000000000 rgblight_setrgb_master
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:2601   .text.rgblight_setrgb_slave:0000000000000000 rgblight_setrgb_slave
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:2630   .text.rgblight_effect_rainbow_swirl:0000000000000000 rgblight_effect_rainbow_swirl
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:2774   .text.rgblight_effect_snake:0000000000000000 rgblight_effect_snake
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:5579   .bss.pos.3402:0000000000000000 pos.3402
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:3049   .text.rgblight_effect_knight:0000000000000000 rgblight_effect_knight
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:5564   .data.increment.3420:0000000000000000 increment.3420
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:5574   .bss.low_bound.3418:0000000000000000 low_bound.3418
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:5569   .data.high_bound.3419:0000000000000000 high_bound.3419
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:3269   .text.rgblight_effect_christmas:0000000000000000 rgblight_effect_christmas
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:5559   .data.increment.3432:0000000000000000 increment.3432
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:3555   .text.rgblight_effect_alternating:0000000000000000 rgblight_effect_alternating
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:3714   .text.rgblight_effect_twinkle:0000000000000000 rgblight_effect_twinkle
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:5584   .bss.led_twinkle_state:0000000000000000 led_twinkle_state
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:4089   .text.rgblight_disable:0000000000000000 rgblight_disable
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:4158   .text.rgblight_disable_noeeprom:0000000000000000 rgblight_disable_noeeprom
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:4220   .text.rgblight_timer_init:0000000000000000 rgblight_timer_init
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:4241   .text.rgblight_timer_enable:0000000000000000 rgblight_timer_enable
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:5992   .data.static_effect_table:0000000000000000 static_effect_table
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:5917   .bss.animation_status:0000000000000000 animation_status
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:4300   .text.rgblight_mode_eeprom_helper:0000000000000000 rgblight_mode_eeprom_helper
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:4427   .text.rgblight_step_helper:0000000000000000 rgblight_step_helper
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:4468   .text.rgblight_step_noeeprom:0000000000000000 rgblight_step_noeeprom
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:4486   .text.rgblight_step:0000000000000000 rgblight_step
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:4504   .text.rgblight_step_reverse_helper:0000000000000000 rgblight_step_reverse_helper
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:4544   .text.rgblight_step_reverse_noeeprom:0000000000000000 rgblight_step_reverse_noeeprom
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:4562   .text.rgblight_step_reverse:0000000000000000 rgblight_step_reverse
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:4580   .text.rgblight_mode:0000000000000000 rgblight_mode
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:4600   .text.rgblight_increase:0000000000000000 rgblight_increase
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:4635   .text.rgblight_decrease:0000000000000000 rgblight_decrease
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:4670   .text.rgblight_enable:0000000000000000 rgblight_enable
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:4696   .text.rgblight_toggle:0000000000000000 rgblight_toggle
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:4723   .text.rgblight_mode_noeeprom:0000000000000000 rgblight_mode_noeeprom
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:4743   .text.rgblight_init:0000000000000000 rgblight_init
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:5923   .bss.is_rgblight_initialized:0000000000000000 is_rgblight_initialized
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:4842   .text.rgblight_enable_noeeprom:0000000000000000 rgblight_enable_noeeprom
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:4868   .text.rgblight_toggle_noeeprom:0000000000000000 rgblight_toggle_noeeprom
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:4895   .text.rgblight_update_dword:0000000000000000 rgblight_update_dword
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:4942   .text.rgblight_timer_disable:0000000000000000 rgblight_timer_disable
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:4958   .text.rgblight_timer_toggle:0000000000000000 rgblight_timer_toggle
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:4996   .text.rgblight_show_solid_color:0000000000000000 rgblight_show_solid_color
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:5052   .text.rgblight_task:0000000000000000 rgblight_task
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:5636   .progmem.data.RGBLED_BREATHING_INTERVALS:0000000000000000 RGBLED_BREATHING_INTERVALS
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:5628   .progmem.data.RGBLED_RAINBOW_MOOD_INTERVALS:0000000000000000 RGBLED_RAINBOW_MOOD_INTERVALS
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:5620   .progmem.data.RGBLED_RAINBOW_SWIRL_INTERVALS:0000000000000000 RGBLED_RAINBOW_SWIRL_INTERVALS
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:5612   .progmem.data.RGBLED_SNAKE_INTERVALS:0000000000000000 RGBLED_SNAKE_INTERVALS
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:5604   .progmem.data.RGBLED_KNIGHT_INTERVALS:0000000000000000 RGBLED_KNIGHT_INTERVALS
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:5598   .progmem.data.RGBLED_RGBTEST_INTERVALS:0000000000000000 RGBLED_RGBTEST_INTERVALS
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccIVHgSc.s:5590   .progmem.data.RGBLED_TWINKLE_INTERVALS:0000000000000000 RGBLED_TWINKLE_INTERVALS

UNDEFINED SYMBOLS
hsv_to_rgb
eeprom_read_dword
eeprom_update_dword
ws2812_setleds
__divmodhi4
__udivmodhi4
__divmodqi4
__umulhisi3
__muluhisi3
__mulhisi3
__mulshisi3
__udivmodsi4
rand
memchr
timer_read
eeconfig_is_enabled
eeconfig_init
timer_elapsed
__udivmodqi4
__do_copy_data
__do_clear_bss
