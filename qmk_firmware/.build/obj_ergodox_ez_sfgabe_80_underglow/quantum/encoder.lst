   1               		.file	"encoder.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.encoder_update_user,"ax",@progbits
  11               		.weak	encoder_update_user
  13               	encoder_update_user:
  14               	.LVL0:
  15               	.LFB112:
  16               		.file 1 "quantum/encoder.c"
   1:quantum/encoder.c **** /*
   2:quantum/encoder.c ****  * Copyright 2018 Jack Humbert <jack.humb@gmail.com>
   3:quantum/encoder.c ****  *
   4:quantum/encoder.c ****  * This program is free software: you can redistribute it and/or modify
   5:quantum/encoder.c ****  * it under the terms of the GNU General Public License as published by
   6:quantum/encoder.c ****  * the Free Software Foundation, either version 2 of the License, or
   7:quantum/encoder.c ****  * (at your option) any later version.
   8:quantum/encoder.c ****  *
   9:quantum/encoder.c ****  * This program is distributed in the hope that it will be useful,
  10:quantum/encoder.c ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:quantum/encoder.c ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:quantum/encoder.c ****  * GNU General Public License for more details.
  13:quantum/encoder.c ****  *
  14:quantum/encoder.c ****  * You should have received a copy of the GNU General Public License
  15:quantum/encoder.c ****  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:quantum/encoder.c ****  */
  17:quantum/encoder.c **** 
  18:quantum/encoder.c **** #include "encoder.h"
  19:quantum/encoder.c **** #ifdef SPLIT_KEYBOARD
  20:quantum/encoder.c **** #    include "split_util.h"
  21:quantum/encoder.c **** #endif
  22:quantum/encoder.c **** 
  23:quantum/encoder.c **** // for memcpy
  24:quantum/encoder.c **** #include <string.h>
  25:quantum/encoder.c **** 
  26:quantum/encoder.c **** #ifndef ENCODER_RESOLUTION
  27:quantum/encoder.c **** #    define ENCODER_RESOLUTION 4
  28:quantum/encoder.c **** #endif
  29:quantum/encoder.c **** 
  30:quantum/encoder.c **** #if !defined(ENCODERS_PAD_A) || !defined(ENCODERS_PAD_B)
  31:quantum/encoder.c **** #    error "No encoder pads defined by ENCODERS_PAD_A and ENCODERS_PAD_B"
  32:quantum/encoder.c **** #endif
  33:quantum/encoder.c **** 
  34:quantum/encoder.c **** #define NUMBER_OF_ENCODERS (sizeof(encoders_pad_a) / sizeof(pin_t))
  35:quantum/encoder.c **** static pin_t encoders_pad_a[] = ENCODERS_PAD_A;
  36:quantum/encoder.c **** static pin_t encoders_pad_b[] = ENCODERS_PAD_B;
  37:quantum/encoder.c **** 
  38:quantum/encoder.c **** #ifndef ENCODER_DIRECTION_FLIP
  39:quantum/encoder.c **** #    define ENCODER_CLOCKWISE true
  40:quantum/encoder.c **** #    define ENCODER_COUNTER_CLOCKWISE false
  41:quantum/encoder.c **** #else
  42:quantum/encoder.c **** #    define ENCODER_CLOCKWISE false
  43:quantum/encoder.c **** #    define ENCODER_COUNTER_CLOCKWISE true
  44:quantum/encoder.c **** #endif
  45:quantum/encoder.c **** static int8_t encoder_LUT[] = {0, -1, 1, 0, 1, 0, 0, -1, -1, 0, 0, 1, 0, 1, -1, 0};
  46:quantum/encoder.c **** 
  47:quantum/encoder.c **** static uint8_t encoder_state[NUMBER_OF_ENCODERS]  = {0};
  48:quantum/encoder.c **** static int8_t  encoder_pulses[NUMBER_OF_ENCODERS] = {0};
  49:quantum/encoder.c **** 
  50:quantum/encoder.c **** #ifdef SPLIT_KEYBOARD
  51:quantum/encoder.c **** // right half encoders come over as second set of encoders
  52:quantum/encoder.c **** static uint8_t encoder_value[NUMBER_OF_ENCODERS * 2] = {0};
  53:quantum/encoder.c **** // row offsets for each hand
  54:quantum/encoder.c **** static uint8_t thisHand, thatHand;
  55:quantum/encoder.c **** #else
  56:quantum/encoder.c **** static uint8_t encoder_value[NUMBER_OF_ENCODERS] = {0};
  57:quantum/encoder.c **** #endif
  58:quantum/encoder.c **** 
  59:quantum/encoder.c **** __attribute__((weak)) void encoder_update_user(int8_t index, bool clockwise) {}
  17               		.loc 1 59 78 view -0
  18               		.cfi_startproc
  19               	/* prologue: function */
  20               	/* frame size = 0 */
  21               	/* stack size = 0 */
  22               	.L__stack_usage = 0
  23               		.loc 1 59 79 view .LVU1
  24               	/* epilogue start */
  25               		.loc 1 59 1 is_stmt 0 view .LVU2
  26 0000 0895      		ret
  27               		.cfi_endproc
  28               	.LFE112:
  30               		.section	.text.encoder_update_kb,"ax",@progbits
  31               		.weak	encoder_update_kb
  33               	encoder_update_kb:
  34               	.LVL1:
  35               	.LFB113:
  60:quantum/encoder.c **** 
  61:quantum/encoder.c **** __attribute__((weak)) void encoder_update_kb(int8_t index, bool clockwise) { encoder_update_user(in
  36               		.loc 1 61 76 is_stmt 1 view -0
  37               		.cfi_startproc
  38               	/* prologue: function */
  39               	/* frame size = 0 */
  40               	/* stack size = 0 */
  41               	.L__stack_usage = 0
  42               		.loc 1 61 78 view .LVU4
  43 0000 0C94 0000 		jmp encoder_update_user
  44               	.LVL2:
  45               		.loc 1 61 78 is_stmt 0 view .LVU5
  46               		.cfi_endproc
  47               	.LFE113:
  49               		.section	.text.encoder_init,"ax",@progbits
  50               	.global	encoder_init
  52               	encoder_init:
  53               	.LFB114:
  62:quantum/encoder.c **** 
  63:quantum/encoder.c **** void encoder_init(void) {
  54               		.loc 1 63 25 is_stmt 1 view -0
  55               		.cfi_startproc
  56               	/* prologue: function */
  57               	/* frame size = 0 */
  58               	/* stack size = 0 */
  59               	.L__stack_usage = 0
  64:quantum/encoder.c **** #if defined(SPLIT_KEYBOARD) && defined(ENCODERS_PAD_A_RIGHT) && defined(ENCODERS_PAD_B_RIGHT)
  65:quantum/encoder.c ****     if (!isLeftHand) {
  66:quantum/encoder.c ****         const pin_t encoders_pad_a_right[] = ENCODERS_PAD_A_RIGHT;
  67:quantum/encoder.c ****         const pin_t encoders_pad_b_right[] = ENCODERS_PAD_B_RIGHT;
  68:quantum/encoder.c ****         for (uint8_t i = 0; i < NUMBER_OF_ENCODERS; i++) {
  69:quantum/encoder.c ****             encoders_pad_a[i] = encoders_pad_a_right[i];
  70:quantum/encoder.c ****             encoders_pad_b[i] = encoders_pad_b_right[i];
  71:quantum/encoder.c ****         }
  72:quantum/encoder.c ****     }
  73:quantum/encoder.c **** #endif
  74:quantum/encoder.c **** 
  75:quantum/encoder.c ****     for (int i = 0; i < NUMBER_OF_ENCODERS; i++) {
  60               		.loc 1 75 5 view .LVU7
  61               	.LBB2:
  62               		.loc 1 75 10 view .LVU8
  63               	.LVL3:
  64               		.loc 1 75 21 view .LVU9
  76:quantum/encoder.c ****         setPinInputHigh(encoders_pad_a[i]);
  65               		.loc 1 76 9 view .LVU10
  66 0000 3F98      		cbi 0x7,7
  67 0002 479A      		sbi 0x8,7
  77:quantum/encoder.c ****         setPinInputHigh(encoders_pad_b[i]);
  68               		.loc 1 77 9 view .LVU11
  69 0004 6E98      		cbi 0xd,6
  70 0006 769A      		sbi 0xe,6
  78:quantum/encoder.c **** 
  79:quantum/encoder.c ****         encoder_state[i] = (readPin(encoders_pad_a[i]) << 0) | (readPin(encoders_pad_b[i]) << 1);
  71               		.loc 1 79 9 view .LVU12
  72               		.loc 1 79 29 is_stmt 0 view .LVU13
  73 0008 86B1      		in r24,0x6
  74 000a 90E0      		ldi r25,0
  75 000c 880F      		lsl r24
  76 000e 892F      		mov r24,r25
  77 0010 881F      		rol r24
  78 0012 990B      		sbc r25,r25
  79               		.loc 1 79 62 view .LVU14
  80 0014 6699      		sbic 0xc,6
  81 0016 00C0      		rjmp .L5
  82 0018 20E0      		ldi r18,0
  83               	.L4:
  84               		.loc 1 79 62 discriminator 4 view .LVU15
  85 001a 822B      		or r24,r18
  86               		.loc 1 79 26 discriminator 4 view .LVU16
  87 001c 8093 0000 		sts encoder_state,r24
  75:quantum/encoder.c ****         setPinInputHigh(encoders_pad_a[i]);
  88               		.loc 1 75 45 is_stmt 1 discriminator 4 view .LVU17
  89               	.LVL4:
  75:quantum/encoder.c ****         setPinInputHigh(encoders_pad_a[i]);
  90               		.loc 1 75 21 discriminator 4 view .LVU18
  91               	/* epilogue start */
  92               	.LBE2:
  80:quantum/encoder.c ****     }
  81:quantum/encoder.c **** 
  82:quantum/encoder.c **** #ifdef SPLIT_KEYBOARD
  83:quantum/encoder.c ****     thisHand = isLeftHand ? 0 : NUMBER_OF_ENCODERS;
  84:quantum/encoder.c ****     thatHand = NUMBER_OF_ENCODERS - thisHand;
  85:quantum/encoder.c **** #endif
  86:quantum/encoder.c **** }
  93               		.loc 1 86 1 is_stmt 0 discriminator 4 view .LVU19
  94 0020 0895      		ret
  95               	.LVL5:
  96               	.L5:
  97               	.LBB3:
  79:quantum/encoder.c ****     }
  98               		.loc 1 79 62 view .LVU20
  99 0022 22E0      		ldi r18,lo8(2)
 100 0024 00C0      		rjmp .L4
 101               	.LBE3:
 102               		.cfi_endproc
 103               	.LFE114:
 105               		.section	.text.encoder_read,"ax",@progbits
 106               	.global	encoder_read
 108               	encoder_read:
 109               	.LFB116:
  87:quantum/encoder.c **** 
  88:quantum/encoder.c **** static void encoder_update(int8_t index, uint8_t state) {
  89:quantum/encoder.c ****     uint8_t i = index;
  90:quantum/encoder.c **** #ifdef SPLIT_KEYBOARD
  91:quantum/encoder.c ****     index += thisHand;
  92:quantum/encoder.c **** #endif
  93:quantum/encoder.c ****     encoder_pulses[i] += encoder_LUT[state & 0xF];
  94:quantum/encoder.c ****     if (encoder_pulses[i] >= ENCODER_RESOLUTION) {
  95:quantum/encoder.c ****         encoder_value[index]++;
  96:quantum/encoder.c ****         encoder_update_kb(index, ENCODER_COUNTER_CLOCKWISE);
  97:quantum/encoder.c ****     }
  98:quantum/encoder.c ****     if (encoder_pulses[i] <= -ENCODER_RESOLUTION) {  // direction is arbitrary here, but this clock
  99:quantum/encoder.c ****         encoder_value[index]--;
 100:quantum/encoder.c ****         encoder_update_kb(index, ENCODER_CLOCKWISE);
 101:quantum/encoder.c ****     }
 102:quantum/encoder.c ****     encoder_pulses[i] %= ENCODER_RESOLUTION;
 103:quantum/encoder.c **** }
 104:quantum/encoder.c **** 
 105:quantum/encoder.c **** void encoder_read(void) {
 110               		.loc 1 105 25 is_stmt 1 view -0
 111               		.cfi_startproc
 112               	/* prologue: function */
 113               	/* frame size = 0 */
 114               	/* stack size = 0 */
 115               	.L__stack_usage = 0
 106:quantum/encoder.c ****     for (uint8_t i = 0; i < NUMBER_OF_ENCODERS; i++) {
 116               		.loc 1 106 5 view .LVU22
 117               	.LBB7:
 118               		.loc 1 106 10 view .LVU23
 119               	.LVL6:
 120               		.loc 1 106 25 view .LVU24
 107:quantum/encoder.c ****         encoder_state[i] <<= 2;
 121               		.loc 1 107 9 view .LVU25
 122               		.loc 1 107 26 is_stmt 0 view .LVU26
 123 0000 E091 0000 		lds r30,encoder_state
 124 0004 EE0F      		lsl r30
 125 0006 EE0F      		lsl r30
 126 0008 E093 0000 		sts encoder_state,r30
 108:quantum/encoder.c ****         encoder_state[i] |= (readPin(encoders_pad_a[i]) << 0) | (readPin(encoders_pad_b[i]) << 1);
 127               		.loc 1 108 9 is_stmt 1 view .LVU27
 128               		.loc 1 108 30 is_stmt 0 view .LVU28
 129 000c 86B1      		in r24,0x6
 130 000e 90E0      		ldi r25,0
 131 0010 880F      		lsl r24
 132 0012 892F      		mov r24,r25
 133 0014 881F      		rol r24
 134 0016 990B      		sbc r25,r25
 135               		.loc 1 108 66 view .LVU29
 136 0018 4CB1      		in r20,0xc
 137               		.loc 1 108 93 view .LVU30
 138 001a 46FB      		bst r20,6
 139 001c 2227      		clr r18
 140 001e 20F9      		bld r18,0
 141 0020 46FF      		sbrs r20,6
 142 0022 00C0      		rjmp .L7
 143 0024 22E0      		ldi r18,lo8(2)
 144 0026 30E0      		ldi r19,0
 145               	.L7:
 146               		.loc 1 108 63 discriminator 4 view .LVU31
 147 0028 822B      		or r24,r18
 148               		.loc 1 108 26 discriminator 4 view .LVU32
 149 002a E82B      		or r30,r24
 150 002c E093 0000 		sts encoder_state,r30
 109:quantum/encoder.c ****         encoder_update(i, encoder_state[i]);
 151               		.loc 1 109 9 is_stmt 1 discriminator 4 view .LVU33
 152               	.LVL7:
 153               	.LBB8:
 154               	.LBI8:
  88:quantum/encoder.c ****     uint8_t i = index;
 155               		.loc 1 88 13 discriminator 4 view .LVU34
 156               	.LBB9:
  89:quantum/encoder.c **** #ifdef SPLIT_KEYBOARD
 157               		.loc 1 89 5 discriminator 4 view .LVU35
  93:quantum/encoder.c ****     if (encoder_pulses[i] >= ENCODER_RESOLUTION) {
 158               		.loc 1 93 5 discriminator 4 view .LVU36
  93:quantum/encoder.c ****     if (encoder_pulses[i] >= ENCODER_RESOLUTION) {
 159               		.loc 1 93 44 is_stmt 0 discriminator 4 view .LVU37
 160 0030 EF70      		andi r30,lo8(15)
 161               	.LVL8:
  93:quantum/encoder.c ****     if (encoder_pulses[i] >= ENCODER_RESOLUTION) {
 162               		.loc 1 93 44 discriminator 4 view .LVU38
 163 0032 F0E0      		ldi r31,0
  93:quantum/encoder.c ****     if (encoder_pulses[i] >= ENCODER_RESOLUTION) {
 164               		.loc 1 93 37 discriminator 4 view .LVU39
 165 0034 E050      		subi r30,lo8(-(encoder_LUT))
 166 0036 F040      		sbci r31,hi8(-(encoder_LUT))
  93:quantum/encoder.c ****     if (encoder_pulses[i] >= ENCODER_RESOLUTION) {
 167               		.loc 1 93 23 discriminator 4 view .LVU40
 168 0038 8081      		ld r24,Z
 169 003a 9091 0000 		lds r25,encoder_pulses
 170 003e 890F      		add r24,r25
 171 0040 8093 0000 		sts encoder_pulses,r24
  94:quantum/encoder.c ****         encoder_value[index]++;
 172               		.loc 1 94 5 is_stmt 1 discriminator 4 view .LVU41
  94:quantum/encoder.c ****         encoder_value[index]++;
 173               		.loc 1 94 8 is_stmt 0 discriminator 4 view .LVU42
 174 0044 8430      		cpi r24,lo8(4)
 175 0046 04F0      		brlt .L8
  95:quantum/encoder.c ****         encoder_update_kb(index, ENCODER_COUNTER_CLOCKWISE);
 176               		.loc 1 95 9 is_stmt 1 view .LVU43
  95:quantum/encoder.c ****         encoder_update_kb(index, ENCODER_COUNTER_CLOCKWISE);
 177               		.loc 1 95 29 is_stmt 0 view .LVU44
 178 0048 8091 0000 		lds r24,encoder_value
 179 004c 8F5F      		subi r24,lo8(-(1))
 180 004e 8093 0000 		sts encoder_value,r24
  96:quantum/encoder.c ****     }
 181               		.loc 1 96 9 is_stmt 1 view .LVU45
 182 0052 60E0      		ldi r22,0
 183 0054 80E0      		ldi r24,0
 184 0056 0E94 0000 		call encoder_update_kb
 185               	.LVL9:
 186               	.L8:
  98:quantum/encoder.c ****         encoder_value[index]--;
 187               		.loc 1 98 5 view .LVU46
  98:quantum/encoder.c ****         encoder_value[index]--;
 188               		.loc 1 98 8 is_stmt 0 view .LVU47
 189 005a 8091 0000 		lds r24,encoder_pulses
 190 005e 8D3F      		cpi r24,lo8(-3)
 191 0060 04F4      		brge .L9
  99:quantum/encoder.c ****         encoder_update_kb(index, ENCODER_CLOCKWISE);
 192               		.loc 1 99 9 is_stmt 1 view .LVU48
  99:quantum/encoder.c ****         encoder_update_kb(index, ENCODER_CLOCKWISE);
 193               		.loc 1 99 29 is_stmt 0 view .LVU49
 194 0062 8091 0000 		lds r24,encoder_value
 195 0066 8150      		subi r24,lo8(-(-1))
 196 0068 8093 0000 		sts encoder_value,r24
 100:quantum/encoder.c ****     }
 197               		.loc 1 100 9 is_stmt 1 view .LVU50
 198 006c 61E0      		ldi r22,lo8(1)
 199 006e 80E0      		ldi r24,0
 200 0070 0E94 0000 		call encoder_update_kb
 201               	.LVL10:
 202               	.L9:
 102:quantum/encoder.c **** }
 203               		.loc 1 102 5 view .LVU51
 102:quantum/encoder.c **** }
 204               		.loc 1 102 23 is_stmt 0 view .LVU52
 205 0074 8091 0000 		lds r24,encoder_pulses
 206 0078 8378      		andi r24,lo8(-125)
 207 007a 87FF      		sbrs r24,7
 208 007c 00C0      		rjmp .L10
 209 007e 8150      		subi r24,lo8(-(-1))
 210 0080 8C6F      		ori r24,lo8(-4)
 211 0082 8F5F      		subi r24,lo8(-(1))
 212               	.L10:
 213 0084 8093 0000 		sts encoder_pulses,r24
 214               	.LVL11:
 102:quantum/encoder.c **** }
 215               		.loc 1 102 23 view .LVU53
 216               	.LBE9:
 217               	.LBE8:
 106:quantum/encoder.c ****         encoder_state[i] <<= 2;
 218               		.loc 1 106 25 is_stmt 1 view .LVU54
 219               	/* epilogue start */
 220               	.LBE7:
 110:quantum/encoder.c ****     }
 111:quantum/encoder.c **** }
 221               		.loc 1 111 1 is_stmt 0 view .LVU55
 222 0088 0895      		ret
 223               		.cfi_endproc
 224               	.LFE116:
 226               		.section	.bss.encoder_value,"aw",@nobits
 229               	encoder_value:
 230 0000 00        		.zero	1
 231               		.section	.bss.encoder_pulses,"aw",@nobits
 234               	encoder_pulses:
 235 0000 00        		.zero	1
 236               		.section	.bss.encoder_state,"aw",@nobits
 239               	encoder_state:
 240 0000 00        		.zero	1
 241               		.section	.rodata.encoder_LUT,"a"
 244               	encoder_LUT:
 245 0000 00        		.byte	0
 246 0001 FF        		.byte	-1
 247 0002 01        		.byte	1
 248 0003 00        		.byte	0
 249 0004 01        		.byte	1
 250 0005 00        		.byte	0
 251 0006 00        		.byte	0
 252 0007 FF        		.byte	-1
 253 0008 FF        		.byte	-1
 254 0009 00        		.byte	0
 255 000a 00        		.byte	0
 256 000b 01        		.byte	1
 257 000c 00        		.byte	0
 258 000d 01        		.byte	1
 259 000e FF        		.byte	-1
 260 000f 00        		.byte	0
 261               		.text
 262               	.Letext0:
 263               		.file 2 "/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/stdint.h"
 264               		.file 3 "/usr/local/Cellar/avr-gcc@8/8.4.0/lib/avr-gcc/8/gcc/avr/8.4.0/include/stddef.h"
 265               		.file 4 "tmk_core/common/keyboard.h"
 266               		.file 5 "tmk_core/common/action.h"
 267               		.file 6 "lib/lufa/LUFA/Drivers/USB/Core/AVR8/../StdRequestType.h"
 268               		.file 7 "lib/lufa/LUFA/Drivers/USB/Core/AVR8/../DeviceStandardReq.h"
 269               		.file 8 "lib/lufa/LUFA/Drivers/USB/Core/USBTask.h"
 270               		.file 9 "lib/lufa/LUFA/Drivers/USB/Core/HostStandardReq.h"
 271               		.file 10 "/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/stdio.h"
 272               		.file 11 "tmk_core/common/report.h"
 273               		.file 12 "tmk_core/common/host.h"
 274               		.file 13 "tmk_core/common/debug.h"
 275               		.file 14 "quantum/keycode_config.h"
 276               		.file 15 "quantum/keymap.h"
 277               		.file 16 "./quantum/color.h"
 278               		.file 17 "quantum/rgblight.h"
 279               		.file 18 "tmk_core/common/action_layer.h"
 280               		.file 19 "tmk_core/common/timer.h"
 281               		.file 20 "tmk_core/common/action_util.h"
 282               		.file 21 "/usr/local/Cellar/avr-gcc@8/8.4.0/avr/include/stdlib.h"
 283               		.file 22 "quantum/process_keycode/process_unicode_common.h"
 284               		.file 23 "quantum/quantum.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 encoder.c
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccwebAqe.s:2      *ABS*:000000000000003e __SP_H__
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccwebAqe.s:3      *ABS*:000000000000003d __SP_L__
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccwebAqe.s:4      *ABS*:000000000000003f __SREG__
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccwebAqe.s:5      *ABS*:0000000000000000 __tmp_reg__
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccwebAqe.s:6      *ABS*:0000000000000001 __zero_reg__
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccwebAqe.s:13     .text.encoder_update_user:0000000000000000 encoder_update_user
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccwebAqe.s:33     .text.encoder_update_kb:0000000000000000 encoder_update_kb
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccwebAqe.s:52     .text.encoder_init:0000000000000000 encoder_init
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccwebAqe.s:239    .bss.encoder_state:0000000000000000 encoder_state
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccwebAqe.s:108    .text.encoder_read:0000000000000000 encoder_read
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccwebAqe.s:244    .rodata.encoder_LUT:0000000000000000 encoder_LUT
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccwebAqe.s:234    .bss.encoder_pulses:0000000000000000 encoder_pulses
/var/folders/_9/m54r6fns3hz487qfhcdsxzvr0000gn/T//ccwebAqe.s:229    .bss.encoder_value:0000000000000000 encoder_value

UNDEFINED SYMBOLS
__do_copy_data
__do_clear_bss
